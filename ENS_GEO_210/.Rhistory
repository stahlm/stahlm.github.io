sphere_shade(texture = "imhof4") %>%
#add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
add_overlay(generate_polygon_overlay(shape_watershed,
linecolor = "blue",
extent = raster::extent(elev_img), heightmap = elmat),
alphalayer=0.7)  %>%
plot_3d(elmat, zscale = 1, fov = 0, theta = -30, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
#render_depth(focus = 0.6, focallength = 10, clear = TRUE)
render_snapshot(clear=TRUE)
x_vec <- seq(1,100)
x_vec <- seq(1,100)
x_vec <- seq(1,100)
x_vec <- seq(1,100)
y_vec <- seq(1,100)
a <- seq(1,5)
rep(a,5)
rep(a,times = 5)
rep(a,each = 5)
y_mat <- rep(y_vec, each = 100)
x_mat <- rep(x_vec, times = 100)
library(tidyverse)
mat_coords <- as_tibble(x = x_mat, y = y_mat)
mat_coords <- tibble(x = x_mat, y = y_mat)
View(mat_coords)
volcano
a<-volcano
View(a)
a <- as.matrix(y_mat, nrow = 100, ncol = 1)
View(a)
a <- as.matrix(y_mat, nrow = 100, ncol = 100)
View(a)
a <- matrix(y_mat, nrow = 100, ncol = 100)
a <- matrix(y_mat, nrow = 100, ncol = 100, byrow = T)
mat_coords %>%
ggplot(aes(x = x, y = y, z = y)) +
geom_contour()
mat_coords %>%
ggplot(aes(x = x, y = y, z = y*x)) +
geom_contour()
library(tidyverse)
library(rayshader)
mat_coords %>%
ggplot(aes(x = x, y = y, z = y*x)) +
geom_contour_filled()
fig_1 <- mat_coords %>%
ggplot(aes(x = x, y = y, z = y*x)) +
geom_contour_filled()
fig_1
plot_gg(fig_1,multicore=TRUE,width=5,height=5,scale=250)
fig_1 <- mat_coords %>%
ggplot(aes(x = x, y = y, color = y*x)) +
geom_contour_filled()
fig_1
fig_1 <- mat_coords %>%
ggplot(aes(x = x, y = y, color = y*x)) +
geom_raster()
fig_1
fig_1 <- mat_coords %>%
ggplot(aes(x = x, y = y, fill = y*x)) +
geom_raster()
fig_1
plot_gg(fig_1,multicore=TRUE,width=5,height=5,scale=250)
mat_coords <- tibble(x = x_mat, y = y_mat, w1_dist = ((well_1_loc[1] - x)^2 + (well_1_loc[2] - y)^2)^0.5)
well_1_loc <- c(50, 50) # x and y coords
mat_coords <- tibble(x = x_mat, y = y_mat, w1_dist = ((well_1_loc[1] - x)^2 + (well_1_loc[2] - y)^2)^0.5)
((49^2)*2)^0.5
x_vec <- seq(0.5,y_length)
y_length <- 100
x_length <- y_length
x_vec <- seq(0.5,y_length)
x_vec
x_vec <- seq(0,y_length)
x_vec
library(tidyverse)
library(rayshader)
library(stars)
library(tmap)
library(plot3D)
volcano_elev <- volcano
persp3D(z = Volcano, contour = list(side = c("zmax", "z")), zlim= c(90, 300),
phi = 30, theta = 20, d = 10, box = FALSE)
persp3D(z = volcano_elev, contour = list(side = c("zmax", "z")), zlim= c(90, 300),
phi = 30, theta = 20, d = 10, box = FALSE)
filled.contour(volcano, color.palette = terrain.colors, asp = 1)
View(volcano_elev)
persp3D(z = volcano_elev, contour = list(side = c("zmax", "z")), zlim= c(90, 300),
phi = 30, theta = 20, d = 10, box = FALSE)
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo = F)
library(tidyverse)
library(rayshader)
library(stars)
library(tmap)
library(plot3D)
volcano_elev <- volcano
filled.contour(volcano, color.palette = terrain.colors, asp = 1)
image2D(Volcano, contour = TRUE)
image2D(volcano_elev, contour = TRUE)
image2D(volcano_elev, contour = TRUE, col = terrain.colors)
image2D(volcano_elev, contour = TRUE, col = "terrain.colors")
image2D(volcano_elev, contour = TRUE, col = "black")
image2D(volcano_elev, contour = TRUE, col = hcl.colors(100, "terrain") )
persp3D(z = volcano_elev, contour = list(side = c("zmax", "z")), zlim= c(90, 300),
col = hcl.colors(100, "terrain"),
phi = 30, theta = 20, d = 10, box = FALSE)
image2D(volcano_elev, contour = F, col = hcl.colors(100, "terrain") )
image2D(volcano_elev, contour = F, col = hcl.colors(100, "terrain") ) + coord_equal()
library(rayshader)
volcano_elev %>%
sphere_shade() %>%
add_shadow(ray_shade(volcano_elev,zscale=3),0.3) %>%
plot_3d(volcano, zscale=3, fov=30)
library(rayshader)
volcano_elev %>%
sphere_shade() %>%
add_shadow(ray_shade(volcano_elev,zscale=3),0.3) %>%
add_overlay(generate_contour_overlay(volcano_elev, linewidth = 2))  %>%
plot_3d(volcano, zscale=3, fov=30)
library(rayshader)
volcano_elev %>%
sphere_shade() %>%
add_shadow(ray_shade(volcano_elev,zscale=3),0.3) %>%
add_overlay(generate_contour_overlay(volcano_elev, linewidth = 1))  %>%
plot_3d(volcano, zscale=3, fov=30)
library(rayshader)
volcano_elev %>%
sphere_shade() %>%
add_shadow(ray_shade(volcano_elev,zscale=3),0.3) %>%
add_overlay(generate_contour_overlay(volcano_elev, linewidth = 1))  %>%
plot_3d(volcano, zscale=3, fov=30)
library(rayshader)
volcano_elev %>%
sphere_shade() %>%
add_shadow(ray_shade(volcano_elev,zscale=3),0.3) %>%
add_overlay(generate_contour_overlay(volcano_elev, linewidth = 0.5)  %>%
plot_3d(volcano, zscale=3, fov=30)
library(rayshader)
volcano_elev %>%
sphere_shade() %>%
add_shadow(ray_shade(volcano_elev,zscale=3),0.3) %>%
add_overlay(generate_contour_overlay(volcano_elev, linewidth = 0.5))  %>%
plot_3d(volcano, zscale=3, fov=30)
volcano_elev %>%
sphere_shade(texture = "imhof4") %>%
add_shadow(ray_shade(volcano_elev, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(volcano_elev), 0) %>%
add_overlay(generate_contour_overlay(volcano_elev, linewidth = 2))  %>%
plot_3d(volcano_elev, zscale = 1, fov = 0, theta = -30, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
#render_depth(focus = 0.6, focallength = 10, clear = TRUE)
render_snapshot(clear=TRUE)
volcano_elev %>%
sphere_shade(texture = "imhof4") %>%
add_shadow(ray_shade(volcano_elev, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(volcano_elev), 0) %>%
add_overlay(generate_contour_overlay(volcano_elev, linewidth = 0.2))  %>%
plot_3d(volcano_elev, zscale = 1, fov = 0, theta = -30, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
#render_depth(focus = 0.6, focallength = 10, clear = TRUE)
render_snapshot(clear=TRUE)
volcano_elev %>%
sphere_shade(texture = "imhof4") %>%
add_shadow(ray_shade(volcano_elev, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(volcano_elev), 0) %>%
add_overlay(generate_contour_overlay(volcano_elev, linewidth = 0.2))  %>%
plot_3d(volcano_elev, zscale = 1, fov = 0, theta = -30, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
#render_depth(focus = 0.6, focallength = 10, clear = TRUE)
render_snapshot(clear=TRUE)
volcano_elev %>%
sphere_shade() %>%
add_shadow(ray_shade(volcano_elev,zscale=3),0.3) %>%
#add_overlay(generate_contour_overlay(volcano_elev, linewidth = 0.5))  %>%
plot_3d(volcano, zscale=3, fov=30)
rgl::rglwidget()
rgl::rgl.close()
surface <- reshape2::melt(volcano)
ggplot(surface, aes(Var1, Var2, z = value)) +
geom_contour_fill() +
geom_contour(color = "black", size = 0.1)
library(tidyverse)
library(rayshader)
library(stars)
library(tmap)
library(plot3D)
surface <- reshape2::melt(volcano)
ggplot(surface, aes(Var1, Var2, z = value)) +
geom_contour_fill() +
geom_contour(color = "black", size = 0.1)
surface <- reshape2::melt(volcano)
ggplot(surface, aes(Var1, Var2, z = value)) +
#geom_contour_fill() +
geom_contour(color = "black", size = 0.1)
surface <- reshape2::melt(volcano)
ggplot(surface, aes(Var1, Var2, z = value)) +
geom_raster(surface, aes(Var1, Var2, z = value)) +
geom_contour(color = "black", size = 0.1)
surface <- reshape2::melt(volcano)
ggplot(surface, aes(Var1, Var2, z = value)) +
geom_raster() +
geom_contour(color = "black", size = 0.1)
View(surface)
surface <- reshape2::melt(volcano)
ggplot(surface, aes(Var1, Var2, z = value)) +
geom_raster(aes(Var1, Var2, fill = value)) +
geom_contour(color = "black", size = 0.1)
surface <- reshape2::melt(volcano)
ggplot(surface, aes(Var1, Var2, z = value)) +
geom_raster(aes(Var1, Var2, fill = value)) +
scale_fill_gradientn(colours = terrain.colors(10)) +
geom_contour(color = "black", size = 0.1)
surface <- reshape2::melt(volcano)
ggplot(surface, aes(Var1, Var2, z = value)) +
geom_raster(aes(Var1, Var2, fill = value)) +
scale_fill_gradientn(colours = terrain.colors(20)) +
geom_contour(color = "black", size = 0.1)
surface <- reshape2::melt(volcano)
plot_volcano_3D <- ggplot(surface, aes(Var1, Var2, z = value)) +
geom_raster(aes(Var1, Var2, fill = value)) +
scale_fill_gradientn(colours = terrain.colors(20))
rayshader::plot_gg(plot_volcano_3D , max_error = 0.005,
multicore=TRUE,
width=7,height=7,scale=200)
rgl::rglwidget()
rgl::rgl.close()
rayshader::plot_gg(plot_volcano_3D , max_error = 0.005,
multicore=TRUE,
width=7,height=7,scale=600)
rgl::rglwidget()
rgl::rgl.close()
volcano %>%
sphere_shade() %>%
add_shadow(ray_shade(volcano,zscale=3),0.3) %>%
#add_overlay(generate_contour_overlay(volcano_elev, linewidth = 0.5))  %>%
plot_3d(volcano, zscale=3, fov=30)
rgl::rglwidget()
rgl::rgl.close()
volcano %>%
sphere_shade(texture = "bw") %>%
add_shadow(ray_shade(volcano,zscale=3),0.3) %>%
#add_overlay(generate_contour_overlay(volcano_elev, linewidth = 0.5))  %>%
plot_3d(volcano, zscale=3, fov=30)
rgl::rglwidget()
rgl::rgl.close()
volcano %>%
sphere_shade(texture = "desert") %>%
add_shadow(ray_shade(volcano,zscale=3),0.3) %>%
#add_overlay(generate_contour_overlay(volcano_elev, linewidth = 0.5))  %>%
plot_3d(volcano, zscale=3, fov=30)
rgl::rglwidget()
rgl::rgl.close()
persp3D(z = volcano, contour = list(side = c("zmax", "z")), zlim= c(90, 300),
col = hcl.colors(100, "terrain"),
phi = 30, theta = 20, d = 10, box = FALSE)
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo = F,
fig.width = 9, fig.height = 6)
pacman::p_load("sf", "tidyverse", "tmap", "spData")
shape_aquifers <- st_read("../data/principal_aquifers/aquifrp025.shp",
stringsAsFactors = FALSE)
shape_alluvial_aquifers <- st_read("../data/principal_aquifers/alvaqfp025.shp",
stringsAsFactors = FALSE)
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo = F,
fig.width = 9, fig.height = 6)
pacman::p_load("sf", "tidyverse", "tmap", "spData")
shape_aquifers <- st_read("../data/principal_aquifers/aquifrp025.shp",
stringsAsFactors = FALSE)
shape_alluvial_aquifers <- st_read("../data/principal_aquifers/alvaqfp025.shp",
stringsAsFactors = FALSE)
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo = F)
library(tidyverse)
library(rayshader)
library(stars)
library(tmap)
elev_file <- file.path("../data", "lishakill-elevation.tif")
raster_elev <- raster::raster(elev_file)
raster_elev <- raster::aggregate(raster_elev, fact = 3)
raster::writeRaster(raster_elev, "../data/lishakill-elevation-lowres.tif", overwrite = T)
stars_elev <- stars::read_stars("../data/lishakill-elevation-lowres.tif")
#sat_vis <- read_stars(img_vis, RasterIO = list(nBufXSize = 600, nBufYSize = 600))
shape_watershed <- st_read("../data/lisha_kill_watershed/area-of-interest.shp", stringsAsFactors = FALSE)
shape_aquifers <- st_read("../data/principal_aquifers/aquifrp025.shp",
stringsAsFactors = FALSE)
shape_alluvial_aquifers <- st_read("../data/principal_aquifers/alvaqfp025.shp",
stringsAsFactors = FALSE)
View(shape_alluvial_aquifers)
View(shape_aquifers)
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo = F,
fig.width = 9, fig.height = 6)
pacman::p_load("sf", "tidyverse", "tmap", "spData")
shape_aquifers <- st_read("../data/principal_aquifers/aquifrp025.shp",
stringsAsFactors = FALSE)
shape_alluvial_aquifers <- st_read("../data/principal_aquifers/alvaqfp025.shp",
stringsAsFactors = FALSE)
shape_aquifers <- shape_aquifers %>%
mutate(ROCK_NAME = if_else(is.na(ROCK_NAME), AQ_NAME, ROCK_NAME) )
tmap_mode(mode = "view")
map_principal <- us_states %>%
tm_shape(projection = 2163) +
tm_borders("black") +
tm_shape(shape_aquifers) +
tm_fill(col = "ROCK_NAME", alpha = 0.5, legend.show = F) +
tm_basemap(c("Esri.WorldImagery", "Esri.NatGeoWorldMap","OpenStreetMap") )
map_principal
tmap_mode(mode = "plot")
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo = F,
fig.width = 9, fig.height = 6)
pacman::p_load("sf", "tidyverse", "tmap", "spData")
shape_aquifers <- st_read("../data/principal_aquifers/aquifrp025.shp",
stringsAsFactors = FALSE)
shape_alluvial_aquifers <- st_read("../data/principal_aquifers/alvaqfp025.shp",
stringsAsFactors = FALSE)
View(shape_aquifers)
library(tidyverse)
library(rayshader)
library(stars)
library(tmap)
shape_watershed <- st_read("../data/lisha_kill_watershed/area-of-interest.shp", stringsAsFactors = FALSE)
library(tidyverse)
date_start <- "2019-01-01"
date_end <- "2019-12-31"
# Download daily USGS 01348000 EAST CANADA CREEK AT EAST CREEK NY
data_streamflow <- dataRetrieval::readNWISdv(siteNumbers = "01348000",
parameterCd  ="00060",
startDate = date_start, endDate = date_end)
data_gw <- dataRetrieval::readNWISdv(siteNumbers = "430930074290301",
parameterCd  ="72019",
startDate = date_start, endDate = date_end)
View(data_gw)
test <- readr::read_csv("http://data.cocorahs.org/export/exportreports.aspx?ReportType=Daily&dtf=1&Format=CSV&State=NY&County=HR&ReportDateType=reportdate&StartDate=1/1/2019&EndDate=12/31/2019&TimesInGMT=False")
View(test)
data_precip <- readr::read_csv("http://data.cocorahs.org/export/exportreports.aspx?ReportType=Daily&dtf=1&Format=CSV&State=NY&County=HR&ReportDateType=reportdate&StartDate=1/1/2019&EndDate=12/31/2019&TimesInGMT=False")
data_precip <- data_precip %>%
mutate(TotalPrecipAmt = if_else(TotalPrecipAmt == "T", 0,TotalPrecipAmt))
data_precip <- data_precip %>%
mutate(TotalPrecipAmt = if_else(TotalPrecipAmt == "T", 0,as.numeric(TotalPrecipAmt)))
View(data_precip)
data_precip <- readr::read_csv("http://data.cocorahs.org/export/exportreports.aspx?ReportType=Daily&dtf=1&Format=CSV&State=NY&County=HR&ReportDateType=reportdate&StartDate=1/1/2019&EndDate=12/31/2019&TimesInGMT=False")
data_precip <- data_precip %>%
mutate(PrecipAmt = if_else(TotalPrecipAmt == "T", 0,as.numeric(TotalPrecipAmt)))
data_precip <- readr::read_csv("http://data.cocorahs.org/export/exportreports.aspx?ReportType=Daily&dtf=1&Format=CSV&State=NY&County=HR&ReportDateType=reportdate&StartDate=1/1/2019&EndDate=12/31/2019&TimesInGMT=False")
data_precip <- data_precip %>%
mutate(TotalPrecipAmt = if_else(TotalPrecipAmt == "T", 0,as.numeric(TotalPrecipAmt)))
data_precip <- data_precip %>%
group_by(ObservationDate) %>%
summarize(Precip_inches = mean(TotalPrecipAmt, na.rm = T))
View(data_precip)
sum(data_precip$Precip_inches)
View(data_gw)
View(data_precip)
View(data_streamflow)
data_gw <- data_gw %>%
rename(depth_to_wt = X_72019_00003)
library(tidyverse)
date_start <- "2019-01-01"
date_end <- "2019-12-31"
# Download daily USGS 01348000 EAST CANADA CREEK AT EAST CREEK NY
data_streamflow <- dataRetrieval::readNWISdv(siteNumbers = "01348000",
parameterCd  ="00060",
startDate = date_start, endDate = date_end)
# Download daily USGS 01348000 EAST CANADA CREEK AT EAST CREEK NY
data_streamflow <- dataRetrieval::readNWISdv(siteNumbers = "01348000",
parameterCd  ="00060",
startDate = date_start, endDate = date_end)
library(tidyverse)
date_start <- "2019-01-01"
date_end <- "2019-12-31"
# Download daily USGS 01348000 EAST CANADA CREEK AT EAST CREEK NY
data_streamflow <- dataRetrieval::readNWISdv(siteNumbers = "01348000",
parameterCd  ="00060",
startDate = date_start, endDate = date_end)
# Download daily USGS 01348000 EAST CANADA CREEK AT EAST CREEK NY
data_streamflow <- dataRetrieval::readNWISdv(siteNumbers = "01348000",
parameterCd  ="00060",
startDate = date_start, endDate = date_end)
data_streamflow <- data_streamflow %>%
rename(streamflow__cfs = X_00060_00003)
library(tidyverse)
data_streamflow <- data_streamflow %>%
rename(streamflow__cfs = X_00060_00003)
data_gw <- dataRetrieval::readNWISdv(siteNumbers = "430930074290301",
parameterCd  ="72019",
startDate = date_start, endDate = date_end)
data_gw <- data_gw %>%
rename(depth_to_wt__ft = X_72019_00003)
data_precip <- readr::read_csv("http://data.cocorahs.org/export/exportreports.aspx?ReportType=Daily&dtf=1&Format=CSV&State=NY&County=HR&ReportDateType=reportdate&StartDate=1/1/2019&EndDate=12/31/2019&TimesInGMT=False")
data_precip <- data_precip %>%
mutate(TotalPrecipAmt = if_else(TotalPrecipAmt == "T", 0,as.numeric(TotalPrecipAmt))) %>%
rename(Precip__inches = TotalPrecipAmt)
data_precip <- data_precip %>%
group_by(ObservationDate) %>%
summarize(Precip__inches = mean(Precip__inches, na.rm = T))
data_precip <- data_precip %>%
select(Date = ObservationDate, Precip__inches)
data_streamflow <- data_streamflow %>%
select(Date, streamflow__cfs)
data_gw <- data_gw %>%
select(Date, depth_to_wt__ft)
data_all <- data_streamflow %>%
left_join(data_gw) %>%
left_join(data_precip)
View(data_all)
data_all_ts <- xts::xts(data_all[,2:4], order.by = data_all$Date)
View(data_all_ts)
dygraph(data_all_ts,
ylab = "Precip [inches]", group = "hydro") %>%
dySeries("Precip__inches", label = "Precipitation", stepPlot = T) %>%
dyRangeSelector(height = 40) %>%
dyOptions(drawGrid = T)
library(dygraphs)
dygraph(data_all_ts,
ylab = "Precip [inches]", group = "hydro") %>%
dySeries("Precip__inches", label = "Precipitation", stepPlot = T) %>%
dyRangeSelector(height = 40) %>%
dyOptions(drawGrid = T)
dygraph(data_all_ts[,3],
ylab = "Precip [inches]", group = "hydro") %>%
dySeries("Precip__inches", label = "Precipitation", stepPlot = T) %>%
dyRangeSelector(height = 40) %>%
dyOptions(drawGrid = T)
dygraph(data_all_ts[,1],
ylab = "Streamflow [cfs]", group = "hydro") %>%
dySeries("streamflow__cfs", label = "Streamflow", stepPlot = F) %>%
dyRangeSelector(height = 40) %>%
dyOptions(drawGrid = T)
View(data_gw)
dygraph(data_all_ts[,2],
ylab = "Depth to groundwater [ft]", group = "hydro") %>%
dySeries("depth_to_wt__ft", label = "Groundwater level", stepPlot = F) %>%
dyRangeSelector(height = 40) %>%
dyOptions(drawGrid = T)
dygraph(data_all_ts[,2],
ylab = "Depth to groundwater [ft]", group = "hydro") %>%
dySeries("-depth_to_wt__ft", label = "Groundwater level", stepPlot = F) %>%
dyRangeSelector(height = 40) %>%
dyOptions(drawGrid = T)
dygraph(data_all_ts[,2],
ylab = "Depth to groundwater [ft]", group = "hydro") %>%
dySeries(-"depth_to_wt__ft", label = "Groundwater level", stepPlot = F) %>%
dyRangeSelector(height = 40) %>%
dyOptions(drawGrid = T)
dygraph(data_all_ts[,2],
ylab = "Depth to groundwater [ft]", group = "hydro") %>%
dySeries("depth_to_wt__ft", label = "Groundwater level", stepPlot = F) %>%
dyRangeSelector(height = 40) %>%
dyOptions(drawGrid = T)
knitr::opts_chunk$set(echo = FALSE, warning=FALSE)
readRDS(file = "s_se_asia_map.rds")
library(tidyverse)
library(leaflet)
library(tmap)
library(sf)
pacman::p_load("sf", "tidyverse", "tmap", "spData")
shape_aquifers <- st_read("../data/principal_aquifers/aquifrp025.shp",
stringsAsFactors = FALSE)
shape_alluvial_aquifers <- st_read("../data/principal_aquifers/alvaqfp025.shp",
stringsAsFactors = FALSE)
shape_aquifers <- st_read("../data/principal_aquifers/aquifrp025.shp",
stringsAsFactors = FALSE)
shape_alluvial_aquifers <- st_read("../data/principal_aquifers/alvaqfp025.shp",
stringsAsFactors = FALSE)
shape_aquifers <- shape_aquifers %>%
mutate(ROCK_NAME = if_else(is.na(ROCK_NAME), AQ_NAME, ROCK_NAME) )
tmap_mode(mode = "view")
map_principal <- us_states %>%
tm_shape(projection = 2163) +
tm_borders("black") +
tm_shape(shape_aquifers) +
tm_fill(col = "ROCK_NAME", alpha = 0.5, legend.show = F,
popup.vars = c("Aquifer" = "AQ_NAME", "Rock type" = "ROCK_NAME")) +
tm_basemap(c("Esri.WorldImagery", "Esri.NatGeoWorldMap","OpenStreetMap") )
map_principal
pacman::p_load("sf", "tidyverse", "tmap", "spData")
shape_aquifers <- st_read("../data/principal_aquifers/aquifrp025.shp",
stringsAsFactors = FALSE)
shape_alluvial_aquifers <- st_read("../data/principal_aquifers/alvaqfp025.shp",
stringsAsFactors = FALSE)
unique(shape_aquifers$ROCK_TYPE)
unique(shape_aquifers$``)
unique(shape_aquifers$ROCK_NAME)
unique(shape_aquifers$AQ_NAME)
unique(shape_aquifers$AQ_CODE)
unique(shape_alluvial_aquifers$ROCK_NAME)
unique(shape_alluvial_aquifers$ALVAQFP025)
unique(shape_alluvial_aquifers$AQ_NAME)
# https://docs.ropensci.org/rnoaa/
library(rnoaa)
library(tidyverse)
library(dataRetrieval)
library(dygraphs)
options(noaakey = "ySScowvUvSoxSXYVKOXDnyOJSCKnUiEo")
date_start <- "2005-01-01"
date_end <- "2005-12-31"
# Download precipitation data from Albany Airport (GHCND:USW00014735)
with_units <- ncdc(datasetid='GHCND', stationid='GHCND:USW00014735', datatypeid='PRCP',
startdate = date_start, enddate = date_end,
limit=500, add_units = TRUE)
data_met <- with_units$data
a <- lcd(station = "WBAN:14735", year = 2015)
a <- lcd(station = "01338099999", year = 2015)
a <- lcd(station = "GHCND:USW00014735", year = 2015)
a <- lcd(station = "USW00014735", year = 2015)
a <- lcd(station = "00014735", year = 2015)
a <- lcd(station = "7251814735", year = 2015)
a <- lcd(station = "72518014735", year = 2015)
View(a)
a <- lcd(station = "72510094746", year = 2015)
View(a)
a <- lcd(station = "72519014771", year = 2020)
View(a)
2+2
