---
title: "Fog and Groundwater: Coastal Maine"
date: "`r format(Sys.time(), '%d %B, %Y')`"
author: "M. Stahl and J. Garver"
output:
  html_document:
    df_print: paged
    theme: spacelab
    toc: no
    toc_float: no
---
<br/>

```{r echo = F}
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo = F, fig.width = 8.5)
```


Below are some initial figures and maps related to the fog and groundwater sampling conducted in coastal Maine during summer 2020.

Additional notes and data are in the Fog Research shared Google Drive.  

```{r message=FALSE}

library(tidyverse)
library(dygraphs)
library(leaflet)
library(tmap)
library(sf)
library(plotly)
library(lubridate)
library(patchwork)
library(kableExtra)

source("./functions/angle_functions.R")


Sys.setenv(MAPBOX_API_KEY = "pk.eyJ1Ijoic3RhaGxtIiwiYSI6ImNrZnJiMDMxbDA0aGsyenFlajhvMzZ4bXUifQ.I7l7fJBAHCQWRwyYozq4ZQ")
```

## Load in sampling data

Load in files containing sample collection info/data (e.g., sampling locations, dates, amount collected, notes,...)
```{r}
fpath_sampling_info <- "./data/Fog_Sampling_Maine_2020_09_29.xlsx"
```

### Fog data 
```{r}
# load fog data
data_ME_fog <- readxl::read_xlsx(fpath_sampling_info,
                                 sheet = "Fog", skip = 10)
```



```{r}

data_ME_fog <- data_ME_fog %>% 
  select(Event, 
         Sample_ID = `Bottle Label`,
         Collection_start = `Collection Start`,
         Collection_end = `Collection End`,
         Amount__inches = `Amount of water in the gauge`,
         Notes
         )


data_ME_fog <- data_ME_fog %>% 
  mutate(Collection_start = lubridate::ymd_hms(Collection_start),
         Collection_end = lubridate::ymd_hms(Collection_end))
```


### Precip data (at Chipman Point)
```{r}
# load precip data
data_ME_precip <- readxl::read_xlsx(fpath_sampling_info,
                                 sheet = "Rain", skip = 10,
                                 col_types = c("text","text","date","date","numeric","text"))
```

```{r}
data_ME_precip <- data_ME_precip %>% 
  select(Event, 
         Sample_ID = `Bottle Label`,
         Collection_start = `Collection Start`,
         Collection_end = `Collection End`,
         Amount__inches = `Amount of water in the gauge`,
         Notes
         ) %>% 
  mutate(Collection_start = lubridate::ymd_hms(Collection_start),
         Collection_end = lubridate::ymd_hms(Collection_end))
```


### Groundwater data 

```{r}
# load GW data (Chipman Point)

data_ME_chipman_pt_gw <- readxl::read_xlsx(fpath_sampling_info,
                                 sheet = "Groundwater", skip = 10,
                                 col_types = c("text","text","date","text")
                                 )  %>% 
  rename(Collection_date = "Collection Date") 
```


```{r}
# load GW data (Transect)

data_ME_gw <- readxl::read_xlsx(fpath_sampling_info,
                                 sheet = "GW_transect", skip = 6) %>% 
  rename(Sample_ID = "Sample",
         Elev__ft = "Elev (ft)",
         Depth__ft = "Depth (ft)")
```



## Load in meteorological data 
```{r}
# Lookup table to convert wind direction from compass bearing to angle 

angles_tables <- readxl::read_xlsx("./data/Met_data_steuben/compass_angles.xlsx", 
                              sheet = "angles") %>% 
  rename(WindDirection = Direction,
         WindAngle = Angle)
```


```{r}
data_met <- readxl::read_xlsx("./data/Met_data_steuben/Met_station_KMESTEUB5.xlsx", 
                              sheet = "KMESTEUB5", skip = 7)
```

```{r}
data_met <- left_join(data_met,
                      angles_tables)
```


```{r}
data_met <- data_met %>% 
  select(-Date, -Time) %>% 
  select(DateTime, everything())
```

```{r}
data_met <- data_met %>% 
  mutate(DateTime = mdy_hms(DateTime))
```



## load in isotope data

Load in stable isotope $\delta^{2}H$ and $\delta^{18}O$ data for fog, groundwater, and rain samples analyzed in Union Stable Isotope Lab.


```{r}
fpath_isotope <- "./data/isotope_data/200918_TCEA_Stahl_2020_17 Bresett_2020_11_gehring ALL DATA.xlsx"
```


```{r}
data_isotopes <- readxl::read_xlsx(fpath_isotope,
                                   sheet = "ME_isotopes") %>% 
  rename(Sample_ID = "Identifier 1",
         d2H__permil = "dD")
```



## Analysis and figures

### Stable isotopes distributions between water sources 
```{r fig.width= 5, fig.height= 4}
fig_box <- data_isotopes %>% 
  ggplot(aes(x = reorder(Sample_type, -d2H__permil), y = d2H__permil,
             fill = Sample_type)) +
  scale_fill_manual(values = c("grey","darkgreen","blue")) +
  geom_boxplot(width = 0.5, outlier.shape = NA) +
  geom_jitter(height = 0, width = 0.2, color = "black", shape = 21,
              size = 2, alpha = 0.75) +
  labs(x = "", y = expression(paste( delta^{2},"H (permil)"))) +
  theme_bw() +
  theme(axis.text = element_text(size = 12),
        axis.title = element_text(size = 14),
        legend.position = "none")  

 fig_box
```

<br/>


### GW transect figures
```{r}
# Join GW isotopes data with sample metadata and generally prep for further analysis

isotope_gw_transect <- data_isotopes %>% 
  filter(Sample_type == "GW") %>% 
  separate(col = Sample_ID, into = c("Sample_ID", "A_B"), sep = " ") %>% 
  select(Sample_ID, Sample_type,d2H__permil) %>% 
  right_join(data_ME_gw)
```


#### Groundwater $\delta^{2}H$ vs. depth

```{r fig.width= 5, fig.height= 5}
fig_gw_depth <- isotope_gw_transect %>% 
  ggplot(aes(x = d2H__permil, y = Depth__ft)) +
  scale_y_reverse() +
  geom_point(fill = "darkgreen", color = "black", size = 3, shape = 21) +
  
  labs(y = "Depth (ft BLS)", x = expression(paste( delta^{2},"H (permil)"))) +
  theme_bw() +
  theme(axis.text = element_text(size = 12),
        axis.title = element_text(size = 14),
        legend.position = "none") 

fig_gw_depth

```




```{r eval = F}
isotope_gw_transect <- st_as_sf(isotope_gw_transect, coords = c("Long", "Lat"))
```


```{r eval = F}
symb_size <- 0.1
tmap_mode("view")

tm_shape(isotope_gw_transect) +
  tm_dots(col = "d2H__permil",
          border.col = "black",
          palette = "-RdBu",
          midpoint = NA,
          style = "cont",
          breaks = c(-55,-52,-50,-48,-46),
          shape = 21,
          size = symb_size,
          border.lwd = 0.4,
          popup.vars = c("Location","d2H__permil","Type","Depth__ft")) 
```

<br/> 


### Precipitation isotope figures

```{r}
# Join precip isotope data with sample metadata and generally prep for further analysis

isotopes_precip <- data_isotopes %>% 
  filter(Sample_type == "Precip") %>% 
  select(Sample_ID, Sample_type,d2H__permil) %>% 
  right_join(data_ME_precip) %>% 
  filter(!is.na(d2H__permil))
```


#### $\delta^{2}H$ vs. amount of precipitation
```{r}
isotopes_precip %>% 
  ggplot(aes(x = Amount__inches, y = d2H__permil)) +
  geom_point() +
  geom_point(fill = "grey", color = "black", size = 3, shape = 21) +
  
  labs(x = "Precip (inches)", y = expression(paste( delta^{2},"H (permil)"))) +
  theme_bw() +
  theme(axis.text = element_text(size = 12),
        axis.title = element_text(size = 14),
        legend.position = "none") 
  
```

<br/> 

#### Precipitation $\delta^{2}H$ time-series
```{r}
isotopes_precip %>% 
  ggplot(aes(x = Collection_start, y = d2H__permil)) +
  geom_point(aes(size = Amount__inches),
             fill = "grey", color = "black", shape = 21) +
  geom_line() +
  
  labs(x = "Date", y = expression(paste( delta^{2},"H (permil)"))) +
  theme_bw() +
  theme(axis.text = element_text(size = 12),
        axis.title = element_text(size = 14),
        legend.position = "none") 
```

<br/>


### Fog isotope figures
```{r}
# Join isotope data with sample metadata and generally prep for further analysis
isotopes_fog <- data_isotopes %>% 
  filter(Sample_type == "Fog") %>% 
  select(Sample_ID, Sample_type,d2H__permil) %>% 
  right_join(data_ME_fog) %>% 
  filter(!is.na(d2H__permil))
```


#### Fog $\delta^{2}H$ vs. amount of fog collected
```{r}
isotopes_fog %>% 
  ggplot(aes(x = Amount__inches, y = d2H__permil)) +
  geom_point() +
  geom_point(fill = "grey", color = "black", size = 3, shape = 21) +
  
  labs(x = "Fog (inches)", y = expression(paste( delta^{2},"H (permil)"))) +
  theme_bw() +
  theme(axis.text = element_text(size = 12),
        axis.title = element_text(size = 14),
        legend.position = "none") 
```

<br/>


#### Fog $\delta^{2}H$ time-series
```{r}
isotopes_fog %>% 
  ggplot(aes(x = Collection_start, y = d2H__permil)) +
  geom_point(aes(size = Amount__inches),
             fill = "grey", color = "black", shape = 21) +
  geom_smooth(span = 1/4, se = F) +
  
  labs(x = "Date", y = expression(paste( delta^{2},"H (permil)"))) +
  theme_bw() +
  theme(axis.text = element_text(size = 12),
        axis.title = element_text(size = 14),
        legend.position = "none") 
```


<br/> 

### Fog and precip $\delta^{2}H$ time-series
```{r}
 
fig_ts_fog_precip <- isotopes_fog %>% 
  bind_rows(isotopes_precip) %>% 
  ggplot(aes(x = Collection_start, y = d2H__permil, size = Amount__inches,
             fill = Sample_type)) +
  geom_point(shape = 21) +
  geom_smooth(se = F, aes(color = Sample_type)) +
  scale_fill_manual(values = c("grey","blue")) +
  scale_color_manual(values = c("grey","blue")) +
  theme_bw() +
  labs(x = "", y = expression(paste( delta^{2},"H (permil)"))) +
  theme_bw() +
  theme(axis.text = element_text(size = 12),
        axis.title = element_text(size = 14),
        legend.position = "none") 

fig_ts_fog_precip
```


```{r fig.height= 7, fig.width= 7}
(fig_box + fig_gw_depth) / fig_ts_fog_precip + plot_annotation(tag_levels = 'A')
```



<br/>

### Fog and precip $\delta^{2}H$ vs. amount collected 

```{r fig.height= 4, fig.width= 5}
isotopes_fog %>% 
  bind_rows(isotopes_precip) %>% 
  ggplot(aes(x = Amount__inches, y = d2H__permil, fill = Sample_type)) +
  geom_point(shape = 21, size = 3) +
  scale_fill_manual(values = c("grey","blue")) +
  theme_bw() +
  labs(x = "Amount (inches)", y = expression(paste( delta^{2},"H (permil)")),
       caption = "Note: Fog (grey) and rainfall (blue)") +
  theme_bw() +
  theme(axis.text = element_text(size = 12),
        axis.title = element_text(size = 14),
        plot.caption = element_text(hjust = 0),
        legend.position = "none"
        ) 
```






### Fog and meteorological conditions 

```{r}
# Compute mean meteorolgical conditions over the course of each fog event sampling interval  

isotopes_fog <- isotopes_fog %>% 
  group_by(Sample_ID) %>% 
  mutate(mean_temp = mean(data_met$Temperature__F[data_met$DateTime %within% interval(Collection_start,Collection_end)], na.rm = T),
         mean_temp_dew = mean(data_met$DewPoint__F[data_met$DateTime %within% interval(Collection_start,Collection_end)], na.rm = T),
         mean_relhumidity = mean(data_met$RelativeHumidity__percent[data_met$DateTime %within% interval(Collection_start,Collection_end)],
                                 na.rm = T),
         mean_windspeed = mean(data_met$WindSpeed__mph[data_met$DateTime %within% interval(Collection_start,Collection_end)], na.rm = T),
         mean_windangle = mean_deg(data_met$WindAngle[data_met$DateTime %within% interval(Collection_start,Collection_end) &          !is.na(data_met$WindAngle)]),
         timespan__hrs = as.numeric((Collection_end - Collection_start), units = "hours"),
         mean_rainfallrate = mean(data_met$PrecipRate__inPerHr[data_met$DateTime %within% interval(Collection_start,Collection_end)],
                                  na.rm = T)
         
        
         )


isotopes_fog <- isotopes_fog %>% 
  mutate(fog_rate__inPerHr = Amount__inches/timespan__hrs,
         rainfall__inches = mean_rainfallrate * timespan__hrs)
```



```{r}
# determin if fog is pure or mixed (with rain) based on whether and rain fell during the sampling interval

isotopes_fog <- isotopes_fog %>% 
  mutate(pure_fog = if_else(rainfall__inches > 0, "No", "Yes"))
```


#### Wind direction
```{r}
data_met %>% 
  ggplot(aes(x = WindAngle)) +
  geom_histogram(fill = "white", color = "black") +
  scale_x_continuous(breaks = c(90,180,270,360), limits = c(0,360)) +
  coord_polar() +
  
  
  theme(axis.title.y=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank()) 
```



```{r}
isotopes_fog %>% 
  ggplot(aes(x = mean_windangle, y = log2(mean_windspeed), fill = d2H__permil,
             size = Amount__inches)) +
  geom_point(shape = 21) +
  scale_x_continuous(breaks = c(90,180,270,360), limits = c(0,360)) +
  coord_polar(theta =  "x") +
  scale_fill_gradient(low = "blue", high = "red")
  
```



#### Fog $\delta^{2}H$ vs. mean air temperature
```{r fig.height= 3.5}
isotopes_fog %>% 
  mutate(pure_fog = if_else(rainfall__inches > 0, "No", "Yes")) %>% 
  ggplot(aes(x = mean_temp, y = d2H__permil, size = Amount__inches, fill = pure_fog)) +
  geom_point(shape = 21) +
  #scale_shape_manual(values = c(24,25)) +
  scale_fill_manual(values = c("black", "grey")) +
  labs(x = "Mean air temp (F)", y = expression(paste( delta^{2},"H (permil)")),
       caption = "Pure fog (grey) and mixed fog/rain (black).  Samples scaled by amount collected.") +
  theme_bw() +
  theme(axis.text = element_text(size = 12),
        axis.title = element_text(size = 14),
        legend.position = "none",
        plot.caption = element_text(hjust = 0)
        )  
  
  #xlim(0,360) +
  #scale_fill_viridis_c()
  #coord_polar()
```


```{r fig.width= 3, fig.height= 4}
isotopes_fog %>% 
  ggplot(aes(y = fog_rate__inPerHr, x = Sample_type)) +
  geom_boxplot(fill = "grey",
               outlier.shape = NA) +
  geom_jitter(height = 0, width = 0.2) +
  theme_bw() +
  labs(x = "",
       y = "Fog rate (in/hr)") +

  theme(axis.text = element_text(size = 12),
        axis.title = element_text(size = 14),
        legend.position = "none",
        plot.caption = element_text(hjust = 0)
        )  
```



```{r fig.height= 3.5, eval = F}
isotopes_fog %>% 
  mutate(pure_fog = if_else(rainfall__inches > 0, "No", "Yes")) %>% 
  ggplot(aes(x = mean_temp, y = mean_temp_dew, size = Amount__inches, fill = d2H__permil)) +
  geom_point(shape = 21) +
  #scale_shape_manual(values = c(24,25)) +
  scale_fill_viridis_c() +
  geom_abline(slope = 1, intercept = 0) +
  labs(x = "Mean air temp (F)", y = "Mean dew pt (F)",fill = expression(paste( delta^{2},"H (permil)"))) +
  theme_bw() +
  theme(axis.text = element_text(size = 12),
        axis.title = element_text(size = 14),
        legend.position = "none")  +
  coord_equal()
  
  #xlim(0,360) +
  #scale_fill_viridis_c()
  #coord_polar()
```



```{r fig.height= 3.5}
isotopes_fog %>% 
  filter(Collection_start > ymd("2020-06-22")) %>% 
  ggplot(aes(x = mean_windspeed, y = fog_rate__inPerHr, size = Amount__inches)) +
  geom_point(shape = 21, fill = "grey") +
  labs(x = "Mean wind speed (mph)", y = "Fog rate (in/hr)",
       caption = "Symbols scaled by amount of fog collected") +
  theme_bw() +
  theme(axis.text = element_text(size = 12),
        axis.title = element_text(size = 14),
        legend.position = "none",
        plot.caption = element_text(hjust = 0)
        )  
```





```{r eval = F}
isotopes_fog %>% 
  ggplot(aes(x = Collection_start, y = d2H__permil, fill = pure_fog)) +
  geom_point(shape = 21) 
  
```



## Map
44.384694, -67.825658
44.562035, -68.009577
44.555029, -67.998591
```{r}
bounds_map <- tibble(lat = c(44.364694,44.592035),
                     long = c(-67.825658,-68.009577))

bounds_map <- st_as_sf(bounds_map, coords = c("long", "lat"))

#st_crs(bounds_map) <- 4326
```

```{r}
#raster::plot(dem)
# loc_coords <- c(-67.879102,44.454892)
dem <- ceramic::cc_elevation(bounds_map, zoom = 12)


```



```{r}
dem_lines <- stars::st_contour(stars::st_as_stars(dem) , breaks = c(-10,2))
```

```{r}
dem2 <- dem
dem2[dem2 > 2] <- NA
dem2[dem2 <= 2] <- 0
```



```{r}
sites_fog_precip <- tibble(Location = "Fog and precip collectors",
                   Lat = 44.45501667, Long = -67.87876389)
```


```{r}
sites_fog_precip <- st_as_sf(sites_fog_precip, coords = c("Long", "Lat"))

isotope_gw_transect <- st_as_sf(isotope_gw_transect, coords = c("Long", "Lat"))
```


```{r}
# raster::plot(dem)
tmap_mode("plot")

symb_size <- 0.3
border_width <- 1.75

terrain_palette <- terrain.colors(n = 6)
terrain_palette[1] <- "#0000FF"

tpal2 <- RColorBrewer::brewer.pal(n = 6, name = "Greys")

map_ME <- tm_shape(dem) +
  tm_raster(midpoint = NA, style = "cont",
            breaks = c(0,2,5,10,20,50,100),
            palette = "Greys"
            #style = "cont"
            ) +
  tm_shape(dem_lines) +
  tm_borders(lwd =  1, col = "black") +

  tm_shape(dem2) +
  tm_raster(palette = c("lightblue")) +

  tm_shape(isotope_gw_transect) +
  tm_symbols(size = symb_size, col = "green", border.lwd = border_width,
          border.col = "black") +
  
  tm_shape(sites_fog_precip) + 
  
  tm_symbols(size = symb_size, col = "blue", border.lwd = border_width,
          border.col = "black") +
  
  tm_layout(legend.outside = T) + 
  tm_scale_bar(text.size = 0.75)

map_ME
```





```{r}
tmap_mode("view")

map_ME

tmap_mode("plot")
```






```{r}
v1 <- isotope_gw_transect

st_crs(v1) <- 4326

v1 <- st_transform(v1, crs = st_crs(dem_lines))


st_distance(v1 , dem_lines)

a[2]
```


## Fog and precipitation amounts
```{r}
fog_summary <- data_ME_fog %>% 
  group_by(Collection_end) %>% 
  summarize(across(.fns = first)) %>% 
  ungroup()# %>% 
  

precip_summary <- data_ME_precip %>% 
  group_by(Collection_end) %>% 
  summarize(across(.fns = first)) %>% 
  ungroup() 


```

### Figures 
```{r}

fig_events <- ggplot() +
  geom_segment(data = precip_summary, aes(x = Collection_end, y = Amount__inches, 
                                       xend = Collection_end , yend = 0), 
               color = "blue",
               size = 1) +
  geom_point(data = precip_summary, aes(x = Collection_end, y = Amount__inches), shape = 21, 
             size = 2.5, 
             color = "black",
             fill = "blue") +
  
  geom_segment(data = fog_summary, aes(x = Collection_end, y = Amount__inches, 
                                       xend = Collection_end , yend = 0), 
               color = "darkgrey",
               size = 1) +
  geom_point(data = fog_summary, aes(x = Collection_end, y = Amount__inches), shape = 21, 
             size = 2.5, 
             color = "black",
             fill = "darkgrey") +
  
  geom_vline(xintercept =  ymd_hms("2020-06-22 00:00:00"), color = "red", linetype="dashed") +
  theme_bw(base_size = 12) +
  
  labs(x = "",
       y = "Amount (inches)") +
  
  xlim(min(precip_summary$Collection_start, fog_summary$Collection_start), 
       max(precip_summary$Collection_start, fog_summary$Collection_start))
  
  
```


```{r}
precip_summary <- precip_summary %>% 
  arrange(Collection_end) %>% 
  mutate(cumul__inches = cumsum(Amount__inches))

fog_summary <- fog_summary %>% 
  arrange(Collection_end) %>% 
  mutate(cumul__inches = cumsum(Amount__inches))
```

```{r}
fig_cumul <- ggplot() +
  geom_step(data = precip_summary, aes(x = Collection_end, y = cumul__inches),
            color = "blue", size = 1) +
  geom_step(data = fog_summary, aes(x = Collection_end, y = cumul__inches),
            color = "black", size = 1) +
  
  theme_bw(base_size = 12) +
  geom_vline(xintercept =  ymd_hms("2020-06-22 00:00:00"), color = "red", linetype="dashed") +
  
  labs(x = "",
       y = "Cumul. amount (inches)") +
  
  xlim(min(precip_summary$Collection_start, fog_summary$Collection_start), 
       max(precip_summary$Collection_start, fog_summary$Collection_start))

 
```




```{r fig.height= 5}
(fig_events / fig_cumul) +
  plot_annotation(title = 'Steuben, ME',
                  subtitle = "Fog (black) and precipitation (blue) measured at Chipman Pt.",
                  caption = "Note: Red dashed line indicates when fog collector was modified with star pattern")
```

<br/>

<br/>






### Summary table
```{r}
precip_summary <- precip_summary %>% 
  mutate(sample_type = "precip")
```

```{r}
fog_summary <- fog_summary %>% 
  mutate(sample_type = "fog")
```

```{r}
all_summary <- bind_rows(precip_summary, fog_summary) %>% 
  mutate(y_of_day = yday(Collection_start))
```

```{r}
all_summary %>% 
  rename("Sample type" = sample_type) %>% 
  group_by(`Sample type`) %>% 
  summarise("Number of days w. events" = length(unique(y_of_day)),
            "POR Start" = format(as.Date(min(Collection_start))),
            "POR End" = format(as.Date(max(Collection_end))),
            "Mean event (inches)" = round(mean(Amount__inches, na.rm = T),3),
            "Max event (inches)" = max(Amount__inches, na.rm = T),
            "Total (inches)" = sum(Amount__inches)
            ) %>% 
  kable() %>% 
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
```





<br/>

<br/>


## All data in table format

Below is all of the field collected data in table format

### Fog data
```{r eval = F}
DT:::DT2BSClass(c('compact', 'cell-border'))

DT::datatable(data_ME_fog)
```

<br/>

### Precipitation data
```{r eval = F}
DT::datatable(data_ME_precip)
```

<br/>

### Groundwater data (Chipman Pt.)
```{r eval = F}
DT::datatable(data_ME_chipman_pt_gw)
```

<br/>

### Groundwater data (Transect)
```{r eval = F}
DT::datatable(data_ME_gw)
```

<br/>