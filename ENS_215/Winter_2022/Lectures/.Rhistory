a <- raster::extract(lulc_raster, arg_border)
a <- unlist(a)
b <- as.data.frame(a)
View(b)
b <- as.data.frame(lulc = a)
b <- as.data.frame(a, col.names = c("LULC"))
View(b)
b <- as.data.frame(a, col.names = c("LULC"))
View(b)
lulc <- raster::extract(lulc_raster, arg_border)
lulc <- unlist(lulc)
b <- as.data.frame(lulc)
View(b)
b %>%
group_by(lulc) %>%
summarize(n_pixels = n()) %>%
ungroup() %>%
mutate(lulc_frac = n_pixels/sum(n_pixels))
b %>%
group_by(lulc) %>%
summarize(n_pixels = n()) %>%
ungroup() %>%
mutate(lulc_frac = 100*n_pixels/sum(n_pixels))
b %>%
group_by(lulc) %>%
summarize(n_pixels = n()) %>%
ungroup() %>%
mutate(lulc_frac = 100*n_pixels/sum(n_pixels)) %>%
arrange(lulc_frac)
b %>%
group_by(lulc) %>%
summarize(n_pixels = n()) %>%
ungroup() %>%
mutate(lulc_frac = 100*n_pixels/sum(n_pixels)) %>%
arrange(-lulc_frac)
arg_border <- world_borders %>%
filter(name == "Congo")
lulc <- raster::extract(lulc_raster, arg_border)
lulc <- unlist(lulc)
b <- as.data.frame(lulc)
b %>%
group_by(lulc) %>%
summarize(n_pixels = n()) %>%
ungroup() %>%
mutate(lulc_frac = 100*n_pixels/sum(n_pixels)) %>%
arrange(-lulc_frac)
# lulc_raster <- raster::raster("./Data/MCD12C1_T1_2011-01-01_rgb_3600x1800.TIFF")
lulc_raster <- raster::raster("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Winter_2022/Lectures/Data/MCD12C1_T1_2011-01-01_rgb_3600x1800.TIFF")
# lulc_raster <- raster::raster("./Data/MCD12C1_T1_2011-01-01_rgb_3600x1800.TIFF")
lulc_raster <- raster::raster("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Winter_2022/Lectures/Data/MCD12C1_T1_2011-01-01_rgb_3600x1800.TIFF")
lulc_raster[is.na(lulc_raster)] <- 17
lulc_raster[lulc_raster > 100 & lulc_raster < 255] <- NA
raster::plot(lulc_raster)
world_borders <- rnaturalearth::ne_countries(scale = "large", returnclass = "sf")
lulc_pal <- c("#218A21",
"#32CD31",
"#9ACD32",
"#99F997",
"#90BB8E",
"#BC8E90",
"#F5DEB4",
"#DAEB9D",
"#FFD600",
"#F0B768",
"#4683B2",
"#F9ED73",
"#FE0000",
"#979354",
"#FFFFF9",
"#BDBDBD",
"#181880"
)
tm_shape(lulc_raster) +
tm_raster(style = "cat", palette = lulc_pal) +
tm_shape(world_borders) +
tm_borders()
arg_border <- world_borders %>%
filter(name == "Congo")
lulc <- raster::extract(lulc_raster, arg_border)
lulc <- unlist(lulc)
b %>%
group_by(lulc) %>%
summarize(n_pixels = n()) %>%
ungroup() %>%
mutate(lulc_frac = 100*n_pixels/sum(n_pixels)) %>%
arrange(-lulc_frac)
lulc <- as.data.frame(lulc)
lulc %>%
group_by(lulc) %>%
summarize(n_pixels = n()) %>%
ungroup() %>%
mutate(lulc_frac = 100*n_pixels/sum(n_pixels)) %>%
arrange(-lulc_frac)
arg_border <- world_borders %>%
filter(name == "South Africa")
lulc <- raster::extract(lulc_raster, arg_border)
lulc <- unlist(lulc)
lulc <- as.data.frame(lulc)
lulc %>%
group_by(lulc) %>%
summarize(n_pixels = n()) %>%
ungroup() %>%
mutate(lulc_frac = 100*n_pixels/sum(n_pixels)) %>%
arrange(-lulc_frac)
arg_border <- world_borders %>%
filter(name == "Namibia")
lulc <- raster::extract(lulc_raster, arg_border)
lulc <- unlist(lulc)
lulc <- as.data.frame(lulc)
lulc %>%
group_by(lulc) %>%
summarize(n_pixels = n()) %>%
ungroup() %>%
mutate(lulc_frac = 100*n_pixels/sum(n_pixels)) %>%
arrange(-lulc_frac)
arg_border <- world_borders %>%
filter(name == "Yemen")
lulc <- raster::extract(lulc_raster, arg_border)
lulc <- unlist(lulc)
lulc <- as.data.frame(lulc)
lulc %>%
group_by(lulc) %>%
summarize(n_pixels = n()) %>%
ungroup() %>%
mutate(lulc_frac = 100*n_pixels/sum(n_pixels)) %>%
arrange(-lulc_frac)
arg_border <- world_borders %>%
filter(name == "United States of America")
lulc <- raster::extract(lulc_raster, arg_border)
lulc <- unlist(lulc)
lulc <- as.data.frame(lulc)
lulc %>%
group_by(lulc) %>%
summarize(n_pixels = n()) %>%
ungroup() %>%
mutate(lulc_frac = 100*n_pixels/sum(n_pixels)) %>%
arrange(-lulc_frac)
unique(world_borders$continent)
arg_border <- world_borders %>%
filter(continent == "South America")
lulc <- raster::extract(lulc_raster, arg_border)
lulc <- unlist(lulc)
lulc <- as.data.frame(lulc)
View(lulc)
arg_border <- world_borders %>%
filter(name == "Kenya" | name == "Ethiopia")
lulc <- raster::extract(lulc_raster, arg_border, df = T)
View(lulc)
View(arg_border)
arg_border <- world_borders %>%
filter(name == "Bolivia")
lulc <- raster::extract(lulc_raster, arg_border, df = T)
#lulc <- unlist(lulc)
lulc %>%
group_by(lulc) %>%
summarize(n_pixels = n()) %>%
ungroup() %>%
mutate(lulc_frac = 100*n_pixels/sum(n_pixels)) %>%
arrange(-lulc_frac)
View(lulc)
lulc <- raster::extract(lulc_raster, arg_border)
lulc <- unlist(lulc)
lulc <- as.data.frame(lulc)
lulc %>%
group_by(lulc) %>%
summarize(n_pixels = n()) %>%
ungroup() %>%
mutate(lulc_frac = 100*n_pixels/sum(n_pixels)) %>%
arrange(-lulc_frac)
lulc <- raster::extract(lulc_raster, arg_border, sp = T)
arg_border <- world_borders %>%
filter(name == "Bolivia")
lulc <- raster::extract(lulc_raster, arg_border, sp = T)
View(lulc)
lulc
forests_raster <- lulc_raster[lulc_raster <= 4]
forests_raster <- lulc_raster
forests_raster <- lulc_raster
forests_raster[forests_raster <= 4] <- 1
forests_raster[forests_raster > 4] <- 0
raster::plot(forests_raster)
raster::extract(forests_raster, arg_border, fun = mean)
raster::extract(forests_raster, arg_border, fun = mean, sp = T)
other_borders <- world_borders %>%
filter(continent == "South America")
a <- raster::extract(forests_raster, other_borders, fun = mean, sp = T)
View(a)
a <- raster::extract(forests_raster, other_borders, fun = mean, df = T)
View(a)
View(other_borders)
arg_border <- world_borders %>%
filter(name == "Brazil")
lulc <- raster::extract(lulc_raster, arg_border)
lulc <- unlist(lulc)
lulc <- as.data.frame(lulc)
lulc %>%
group_by(lulc) %>%
summarize(n_pixels = n()) %>%
ungroup() %>%
mutate(lulc_frac = 100*n_pixels/sum(n_pixels)) %>%
arrange(-lulc_frac)
library(tidyverse)
library(tmap)
library(sf)
library(raster)
library(AOI)
library(elevatr)
loc2use <- aoi_get(x = list("Schenectady, NY",5,5) )
elevation <- get_elev_raster(loc2use, z = 14, clip = "bbox")
elevation %>%
tm_shape() +
tm_raster(style = "cont", palette = terrain.colors(10)) +
tm_layout(legend.outside = T,
main.title = "Schenectady elevation map")
elevation
elevation %>%
tm_shape() +
tm_raster(style = "cont", palette = "greys") +
tm_layout(legend.outside = T,
main.title = "Schenectady elevation map")
elevation %>%
tm_shape() +
tm_raster(style = "cont", palette = "grey") +
tm_layout(legend.outside = T,
main.title = "Schenectady elevation map")
tmaptools::palette_explorer()
elevation %>%
tm_shape() +
tm_raster(style = "cont", palette = "Greys") +
tm_layout(legend.outside = T,
main.title = "Schenectady elevation map")
elevation %>%
tm_shape() +
tm_raster(style = "cont", palette = terrain.colors(10)) +
tm_layout(legend.outside = T,
main.title = "Schenectady elevation map")
names(elevation) <- "elev_m"
elevation %>%
tm_shape() +
tm_raster(style = "cont", palette = terrain.colors(10)) +
tm_layout(legend.outside = T,
main.title = "Schenectady elevation map", legend.te)
elevation %>%
tm_shape() +
tm_raster(style = "cont", palette = terrain.colors(10)) +
tm_layout(legend.outside = T,
main.title = "Schenectady elevation map")
raster_world_elev <- raster("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Winter_2022/Lectures/Data/World_elev.TIFF")
# Data was obtained from: https://neo.sci.gsfc.nasa.gov/view.php?datasetId=SRTM_RAMP2_TOPO
raster_world_elev
raster::plot(raster_world_elev)
cellStats(raster_world_elev,
stat = max)
raster_world_elev[raster_world_elev == 99999] <- NA
raster::plot(raster_world_elev)
raster_world_elev_with_ocean <- raster::raster("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Winter_2022/Lectures/Data/World_elev.TIFF")
raster_world_elev_with_ocean[raster_world_elev_with_ocean == 99999] <- 0
raster::plot(raster_world_elev_with_ocean)
raster::cellStats(raster_world_elev_with_ocean, stat = max)
raster::cellStats(raster_world_elev_with_ocean, stat = mean)
raster_world_elev__ft <- raster_world_elev * 3.28084
raster::cellStats(raster_world_elev__ft, stat = mean)
raster::plot(raster_world_elev__ft)
coeff_p0 <- 1 # Sea level standard atmospheric pressure (Atmospheres)
coeff_T0 <- 288.16 # Sea level standard temperature(K)
coeff_g <- 9.80665 # 	Earth-surface gravitational acceleration (m/s^2)
coeff_M <- 0.02896968 # Molar mass of dry air (kg/mol)
coeff_R0 <- 8.314462618 #	Universal gas constant (J/(mol*K))
raster_atmos_pressure <- coeff_p0 * exp( -(coeff_g * raster_world_elev * coeff_M)/(coeff_T0 * coeff_R0) )
raster::plot(raster_atmos_pressure)
raster_day_temps <- raster("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Winter_2022/Lectures/Data/Day_temp_2001_march.tif")
raster_day_temps[raster_day_temps == 99999] <- NA
raster_night_temps <- raster("./Spatial_data/Night_temp_2001_march.TIFF")
raster_day_temps <- raster("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Winter_2022/Lectures/Data/Day_temp_2001_march.tif")
raster_day_temps[raster_day_temps == 99999] <- NA
raster_night_temps <- raster("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Winter_2022/Lectures/Data/Night_temp_2001_march.TIFF")
raster_night_temps[raster_night_temps == 99999] <- NA
# Data from: https://neo.sci.gsfc.nasa.gov/view.php?datasetId=MOD_LSTD_CLIM_M
# Data from: https://neo.sci.gsfc.nasa.gov/view.php?datasetId=MOD_LSTN_CLIM_M
raster_temps_diff <- raster_day_temps - raster_night_temps
raster::plot(raster_temps_diff)
raster::hist(raster_temps_diff)
reclass_df <- c(-Inf, 3, 1,
3, 6, 2,
6, 15, 3,
15, Inf, 4)
reclass_m <- matrix(reclass_df,
ncol = 3,
byrow = TRUE)
reclass_m
raster_temps_diff_reclass <- raster::reclassify(raster_temps_diff,
reclass_df)
raster::plot(raster_temps_diff_reclass,
col = terrain.colors(4))
borders_data <-  spData::world # borders of all countries
# Get just South Africa's borders
borders_data_southaf <- borders_data %>%
filter(name_long == "South Africa")
borders_data_southaf %>%
tm_shape() +
tm_borders()
raster_elev_southaf <- raster::mask(raster_world_elev,
borders_data_southaf)
raster::plot(raster_elev_southaf)
raster_elev_southaf <- raster::crop(raster_elev_southaf,
borders_data_southaf)
raster::plot(raster_elev_southaf)
tm_shape(raster_world_elev) +
tm_raster() +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
tm_shape(raster_world_elev, projection = "+molli") +
tm_raster() +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
tm_shape(raster_world_elev, projection = "+proj = moll") +
tm_raster() +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
tm_shape(raster_world_elev, projection = "+proj = moll") +
tm_raster()
tm_shape(raster_world_elev) +
tm_raster() +
tm_shape(borders_data, projection = "+proj = moll") +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
tm_shape(raster_world_ele, projection = "+proj = moll") +
tm_raster() +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
tm_shape(raster_world_ele, projection = "+proj = wintri") +
tm_raster() +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
tm_shape(raster_world_elev, projection = "+proj = wintri") +
tm_raster() +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
tm_shape(raster_world_elev") +
tm_raster() +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
tm_shape(raster_world_elev) +
tm_raster() +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
cat_raster_wgs84 = project(raster_world_elev, "EPSG:4326", method = "near")
cat_raster_wgs84 = raster::projectRaster(raster_world_elev, "+proj=wintri", method = "near")
cat_raster_wgs84 = raster::projectRaster(raster_world_elev, crs = "+proj=moll", method = "near")
cat_raster_wgs84 = raster::projectRaster(raster_world_elev, crs = 4326, method = "near")
cat_raster_wgs84 = raster::projectRaster(raster_world_elev, crs = 4326)
cat_raster_wgs84 = raster::projectRaster(raster_world_elev, crs = "+proj = moll")
cat_raster_wgs84 = raster::projectRaster(raster_world_elev, crs = "+proj=laea +x_0=0 +y_0=0 +lon_0=-74 +lat_0=40")
tm_shape(cat_raster_wgs84) +
tm_raster() +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
cat_raster_wgs84 = raster::projectRaster(raster_world_elev, crs = "+proj=moll +x_0=0 +y_0=0 +lon_0=-74 +lat_0=40")
tm_shape(cat_raster_wgs84) +
tm_raster() +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
cat_raster_wgs84 = raster::projectRaster(raster_world_elev, crs = "+proj=moll +x_0=0 +y_0=0")
tm_shape(cat_raster_wgs84) +
tm_raster() +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
tm_shape(raster_world_elev) +
tm_raster() +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
tm_shape(raster_world_elev) +
tm_raster(style = "cont") +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
r_schdy <- raster::terrain(elevation)
r_schdy <- raster::terrain(elevation, opt = "slope")
raster::plot(r_schdy)
raster::plot(r_schdy, unit = "degrees")
r_schdy <- raster::terrain(elevation, opt = "slope",, unit = "degrees")
raster::plot(r_schdy)
r_schdy <- raster::terrain(elevation, opt = "aspect", unit = "degrees")
raster::plot(r_schdy)
r_schdy <- raster::terrain(elevation, opt = "slope", unit = "degrees")
tm_shape(r_schdy) +
tm_raster()
tm_shape(r_schdy) +
tm_raster(style = "quantile")
tm_shape(r_schdy) +
tm_raster(style = "quantile", n = 10)
tm_shape(r_schdy) +
tm_raster(style = "quantile", n = 10) +
tm_layout(legend.outside = T)
r_schdy_slope <- raster::terrain(elevation, opt = "slope", unit = "degrees")
tm_shape(r_schdy_slope) +
tm_raster(style = "quantile", n = 10) +
tm_layout(legend.outside = T)
r_schdy_aspect <- raster::terrain(elevation, opt = "aspect", unit = "degrees")
r_schdy_slope_flag <- r_schdy_slope
r_schdy_slope_flag[r_schdy_slope_flag > 1]
r_schdy_slope_flag <- r_schdy_slope
r_schdy_slope_flag[r_schdy_slope_flag > 1] <- 1
r_schdy_slope_flag[r_schdy_slope_flag <= 1] <- 0
raster::hist(r_schdy_slope_flag)
r_schdy_slope_flag
r_schdy_slope_flag <- r_schdy_slope
r_schdy_slope_flag[r_schdy_slope_flag > 1] <- 1
r_schdy_slope_flag[r_schdy_slope_flag <= 1] <- 0
r_schdy_slope_flag
r_schdy_slope_flag <- r_schdy_slope
r_schdy_slope_flag
r_schdy_slope_flag <- r_schdy_slope
r_schdy_slope_flag[r_schdy_slope_flag < 1] <- 0
r_schdy_slope_flag[r_schdy_slope_flag >= 1] <- 1
r_schdy_slope_flag
tm_shape(r_schdy_slope_flag*r_schdy_aspect) +
tm_raster(style = "quantile", n = 10) +
tm_layout(legend.outside = T)
tm_shape(r_schdy_slope_flag*r_schdy_aspect) +
tm_raster() +
tm_layout(legend.outside = T)
r_schdy_slope_flag <- r_schdy_slope
r_schdy_slope_flag[r_schdy_slope_flag < 1] <- NA
r_schdy_slope_flag[r_schdy_slope_flag >= 1] <- 1
tm_shape(r_schdy_slope_flag*r_schdy_aspect) +
tm_raster() +
tm_layout(legend.outside = T)
tm_shape(r_schdy_slope_flag*r_schdy_aspect) +
tm_raster(n = 12) +
tm_layout(legend.outside = T)
tm_shape(r_schdy_slope_flag*r_schdy_aspect) +
tm_raster(n = 12, colorNA = "grey") +
tm_layout(legend.outside = T)
raster::hist(r_schdy_slope)
writeRaster(elevation, "./elevation_schdy.tiff")
#elevation <- get_elev_raster(loc2use, z = 14, clip = "bbox")
#writeRaster(elevation, "./elevation_schdy.tiff")
elevation <- raster("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Winter_2022/Lectures/Data/elevation.tif")
#elevation <- get_elev_raster(loc2use, z = 14, clip = "bbox")
#writeRaster(elevation, "./elevation_schdy.tiff")
elevation <- raster("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Winter_2022/Lectures/Data/elevation_schdy.tif")
names(elevation) <- "elev_m"
elevation %>%
tm_shape() +
tm_raster(style = "cont", palette = terrain.colors(10)) +
tm_layout(legend.outside = T,
main.title = "Schenectady elevation map")
r_schdy_slope <- raster::terrain(elevation, opt = "slope", unit = "degrees")
r_schdy_aspect <- raster::terrain(elevation, opt = "aspect", unit = "degrees")
r_schdy_slope_flag <- r_schdy_slope
r_schdy_slope_flag[r_schdy_slope_flag < 1] <- NA
r_schdy_slope_flag[r_schdy_slope_flag >= 1] <- 1
r_schdy_slope_flag
tm_shape(r_schdy_slope) +
tm_raster(style = "quantile", n = 10) +
tm_layout(legend.outside = T)
r_schdy_slope_flag
hillShade(r_schdy_slope,r_schdy_aspect)
hill <- hillShade(r_schdy_slope,r_schdy_aspect)
plot(hill)
hill <- hillShade(r_schdy_slope,r_schdy_aspect, 40, 270)
plot(hill)
plot(hill, col=grey(0:100/100))
raster::plot(r_schdy_slope)
raster::plot(r_schdy_slope)
tm_shape(r_schdy_slope) +
tm_raster(style = "quantile", n = 10) +
tm_layout(legend.outside = T)
tm_shape(r_schdy_aspect) +
tm_raster(n = 10) +
tm_layout(legend.outside = T)
raster::plot(r_schdy_slope_flag)
tm_shape(r_schdy_slope_flag) +
tm_raster(colorNA = "grey")
tm_shape(r_schdy_slope_flag) +
tm_raster(colorNA = "grey") +
tm_layout(legend.outside = T)
r_schdy_aspect_steep <- r_schdy_slope_flag*r_schdy_aspect
tm_shape(r_schdy_aspect_steep) +
tm_raster(n = 12, colorNA = "grey") +
tm_layout(legend.outside = T)
#elevation <- get_elev_raster(loc2use, z = 14, clip = "bbox")
#writeRaster(elevation, "./elevation_schdy.tiff")
elevation <- raster::raster("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Winter_2022/Lectures/Data/elevation_schdy.tif")
names(elevation)
names(elevation) <- "elev_m"
library(tidyverse)
library(tmap)
library(sf)
library(raster)
library(AOI)
library(elevatr)
loc2use <- aoi_get(x = list("Schenectady, NY",5,5) )
#elevation <- get_elev_raster(loc2use, z = 14, clip = "bbox")
#writeRaster(elevation, "./elevation_schdy.tiff")
elevation <- raster::raster("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Winter_2022/Lectures/Data/elevation_schdy.tif")
raster::hist(elevation)
elevation
crs(elevation)
