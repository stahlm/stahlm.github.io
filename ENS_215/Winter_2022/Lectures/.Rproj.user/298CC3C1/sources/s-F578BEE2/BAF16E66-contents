---
title: "Seasonality indices: Environmental applications"
author: "ENS-215"
date: "Mar-2022"
output:
  html_document:
    df_print: paged
    theme: spacelab
    toc: yes
    toc_float: yes
---

## Seasonality indices


Many environmental parameters (e.g., precipitation, temperature, vegetation abundance,...) experience distinct seasonal cycles.  Understanding the characteristics/dynamics of these seasonal cycles can shed light on the underlying processes that control these cycles as well as provide useful information for understanding the environmental/societal implications of these cycles.  For example, seasonal variations in precipitation can have a many important implications ranging from controlling the timing of floods and droughts, influencing the seasonal growth of vegetation/crops, affecting the transmission of waterborne diseases, and impacting the emergence of insect populations and associated diseases (e.g., Malaria).  



Let's take a look at monthly precipitation for Boston and San Francisco to highlight some features of seasonal cycles.  

```{r}
library(tidyverse)
library(GSODR)

```



```{r}
compute_seaonality_indices <- function(df_in) {
  
  df_in <- df_in %>% 
  mutate(month_angle = 15 + (Month-1)*30) %>% 
  mutate(month_angle_radians = 2*pi*(month_angle/360))
  
  
  df_in <- df_in %>% 
    mutate(value_x = observation_value*cos(month_angle_radians),
           value_y = observation_value*sin(month_angle_radians)
         )
  
  
  df_seasonality <- df_in %>% 
    group_by(group_name) %>% 
    
    summarize(value_tot = sum(observation_value),
              value_tot_x = sum(value_x),
              value_tot_y = sum(value_y)
            )
  
  
  df_seasonality <- df_seasonality %>% 
    mutate(SI = (((value_tot_x^2) + (value_tot_y^2))^0.5)/value_tot)
  
  
  df_seasonality <- df_seasonality %>% 
  
  mutate(a_coeff = case_when(value_tot_x <= 0 ~ 180,
                             value_tot_x > 0 & value_tot_y > 0 ~ 0,
                             value_tot_x > 0 & value_tot_y <= 0 ~ 360
                             )) %>% 
  
  mutate(SC = atan(value_tot_y/value_tot_x)*(180/pi) + a_coeff) %>% 
  
  select(-a_coeff)
}
```


```{r}

met_sfo <- get_GSOD(years = 2011:2021, station = "724940-23234")
met_bos <- get_GSOD(years = 2011:2021, station = "725090-14739")
```






```{r}

monthly_met_sfo <- met_sfo %>% 
  group_by(YEAR, MONTH, STNID) %>% 
  
  summarize(observation_value = sum(PRCP, na.rm = T)) %>% 
  
  ungroup() %>% 
  group_by(MONTH, STNID) %>% 
  summarise(observation_value = mean(observation_value)) %>% 
  
  rename(group_name = STNID, Month = MONTH)



monthly_met_bos <- met_bos %>% 
  group_by(YEAR, MONTH, STNID) %>% 
  
  summarize(observation_value = sum(PRCP, na.rm = T)) %>% 
  
  ungroup() %>% 
  group_by(MONTH, STNID) %>% 
  summarise(observation_value = mean(observation_value)) %>% 
  
  rename(group_name = STNID, Month = MONTH)


monthly_met_bos_sfo <- monthly_met_bos %>% 
  bind_rows(monthly_met_sfo) %>% 
  mutate(loc_name = if_else(group_name == "725090-14739", "Boston", "San Francisco"))
```


```{r}
monthly_met_bos_sfo %>% 
  
  ggplot(aes(x = factor(Month), y = observation_value )) +
  geom_col() +
  
  facet_wrap(~ loc_name) +
  
  labs(x = "Month", y = "Precipitation (mm)",
       title = "Mean monthly precipitation (2011-2021)",
       caption = "Data source: NOAA GSOD"
       ) +
  theme_bw()
```

What can we say about the seasonal cycles of precipitation in Boston and In San Francisco?  How would you describe these cycles?  What features stand out?  How do the cycles between the two locations compare and contrast?  Can you think of objective metrics that would quantitatively capture the features you observe?   



To better understand both the drivers of seasonal cycles and their implications it is important to develop objective, quantitative metrics that summarize seasonal cycles.  While there are many possible metrics that can be used - each having different advantages/disadvantages - we will explore two particularly useful metrics that capture the seasonal timing and seasonal concentration of time-series data.  


The metrics we will use were first described in a paper by Markham (1970).  These metrics have since been applied to many subsequent studies.  Furthermore, many other studies have developed very similar metrics that are also widely used.  


The Seasonality Index (SI) describes how uniformly a given variable is spread across the months.  The SI ranges from 0 to 1, with a value of 0 indicating that the variable is evenly spread across the months and a value of 1 indicating that the variable is concentration within a single month.  

The Seasonal Concentration (SC) describes the time of year that the values are most concentrated.  The SC is represented by an angular direction ranging from 0 to 360, thus a value of 0 would indicate the the variable is most focused in the month of January while a value of 180 would indicate the variable being most focused in June.  A bit further down I will introduce the mathematical approach to calculating SI and SC, though first let's continue to look at the Boston and San Francisco data to get a better conceptual understanding of these metrics.  



```{r}
df_seasonality_bos_sfo <- monthly_met_bos_sfo %>% 
  compute_seaonality_indices()
```

```{r}
monthly_met_bos_sfo %>% 
  ggplot(aes(x = 15+ (Month-1)*30, y = observation_value, color = group_name)) +
  
  geom_segment(aes(y = 0, xend = 15+ (Month-1)*30, yend = observation_value),
               size = 1.25, arrow = arrow(length = unit(0.03, "npc")) ) +
  
  scale_color_manual(values = c("Black","Blue")) +
  
  scale_x_continuous(breaks = c(0,90,180,270,360), limits = c(0,360)) +
  coord_polar() +
  
  facet_wrap(~ group_name)
```

```{r}

```





```{r}
df_seasonality_bos_sfo %>% 
  ggplot(aes(x = SC, y = SI, color = group_name)) +
  
  geom_segment(aes(y = 0, xend = SC, yend = SI),
               size = 2, arrow = arrow(length = unit(0.03, "npc")) ) +
  
  scale_color_manual(values = c("Black","Blue")) +
  
  scale_x_continuous(breaks = c(0,90,180,270,360), limits = c(0,360)) +
  coord_polar() 
```





```{r}
library(tidyverse)

library(tmap)
library(sf)
```


```{r}
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/NOAA_State_Precip_LabData.csv")

```

```{r}
df_monthly_normals <- precip_data %>% 
  filter(Year >= 1980) %>% 
  
  group_by(state_cd, Month) %>% 
  summarize(observation_value = mean(Precip_inches)) %>% 
  
  rename(group_name = state_cd)
```

```{r}
compute_seaonality_indices <- function(df_in) {
  
  df_in <- df_in %>% 
  mutate(month_angle = 15 + (Month-1)*30) %>% 
  mutate(month_angle_radians = 2*pi*(month_angle/360))
  
  
  df_in <- df_in %>% 
    mutate(value_x = observation_value*cos(month_angle_radians),
           value_y = observation_value*sin(month_angle_radians)
         )
  
  
  df_seasonality <- df_in %>% 
    group_by(group_name) %>% 
    
    summarize(value_tot = sum(observation_value),
              value_tot_x = sum(value_x),
              value_tot_y = sum(value_y)
            )
  
  
  df_seasonality <- df_seasonality %>% 
    mutate(SI = (((value_tot_x^2) + (value_tot_y^2))^0.5)/value_tot)
  
  
  df_seasonality <- df_seasonality %>% 
  
  mutate(a_coeff = case_when(value_tot_x <= 0 ~ 180,
                             value_tot_x > 0 & value_tot_y > 0 ~ 0,
                             value_tot_x > 0 & value_tot_y <= 0 ~ 360
                             )) %>% 
  
  mutate(SC = atan(value_tot_y/value_tot_x)*(180/pi) + a_coeff) %>% 
  
  select(-a_coeff)
}
```



```{r}
df_seasonality_precip <- compute_seaonality_indices(df_monthly_normals)
```








```{r fig.width = 4.5, fig.height= 6.5}
df_seasonality_precip %>% 
  ggplot(aes(y = reorder(state_cd, SI), x = SI)) +
  
  geom_point(size = 2)
```

```{r}
df_monthly_normals %>% 
  filter(state_cd %in% c("RI", "CA", "ID")) %>% 
  
  ggplot() +
  geom_col(aes(x = factor(Month), y = prcp_mean_inches)) +
  
  facet_wrap(~ state_cd)
```

```{r}
df_seasonality_precip %>% 
  ggplot(aes(x = SC, y = SI)) +
  
  geom_segment(aes(y = 0, xend = SC, yend = SI)) +
  
  scale_x_continuous(breaks = c(0,90,180,270,360), limits = c(0,360)) +
  coord_polar() 
  
```


```{r}
state_dictionary <- tibble(NAME = state.name, state_cd = state.abb)
```


```{r}
df_seasonality_precip <- df_seasonality_precip %>% 
  left_join(state_dictionary)
```



```{r}
sf_states <- spData::us_states
```


```{r}
sf_seasonality_precip <- sf_states %>% 
  right_join(df_seasonality_precip)
```


```{r}
sf_seasonality_precip %>% 
  tm_shape(bbox = st_bbox(sf_states)) +
  tm_polygons(col = "SI", style = "cont", palette = "viridis")+
  
  tm_shape(sf_states) +
  tm_borders() 
```


## Precipitation and streamflow seasonality: Mohawk Watershed
```{r}
library(dataRetrieval)
library(lubridate)
```






01354500

```{r}
df_stream_data <- readNWISdv(siteNumbers = "01354500",
                             parameterCd = "00060",
                             statCd = "00003") %>% 
  renameNWISColumns()
```



```{r}
df_stream_data <- df_stream_data %>% 
  mutate(Year = year(Date), 
         Month = month(Date),
         Day = day(Date)
         )
```



```{r}
df_stream_monthly_normals <- df_stream_data %>% 
  filter(Year > 2011 & Year < 2022) %>% 
  
  group_by(Month, site_no) %>% 
  summarize(observation_value = mean(Flow, na.rm = T)) %>% 
  
  rename(group_name = site_no)
```


```{r}
df_seasonality_flow <- compute_seaonality_indices(df_stream_monthly_normals)
```


```{r}
library(GSODR)
```


```{r}
met_df <- get_GSOD(years = 2012:2021, station = "725180-14735")
```


```{r}
df_alb_precip_monthly_normals <- met_df %>% 
  group_by(YEAR, MONTH, STNID) %>% 
  
  summarize(observation_value = sum(PRCP, na.rm = T)) %>% 
  
  ungroup() %>% 
  group_by(MONTH, STNID) %>% 
  summarise(observation_value = mean(observation_value)) %>% 
  
  rename(group_name = STNID, Month = MONTH)
```


```{r}
df_seasonality_alb_precip <- compute_seaonality_indices(df_alb_precip_monthly_normals)
```



```{r}
df_seasonality_alb_precip$obs_type <- "Precip"

df_seasonality_flow$obs_type <- "Flow"

df_seasonality <- bind_rows(df_seasonality_alb_precip, df_seasonality_flow)
```





```{r}
df_seasonality %>% 
  ggplot(aes(x = SC, y = SI, color = obs_type)) +
  
  geom_segment(aes(y = 0, xend = SC, yend = SI),
               size = 2, arrow = arrow(length = unit(0.03, "npc")) ) +
  
  scale_color_manual(values = c("Black","Blue")) +
  
  scale_x_continuous(breaks = c(0,90,180,270,360), limits = c(0,360)) +
  coord_polar() 
```



