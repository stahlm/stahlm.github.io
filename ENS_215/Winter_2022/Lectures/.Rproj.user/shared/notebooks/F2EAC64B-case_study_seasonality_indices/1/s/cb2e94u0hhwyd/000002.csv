"0","compute_seaonality_indices <- function(df_in) {"
"0","  "
"0","  df_in <- df_in %>% "
"0","  mutate(month_angle = 15 + (Month-1)*30) %>% "
"0","  mutate(month_angle_radians = 2*pi*(month_angle/360))"
"0","  "
"0","  "
"0","  df_in <- df_in %>% "
"0","    mutate(value_x = observation_value*cos(month_angle_radians),"
"0","           value_y = observation_value*sin(month_angle_radians)"
"0","         )"
"0","  "
"0","  "
"0","  df_seasonality <- df_in %>% "
"0","    group_by(group_name) %>% "
"0","    "
"0","    summarize(value_tot = sum(observation_value),"
"0","              value_tot_x = sum(value_x),"
"0","              value_tot_y = sum(value_y)"
"0","            )"
"0","  "
"0","  "
"0","  df_seasonality <- df_seasonality %>% "
"0","    mutate(SI = (((value_tot_x^2) + (value_tot_y^2))^0.5)/value_tot)"
"0","  "
"0","  "
"0","  df_seasonality <- df_seasonality %>% "
"0","  "
"0","  mutate(a_coeff = case_when(value_tot_x <= 0 ~ 180,"
"0","                             value_tot_x > 0 & value_tot_y > 0 ~ 0,"
"0","                             value_tot_x > 0 & value_tot_y <= 0 ~ 360"
"0","                             )) %>% "
"0","  "
"0","  mutate(SC = atan(value_tot_y/value_tot_x)*(180/pi) + a_coeff) %>% "
"2","
"
"0","a <- source(""https://raw.githubusercontent.com/stahlm/stahlm.github.io/master/ENS_215/Winter_2022/Lectures/compute_seasonality_indices.R"")"
"0","  "
"0","  select(-a_coeff)"
"2","Error: Incomplete expression: compute_seaonality_indices <- function(df_in) {
  
  df_in <- df_in %>% 
  mutate(month_angle = 15 + (Month-1)*30) %>% 
  mutate(month_angle_radians = 2*pi*(month_angle/360))
  
  
  df_in <- df_in %>% 
    mutate(value_x = observation_value*cos(month_angle_radians),
           value_y = observation_value*sin(month_angle_radians)
         )
  
  
  df_seasonality <- df_in %>% 
    group_by(group_name) %>% 
    
    summarize(value_tot = sum(observation_value),
              value_tot_x = sum(value_x),
              value_tot_y = sum(value_y)
            )
  
  
  df_seasonality <- df_seasonality %>% 
    mutate(SI = (((value_tot_x^2) + (value_tot_y^2))^0.5)/value_tot)
  
  
  df_seasonality <- df_seasonality %>% 
  
  mutate(a_coeff = case_when(value_tot_x <= 0 ~ 180,
                             value_tot_x > 0 & value_tot_y > 0 ~ 0,
                             value_tot_x > 0 & value_tot_y <= 0 ~ 360
                             )) %>% 
  
  mutate(SC 
"
