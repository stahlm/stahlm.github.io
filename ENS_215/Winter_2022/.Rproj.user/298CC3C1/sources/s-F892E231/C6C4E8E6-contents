---
title: "Day 1: A few examples"
author: "ENS-215"
date: "Winter 2022"
output:
  html_document:
    theme: spacelab
    toc: yes
    toc_float: yes
---

https://rstudio.cloud/profile  
https://app.datacamp.com/groups/exploring-environmental-data-w-2022/dashboard  
https://stahlm.github.io/ENS_215/Winter_2022/Home.html  


```{r message = F, warning=F}
library(tidyverse)
library(stationaRy)
library(sf)
library(tmap)
library(spData)

library(AOI)
library(climateR)

library(raster)
library(rasterVis)

library(patchwork)
```


```{r eval = F}
spData::world
```



```{r eval = F}
df_stations <- get_station_metadata() 
```

```{r eval = F}

df_stations <- df_stations %>% 
  filter(!is.na(lat), !is.na(lon)) %>% 
  st_as_sf(coords = c("lon", "lat"))
```

```{r eval = F}

spData::world %>% 
  tm_shape() +
  tm_polygons() +
  
  tm_shape( df_stations) +
  tm_dots()
```


```{r eval = F}

df_stations %>% 
  ggplot() +
  geom_sf() +
  geom_sf(data = spData::world)
```


## Precip and temp for specified location (point)

```{r}
#loc2use <- 'Death Valley National Park'
loc2use <- 'Chicago, IL'

AOI = AOI::geocode(loc2use,
                   pt = TRUE)

ts  = getGridMET(AOI, param = c("tmax","tmin", "prcp"),
                 startDate = "2021-01-01", 
                 endDate = "2021-12-30")
```

```{r}
ts <- ts %>% 
  mutate(tmax = ((tmax - 273.15)*(9/5) +32),
         tmin = ((tmin - 273.15)*(9/5) +32),
         prcp = prcp/25.4
         )
```

```{r}
ts %>% 
  summarize(pcrp_max = max(prcp),
            temp_max = max(tmax),
            temp_min = min(tmin),
            temp_mean = mean((tmin+tmax)/2),
            temp_max_change = max(tmax - tmin)
            )
```



```{r}
fig_01 <- ts %>% 
  ggplot() +
  geom_line(aes(x = date, y = tmax), color = "red") +
  geom_line(aes(x = date, y = tmin), color = "blue") +
  
  labs(x = "", 
       y = "Temperature (F)"
       ) +
  
  geom_hline(yintercept = 32, linetype = "dashed") +
  theme_bw() 
  


fig_02 <- ts %>% 
  ggplot() +
  geom_col(aes(x = date, y = prcp), color = "black") +
    
  labs(y = "Precipitation (inches)") +
    
  theme_bw()
  
```

```{r}
(fig_01 / fig_02) +
  plot_annotation(title = paste(loc2use,": Temperature and precipitation", sep = ""),
                  caption = "Data source: GridMET",
                  tag_levels = "a"
                  ) 
```


## Obtain and analyze precipitation data for Hurricane Henry

```{r}
henri = getGridMET(aoi_get(state = c("NY", "NJ","CT","MA")), 
                  param = "prcp", 
                  startDate = "2021-08-16", endDate = "2021-08-24")
#> Spherical geometry (s2) switched off
#> Spherical geometry (s2) switched on

#rasterVis::levelplot(henri$gridmet_prcp, par.settings = BTCTheme, main = "Hurricane Henri")
```
```{r}
r = raster::stack(henri)
```

```{r}
r_inches <- r/25.4
```

### Static map  

```{r message = F, warning = F}

tmap_mode("plot") 

fig_map <- r_inches %>% 
  tm_shape() +
  tm_raster(style = "cont") +
  tm_shape(spData::us_states) +
  tm_borders()

fig_map
```
<br/>  

### Interactive map  
 
 
```{r message= F, warning = F}
tmap_mode("view")

fig_map 
```


<br/> 


```{r message= F, warning = F}
tmap_mode("plot")
```

<br/>  

Get the maximum precipitation amount for each day of the storm  
```{r}
round(raster::maxValue(r_inches),2) %>% as.data.frame()
```
<br/> 

## Get climate data for specified region of the US

```{r}
temperature_US = getGridMET(aoi_get(state = "conus"), 
                  param = "tmax", 
                  startDate = "2021-12-30", endDate = "2021-12-30")
#> Spherical geometry (s2) switched off
#> Spherical geometry (s2) switched on
```

```{r}
temperature_US <- raster::stack(temperature_US)
```


```{r}
temperature_US <- temperature_US - 273.15
```

```{r}
temperature_US <- (temperature_US*9/5) + 32
```


```{r}
temperature_US %>% 
  tm_shape() +
  tm_raster(style = "cont", palette = "-RdBu", midpoint = 32) +
  tm_shape(spData::us_states) +
  tm_borders()
```



