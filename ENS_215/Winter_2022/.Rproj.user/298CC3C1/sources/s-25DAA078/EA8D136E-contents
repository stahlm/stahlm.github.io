---
title: "R Notebook"
output: html_notebook
---

Download USGS annual runoff data by water region (regions 1-18, which completely cover the lower 48 states) and monthly precip by Water Resource Region
<https://en.wikipedia.org/wiki/Water_resource_region>
```{r}
library(tidyverse)
library(data.table)
```


Loop over water resource regions and get annual runoff data for all regions from USGS
```{r}
rg_cd <- 1:18 # Water resource regions 1-18

for (i_rg in rg_cd) {
  if (i_rg < 10) {
    rg_str <- paste('0',toString(i_rg),sep ="")
  } else {
    rg_str = toString(i_rg)
  }
  
  url_str <- paste('https://waterwatch.usgs.gov/index.php?m=statesum&r=',rg_str,'&download=1',sep="")
  temporary_data <- fread(url_str)
  
  if (i_rg == 1){
    all_data <- temporary_data
  } else {
    all_data <- bind_rows(all_data,temporary_data)
    
  }
  
}

write.csv(all_data, file = "C:/Users/stahlm/Documents/Teaching_UnionCollege/Environmental_Data_Analysis/Class_Data/USGS_WaterRegion_Runoff.csv")
```

```{r}
ggplot(all_data) + geom_line(aes(x = year,y = runoff_mmd)) + facet_wrap(~ region_cd, ncol = 3)
```
```{r}
state_list <- state.abb

for (i_state in state_list){
  
  url_str <- paste('https://waterwatch.usgs.gov/index.php?m=statesum&r=',tolower(i_state),'&download=1',sep="")
  temporary_data <- fread(url_str)
  
  if (i_state == state_list[1]){
    all_data <- temporary_data
  } else {
    all_data <- bind_rows(all_data,temporary_data)
    
  }
  
}

write.csv(all_data, file = "C:/Users/stahlm/Documents/Teaching_UnionCollege/Environmental_Data_Analysis/Class_Data/USGS_State_Runoff.csv")
  

```
```{r}
ggplot(all_data) + geom_line(aes(x=year,y=runoff_mmd)) + facet_wrap(~region_cd)
```

```{r}
a<- summarize(group_by(all_data,region_cd),runoff = mean(runoff_mmd))

```

Get NOAA precipitation time-seried data (monthly means) from 1895-2018 by water resource region
See <ftp://ftp.ncdc.noaa.gov/pub/data/cirs/drd/state.README> for details on structuring URL for download
```{r}
wr_region <- 201:219
region_code <- c(17,18,16,15,14,13,12,11,8,10,9,7,4,6,5,3,2,1)
for (i_region in wr_region){
  
  url_str <- paste('https://www.ncdc.noaa.gov/cag/regional/time-series/',toString(i_region),'-pcp-all-12-1895-2018.csv?base_prd=true&begbaseyear=1901&endbaseyear=2000',sep="")
  temporary_data <- fread(url_str)
  temporary_data <- mutate(temporary_data,region_cd = Anomaly*0 + region_code[i_region - 200])
  
  if (i_region == wr_region[1]){
    all_data <- temporary_data
  } else {
    all_data <- bind_rows(all_data,temporary_data)
    
  }
  
}

all_data <- rename(all_data,Precip_inches = Value, Anomaly_inches = Anomaly)
write.csv(all_data, file = "C:/Users/stahlm/Documents/Teaching_UnionCollege/Environmental_Data_Analysis/Class_Data/NOAA_WaterRegion_Precip.csv")
 

```

Get NOAA precipitation data (monthly means) from 1895-2018 by US State
```{r}
state_ids <- 1:48
state_list<- c("AL","AZ","AR","CA","CO","CT","DE","FL","GA","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY")

for (i_state in state_ids) {
  
  url_str <- paste('https://www.ncdc.noaa.gov/cag/statewide/time-series/',i_state,'-pcp-all-10-1895-2018.csv?base_prd=true&begbaseyear=1901&endbaseyear=2000',sep ="")

  temporary_data <- fread(url_str)
  temporary_data <- mutate(temporary_data,state_cd = state_list[i_state])
  
  if (i_state == 1){
    all_data <- temporary_data
  } else{
    all_data <- bind_rows(all_data,temporary_data)
  }
  print(state_list[i_state])
}

all_data <- rename(all_data,Precip_inches = Value, Anomaly_inches = Anomaly)
write.csv(all_data, file = "C:/Users/stahlm/Documents/Teaching_UnionCollege/Environmental_Data_Analysis/Class_Data/NOAA_State_Precip.csv")

```

Get monthly mean temp by state from NOAA
```{r}
state_ids <- 1:48
state_list<- c("AL","AZ","AR","CA","CO","CT","DE","FL","GA","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY")

for (i_state in state_ids) {
  
  url_str <- paste('https://www.ncdc.noaa.gov/cag/statewide/time-series/',toString(i_state),'-tavg-all-10-1895-2018.csv?base_prd=true&begbaseyear=1901&endbaseyear=2000',sep ="")

  temporary_data <- fread(url_str)
  temporary_data <- mutate(temporary_data,state_cd = state_list[i_state])
  
  if (i_state == 1){
    all_data <- temporary_data
  } else{
    all_data <- bind_rows(all_data,temporary_data)
  }
  print(state_list[i_state])
}

all_data <- rename(all_data,Temp_F = Value, Anomaly_F = Anomaly)
write.csv(all_data, file = "C:/Users/stahlm/Documents/Teaching_UnionCollege/Environmental_Data_Analysis/Class_Data/NOAA_State_Avg_Temp.csv")
```
```{r}
library(readxl)
library(dataRetrieval)

streamflow_data <- readNWISdata(sites = c("01335754,01358000"), service="dv", parameterCd="00060",startDate ="1700-01-01",endDate=Sys.Date())
```

```{r}

ggplot(a) + geom_line(aes(x=dateTime,y=X_00060_00003)) + facet_wrap(~site_no)# + factor(~site_no)
```
```{r}
write_csv(streamflow_data,"C:/Users/stahlm/Documents/Teaching_UnionCollege/Environmental_Data_Analysis/Class_Data/Hudson_River_Streamflow.csv")
ggplot(a) + geom_line(aes(x=dateTime,y=X_00060_00003,color = site_no)) + scale_y_log10()
```
```{r}
#loc_a <- filter(streamflow_data,site_no =="01335754")
loc_comb <- select(streamflow_data,dateTime,site_no,X_00060_00003) # select sub-set of columns
loc_comb <- spread(loc_comb,site_no,X_00060_00003) # spread the data so that there is a single row for each date and a column for each site
loc_comb_both <- drop_na(loc_comb,`01335754`,`01358000`) # drop rows with NAs so that we keep only dates that have streamflow measured at both sites
loc_comb_both <- mutate(loc_comb_both, month_num = month(dateTime))

```
```{r}
ggplot(loc_comb_both) + geom_point(aes(x = `01335754`, y = `01358000`, color = month_num)) 

ggplot(loc_comb_both) + geom_point(aes(x = `01335754`, y = `01358000`)) + geom_abline(intercept = 0, slope = 1, color="red", linetype="dashed", size=1.5)  + scale_y_log10() + scale_x_log10() + facet_wrap(~month_num)
```
```{r}
a<- ecdf(loc_comb_both$`01335754`)
xval <- data.frame(1:max(loc_comb_both$`01335754`))
yval <- data.frame(a(1:max(loc_comb_both$`01335754`)))
cdf_flow <- bind_cols(xval,yval) %>% rename(xvalue = X1.max.loc_comb_both..01335754..,yvalue = a.1.max.loc_comb_both..01335754...)

ggplot(cdf_flow) + geom_line(aes(x = xvalue, y = yvalue,xlim =c(1000,10000)))
```

