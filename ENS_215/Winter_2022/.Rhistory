library(tidyverse)
library(rnoaa)
df_stations <- get_station_metadata()
library(tidyverse)
library(stationaRy)
df_stations <- get_station_metadata()
View(df_stations)
df_stations <- get_station_metadata()
lga_met_data <-
get_met_data(
station_id = "725030-14732",
years = 2021
)
View(lga_met_data)
lga_met_data <-
get_met_data(
station_id = "725030-14732",
years = 2020
)
View(lga_met_data)
library(tidyverse)
library(stationaRy)
library(sf)
library(tmap)
df_stations <- df_stations %>%
st_as_sf(coords = c("lon", "lat"))
df_stations <- df_stations %>%
filter(!is.na(lat), !is.na(lon)) %>%
st_as_sf(coords = c("lon", "lat"))
df_stations %>%
ggplot() +
geom_sf()
library(tidyverse)
library(stationaRy)
library(sf)
library(tmap)
library(spData)
df_stations %>%
ggplot() +
geom_sf() +
geom_sf(data = spData::world)
spData::world %>%
ggplot() +
geom_sf()
spData::world %>%
ggplot() +
geom_sf() +
geom_sf(data = df_stations)
spData::world %>%
tm_shape() +
tm_polygons()
spData::world %>%
tm_shape() +
tm_polygons() +
tm_shape( df_stations) +
tm_dots()
harvey = getGridMET(aoi_get(state = c("NY", "NJ")),
param = "prcp",
startDate = "2021-08-16", endDate = "2021-08-24")
library(tidyverse)
library(stationaRy)
library(sf)
library(tmap)
library(spData)
library(AOI)
library(climateR)
harvey = getGridMET(aoi_get(state = c("NY", "NJ")),
param = "prcp",
startDate = "2021-08-16", endDate = "2021-08-24")
#> Spherical geometry (s2) switched off
#> Spherical geometry (s2) switched on
levelplot(harvey$gridmet_prcp, par.settings = BTCTheme, main = "Hurricane Henri")
harvey = getGridMET(aoi_get(state = c("NY", "NJ")),
param = "prcp",
startDate = "2021-08-16", endDate = "2021-08-24")
#> Spherical geometry (s2) switched off
#> Spherical geometry (s2) switched on
levelplot(harvey$gridmet_prcp, par.settings = BTCTheme, main = "Hurricane Henri")
library(tidyverse)
library(stationaRy)
library(sf)
library(tmap)
library(spData)
library(AOI)
library(climateR)
library(raster)
library(rasterVis)
rasterVis::levelplot(harvey$gridmet_prcp, par.settings = BTCTheme, main = "Hurricane Henri")
henri = getGridMET(aoi_get(state = c("NY", "NJ")),
param = "prcp",
startDate = "2021-08-16", endDate = "2021-08-24")
#> Spherical geometry (s2) switched off
#> Spherical geometry (s2) switched on
rasterVis::levelplot(henri$gridmet_prcp, par.settings = BTCTheme, main = "Hurricane Henri")
r = raster::stack(henri)
r %>%
tm_shape() +
tm_raster()
r %>%
tm_shape() +
tm_raster() +
tm_shape(spData::us_states) +
tm_borders()
r %>%
tm_shape() +
tm_raster()
r %>%
tm_shape() +
tm_raster() +
tm_shape(spData::us_states) +
tm_borders()
r %>%
tm_shape() +
tm_raster(palette = "RdBu") +
tm_shape(spData::us_states) +
tm_borders()
r %>%
tm_shape() +
tm_raster() +
tm_shape(spData::us_states) +
tm_borders()
r %>%
tm_shape() +
tm_raster(style = "cont") +
tm_shape(spData::us_states) +
tm_borders()
henri = getGridMET(aoi_get(state = c("NY", "NJ","CT","MA")),
param = "prcp",
startDate = "2021-08-16", endDate = "2021-08-24")
#> Spherical geometry (s2) switched off
#> Spherical geometry (s2) switched on
rasterVis::levelplot(henri$gridmet_prcp, par.settings = BTCTheme, main = "Hurricane Henri")
r = raster::stack(henri)
r %>%
tm_shape() +
tm_raster(style = "cont") +
tm_shape(spData::us_states) +
tm_borders()
library(tidyverse)
library(plotly)
read_csv("../../Data/NOAA_State_Temp_Lab_Data.csv")
df_temperatures <- read_csv("../../Data/NOAA_State_Temp_Lab_Data.csv")
View(df_temperatures)
df_temperatures %>%
filter(state_cd == "NY") %>%
group_by(Year) %>%
summarize(Avg_Temp_F = mean(Avg_Temp_F)) %>%
ggplot(aes(x = Year, y = Avg_Temp_F))
df_temperatures %>%
filter(state_cd == "NY") %>%
group_by(Year) %>%
summarize(Avg_Temp_F = mean(Avg_Temp_F))
df_temperatures %>%
filter(state_cd == "NY") %>%
group_by(Year) %>%
summarize(Avg_Temp_F = mean(Avg_Temp_F)) %>%
ggplot(aes(x = Year, y = Avg_Temp_F)) +
geom_point()
df_temperatures %>%
filter(state_cd == "NY") %>%
group_by(Year) %>%
summarize(Avg_Temp_F = mean(Avg_Temp_F)) %>%
ggplot(aes(x = Year, y = Avg_Temp_F)) +
geom_point() +
geom_line()
df_temperatures %>%
filter(state_cd == "NY") %>%
group_by(Year) %>%
summarize(Avg_Temp_F = mean(Avg_Temp_F)) %>%
ggplot(aes(x = Year, y = Avg_Temp_F)) +
geom_point() +
geom_line() +
labs(x = "Year",
y = "Avg. temperature (F)")
df_temperatures %>%
filter(state_cd == "NY") %>%
group_by(Year) %>%
summarize(Avg_Temp_F = mean(Avg_Temp_F)) %>%
ggplot(aes(x = Year, y = Avg_Temp_F)) +
geom_point() +
geom_line() +
labs(x = "Year",
y = "Avg. temperature (F)") +
theme_bw()
fig_01 <- df_temperatures %>%
filter(state_cd == "NY") %>%
group_by(Year) %>%
summarize(Avg_Temp_F = mean(Avg_Temp_F)) %>%
ggplot(aes(x = Year, y = Avg_Temp_F)) +
geom_point() +
geom_line() +
labs(x = "Year",
y = "Avg. temperature (F)") +
theme_bw()
ggplotly(fig_01)
fig_01 <- df_temperatures %>%
filter(state_cd %in% c("NY","CA")) %>%
group_by(Year) %>%
summarize(Avg_Temp_F = mean(Avg_Temp_F)) %>%
ggplot(aes(x = Year, y = Avg_Temp_F, color = state_cd)) +
geom_point() +
geom_line() +
labs(x = "Year",
y = "Avg. temperature (F)",
title = "Mean annual temperature: 1895-2018"
) +
theme_bw()
ggplotly(fig_01)
fig_01 <- df_temperatures %>%
filter(state_cd %in% c("NY","CA")) %>%
group_by(Year, state_cd) %>%
summarize(Avg_Temp_F = mean(Avg_Temp_F)) %>%
ggplot(aes(x = Year, y = Avg_Temp_F, color = state_cd)) +
geom_point() +
geom_line() +
labs(x = "Year",
y = "Avg. temperature (F)",
title = "Mean annual temperature: 1895-2018"
) +
theme_bw()
ggplotly(fig_01)
fig_01 <- df_temperatures %>%
filter(state_cd %in% c("NY","MA")) %>%
group_by(Year, state_cd) %>%
summarize(Avg_Temp_F = mean(Avg_Temp_F)) %>%
ggplot(aes(x = Year, y = Avg_Temp_F, color = state_cd)) +
geom_point() +
geom_line() +
labs(x = "Year",
y = "Avg. temperature (F)",
title = "Mean annual temperature: 1895-2018"
) +
theme_bw()
ggplotly(fig_01)
fig_01 <- df_temperatures %>%
filter(state_cd %in% c("NY","MA")) %>%
group_by(Year, state_cd) %>%
summarize(Avg_Temp_F = mean(Avg_Temp_F)) %>%
ggplot(aes(x = Year, y = Avg_Temp_F, color = state_cd)) +
geom_point() +
geom_line() +
scale_color_manual(values = c("black", "grey")) +
labs(x = "Year",
y = "Avg. temperature (F)",
title = "Mean annual temperature: 1895-2018"
) +
theme_bw()
ggplotly(fig_01)
fig_01 <- df_temperatures %>%
filter(state_cd %in% c("NY","MA")) %>%
group_by(Year, state_cd) %>%
summarize(Avg_Temp_F = mean(Avg_Temp_F)) %>%
ggplot(aes(x = Year, y = Avg_Temp_F, color = state_cd)) +
geom_point() +
geom_line() +
scale_color_manual(values = c("black", "darkgrey")) +
labs(x = "Year",
y = "Avg. temperature (F)",
title = "Mean annual temperature: 1895-2018"
) +
theme_bw()
ggplotly(fig_01)
fig_01 <- df_temperatures %>%
filter(state_cd %in% c("NY","MA")) %>%
group_by(Year, state_cd) %>%
summarize(Avg_Temp_F = mean(Avg_Temp_F)) %>%
ggplot(aes(x = Year, y = Avg_Temp_F, color = state_cd)) +
geom_point() +
geom_line() +
scale_color_manual(values = c("black", "blue")) +
labs(x = "Year",
y = "Avg. temperature (F)",
title = "Mean annual temperature: 1895-2018"
) +
theme_bw()
ggplotly(fig_01)
fig_01 <- df_temperatures %>%
filter(state_cd %in% c("NY","MA")) %>%
group_by(Year, state_cd) %>%
summarize(Avg_Temp_F = mean(Avg_Temp_F)) %>%
ggplot(aes(x = Year, y = Avg_Temp_F, color = state_cd)) +
geom_point() +
geom_line() +
scale_color_manual(values = c("black", "blue")) +
labs(x = "Year",
y = "Avg. temperature (F)",
title = "Mean annual temperature: 1895-2018",
legend = "State"
) +
theme_bw()
ggplotly(fig_01)
fig_01 <- df_temperatures %>%
filter(state_cd %in% c("NY","MA")) %>%
group_by(Year, state_cd) %>%
summarize(Avg_Temp_F = mean(Avg_Temp_F)) %>%
ggplot(aes(x = Year, y = Avg_Temp_F, color = state_cd)) +
geom_point() +
geom_line() +
scale_color_manual(values = c("black", "blue")) +
labs(x = "Year",
y = "Avg. temperature (F)",
title = "Mean annual temperature: 1895-2018",
color = "State"
) +
theme_bw()
ggplotly(fig_01)
