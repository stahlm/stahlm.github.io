(fig_01 / fig_02) +
plot_annotation(title = paste(loc2use,": Temperature and precipitation", sep = ""),
caption = "Data source: GridMET",
tag_levels = "i"
)
(fig_01 / fig_02) +
plot_annotation(title = paste(loc2use,": Temperature and precipitation", sep = ""),
caption = "Data source: GridMET",
tag_levels = "a"
)
loc2use <- 'Mt Washington, NH'
#loc2use <- 'Union College'
AOI = AOI::geocode(loc2use,
pt = TRUE)
ts  = getGridMET(AOI, param = c("tmax","tmin", "prcp"),
startDate = "2021-01-01",
endDate = "2021-12-30")
ts <- ts %>%
mutate(tmax = ((tmax - 273.15)*(9/5) +32),
tmin = ((tmin - 273.15)*(9/5) +32),
prcp = prcp/25.4
)
fig_01 <- ts %>%
ggplot() +
geom_line(aes(x = date, y = tmax), color = "red") +
geom_line(aes(x = date, y = tmin), color = "blue") +
labs(x = "",
y = "Temperature (F)",
) +
geom_hline(yintercept = 32, linetype = "dashed") +
theme_bw()
View(ts)
fig_01 <- ts %>%
ggplot() +
geom_line(aes(x = date, y = tmax), color = "red") +
geom_line(aes(x = date, y = tmin), color = "blue") +
labs(x = "",
y = "Temperature (F)",
) +
geom_hline(yintercept = 32, linetype = "dashed") +
theme_bw()
loc2use <- 'Mt Washington, NH'
#loc2use <- 'Union College'
AOI = AOI::geocode(loc2use,
pt = TRUE)
ts  = getGridMET(AOI, param = c("tmax","tmin", "prcp"),
startDate = "2021-01-01",
endDate = "2021-12-30")
ts <- ts %>%
mutate(tmax = ((tmax - 273.15)*(9/5) +32),
tmin = ((tmin - 273.15)*(9/5) +32),
prcp = prcp/25.4
)
fig_01 <- ts %>%
ggplot() +
geom_line(aes(x = date, y = tmax), color = "red") +
geom_line(aes(x = date, y = tmin), color = "blue") +
labs(x = "",
y = "Temperature (F)",
) +
geom_hline(yintercept = 32, linetype = "dashed") +
theme_bw()
fig_01 <- ts %>%
ggplot() +
geom_line(aes(x = date, y = tmax), color = "red")
fig_01 <- ts %>%
ggplot() +
geom_line(aes(x = date, y = tmax), color = "red") +
geom_line(aes(x = date, y = tmin), color = "blue") +
labs(x = "",
y = "Temperature (F)",
)
fig_01 <- ts %>%
ggplot() +
geom_line(aes(x = date, y = tmax), color = "red") +
geom_line(aes(x = date, y = tmin), color = "blue")
fig_01
fig_01 <- ts %>%
ggplot() +
geom_line(aes(x = date, y = tmax), color = "red") +
geom_line(aes(x = date, y = tmin), color = "blue") +
labs(x = "",
y = "Temperature (F)",
) +
geom_hline(yintercept = 32, linetype = "dashed") +
theme_bw()
rlang::last_error()
fig_01 <- ts %>%
ggplot() +
geom_line(aes(x = date, y = tmax), color = "red") +
geom_line(aes(x = date, y = tmin), color = "blue") +
labs(x = "",
y = "Temperature (F)"
) +
geom_hline(yintercept = 32, linetype = "dashed") +
theme_bw()
fig_02 <- ts %>%
ggplot() +
geom_col(aes(x = date, y = prcp), color = "black") +
labs(y = "Precipitation (inches)") +
theme_bw()
(fig_01 / fig_02) +
plot_annotation(title = paste(loc2use,": Temperature and precipitation", sep = ""),
caption = "Data source: GridMET",
tag_levels = "a"
)
View(AOI)
henri = getGridMET(aoi_get(state = c("NY", "NJ","CT","MA")),
param = "prcp",
startDate = "2021-08-16", endDate = "2021-08-24")
#> Spherical geometry (s2) switched off
#> Spherical geometry (s2) switched on
rasterVis::levelplot(henri$gridmet_prcp, par.settings = BTCTheme, main = "Hurricane Henri")
r = raster::stack(henri)
r_inches <- r/25.4
tmap_mode("plot")
r_inches %>%
tm_shape() +
tm_raster(style = "cont") +
tm_shape(spData::us_states) +
tm_borders()
raster::maxValue(r_inches)
round(raster::maxValue(r_inches),2)
round(raster::maxValue(r_inches),2) %>% as.data.frame()
ts <- ts %>%
mutate(tmax = ((tmax - 273.15)*(9/5) +32),
tmin = ((tmin - 273.15)*(9/5) +32),
prcp = prcp/25.4
)
fig_01 <- ts %>%
ggplot() +
geom_line(aes(x = date, y = tmax), color = "red") +
geom_line(aes(x = date, y = tmin), color = "blue") +
labs(x = "",
y = "Temperature (F)"
) +
geom_hline(yintercept = 32, linetype = "dashed") +
theme_bw()
fig_02 <- ts %>%
ggplot() +
geom_col(aes(x = date, y = prcp), color = "black") +
labs(y = "Precipitation (inches)") +
theme_bw()
(fig_01 / fig_02) +
plot_annotation(title = paste(loc2use,": Temperature and precipitation", sep = ""),
caption = "Data source: GridMET",
tag_levels = "a"
)
ts <- ts %>%
mutate(tmax = ((tmax - 273.15)*(9/5) +32),
tmin = ((tmin - 273.15)*(9/5) +32),
prcp = prcp/25.4
)
fig_01 <- ts %>%
ggplot() +
geom_line(aes(x = date, y = tmax), color = "red") +
geom_line(aes(x = date, y = tmin), color = "blue") +
labs(x = "",
y = "Temperature (F)"
) +
geom_hline(yintercept = 32, linetype = "dashed") +
theme_bw()
fig_02 <- ts %>%
ggplot() +
geom_col(aes(x = date, y = prcp), color = "black") +
labs(y = "Precipitation (inches)") +
theme_bw()
(fig_01 / fig_02) +
plot_annotation(title = paste(loc2use,": Temperature and precipitation", sep = ""),
caption = "Data source: GridMET",
tag_levels = "a"
)
loc2use <- 'Death Valley National Park'
#loc2use <- 'Union College'
AOI = AOI::geocode(loc2use,
pt = TRUE)
ts  = getGridMET(AOI, param = c("tmax","tmin", "prcp"),
startDate = "2021-01-01",
endDate = "2021-12-30")
ts <- ts %>%
mutate(tmax = ((tmax - 273.15)*(9/5) +32),
tmin = ((tmin - 273.15)*(9/5) +32),
prcp = prcp/25.4
)
fig_01 <- ts %>%
ggplot() +
geom_line(aes(x = date, y = tmax), color = "red") +
geom_line(aes(x = date, y = tmin), color = "blue") +
labs(x = "",
y = "Temperature (F)"
) +
geom_hline(yintercept = 32, linetype = "dashed") +
theme_bw()
fig_02 <- ts %>%
ggplot() +
geom_col(aes(x = date, y = prcp), color = "black") +
labs(y = "Precipitation (inches)") +
theme_bw()
(fig_01 / fig_02) +
plot_annotation(title = paste(loc2use,": Temperature and precipitation", sep = ""),
caption = "Data source: GridMET",
tag_levels = "a"
)
#loc2use <- 'Death Valley National Park'
loc2use <- 'Union College'
AOI = AOI::geocode(loc2use,
pt = TRUE)
ts  = getGridMET(AOI, param = c("tmax","tmin", "prcp"),
startDate = "2021-01-01",
endDate = "2021-12-30")
ts <- ts %>%
mutate(tmax = ((tmax - 273.15)*(9/5) +32),
tmin = ((tmin - 273.15)*(9/5) +32),
prcp = prcp/25.4
)
summary(ts)
ts %>%
summarize(pcrp_max = max(prcp))
ts %>%
summarize(pcrp_max = max(prcp),
temp_max = max(tmax),
temp_min = min(tmin),
temp_mean = mean((tmin+tmax)/2)
)
ts %>%
summarize(pcrp_max = max(prcp),
temp_max = max(tmax),
temp_min = min(tmin),
temp_mean = mean((tmin+tmax)/2),
temp_max_change = max(tmax - tmin)
)
2+2
library(tidyverse)
library(stationaRy)
library(sf)
library(tmap)
library(spData)
library(AOI)
library(climateR)
library(raster)
library(rasterVis)
library(patchwork)
library(tidyverse)
library(stationaRy)
library(sf)
library(tmap)
library(spData)
library(AOI)
library(climateR)
library(raster)
library(rasterVis)
library(patchwork)
#loc2use <- 'Death Valley National Park'
loc2use <- 'Union College'
AOI = AOI::geocode(loc2use,
pt = TRUE)
ts  = getGridMET(AOI, param = c("tmax","tmin", "prcp"),
startDate = "2021-01-01",
endDate = "2021-12-30")
ts <- ts %>%
mutate(tmax = ((tmax - 273.15)*(9/5) +32),
tmin = ((tmin - 273.15)*(9/5) +32),
prcp = prcp/25.4
)
ts %>%
summarize(pcrp_max = max(prcp),
temp_max = max(tmax),
temp_min = min(tmin),
temp_mean = mean((tmin+tmax)/2),
temp_max_change = max(tmax - tmin)
)
fig_01 <- ts %>%
ggplot() +
geom_line(aes(x = date, y = tmax), color = "red") +
geom_line(aes(x = date, y = tmin), color = "blue") +
labs(x = "",
y = "Temperature (F)"
) +
geom_hline(yintercept = 32, linetype = "dashed") +
theme_bw()
fig_02 <- ts %>%
ggplot() +
geom_col(aes(x = date, y = prcp), color = "black") +
labs(y = "Precipitation (inches)") +
theme_bw()
(fig_01 / fig_02) +
plot_annotation(title = paste(loc2use,": Temperature and precipitation", sep = ""),
caption = "Data source: GridMET",
tag_levels = "a"
)
fig_01 <- ts %>%
ggplot() +
geom_line(aes(x = date, y = tmax), color = "black") +
geom_line(aes(x = date, y = tmin), color = "blue") +
labs(x = "",
y = "Temperature (F)"
) +
geom_hline(yintercept = 32, linetype = "dashed") +
theme_bw()
fig_02 <- ts %>%
ggplot() +
geom_col(aes(x = date, y = prcp), color = "black") +
labs(y = "Precipitation (inches)") +
theme_bw()
(fig_01 / fig_02) +
plot_annotation(title = paste(loc2use,": Temperature and precipitation", sep = ""),
caption = "Data source: GridMET",
tag_levels = "a"
)
#loc2use <- 'Death Valley National Park'
loc2use <- 'Chicago, IL'
AOI = AOI::geocode(loc2use,
pt = TRUE)
ts  = getGridMET(AOI, param = c("tmax","tmin", "prcp"),
startDate = "2021-01-01",
endDate = "2021-12-30")
ts <- ts %>%
mutate(tmax = ((tmax - 273.15)*(9/5) +32),
tmin = ((tmin - 273.15)*(9/5) +32),
prcp = prcp/25.4
)
ts %>%
summarize(pcrp_max = max(prcp),
temp_max = max(tmax),
temp_min = min(tmin),
temp_mean = mean((tmin+tmax)/2),
temp_max_change = max(tmax - tmin)
)
fig_01 <- ts %>%
ggplot() +
geom_line(aes(x = date, y = tmax), color = "red") +
geom_line(aes(x = date, y = tmin), color = "blue") +
labs(x = "",
y = "Temperature (F)"
) +
geom_hline(yintercept = 32, linetype = "dashed") +
theme_bw()
fig_02 <- ts %>%
ggplot() +
geom_col(aes(x = date, y = prcp), color = "black") +
labs(y = "Precipitation (inches)") +
theme_bw()
(fig_01 / fig_02) +
plot_annotation(title = paste(loc2use,": Temperature and precipitation", sep = ""),
caption = "Data source: GridMET",
tag_levels = "a"
)
henri = getGridMET(aoi_get(state = c("NY", "NJ","CT","MA")),
param = "prcp",
startDate = "2021-08-16", endDate = "2021-08-24")
#> Spherical geometry (s2) switched off
#> Spherical geometry (s2) switched on
#rasterVis::levelplot(henri$gridmet_prcp, par.settings = BTCTheme, main = "Hurricane Henri")
r_inches <- r/25.4
r = raster::stack(henri)
r_inches <- r/25.4
tmap_mode("plot")
fig_map <- r_inches %>%
tm_shape() +
tm_raster(style = "cont") +
tm_shape(spData::us_states) +
tm_borders()
fig_map
tmap_mode("view")
fig_map
fig_map
a <- 100^2
a
?na.omit
a_vec <- seq(1,10, by = 1.0)
b_vec <- rep(5,10)
a_vec <= 7
a_vec > b_vec
a_vec == b_vec
getwd()
getwd()
getwd()
# install.packages("tidyverse")
# install.packages("plotly")
library(tidyverse)
library(lubridate)
## Load in data
met_data <- read_csv('http://stahlm.github.io/ENS_215/Data/Blue_Hills_MA_Precip_Temp_Data_1.csv')
met_data <- mutate(met_data, DATE = parse_date_time(DATE,"mdy")) # convert date into computable format
met_data <- select(met_data, -c(TOBS)) # remove the TOBS column, since we won't use it
View(met_data)
## Load in data
met_data <- read_csv('http://stahlm.github.io/ENS_215/Data/Blue_Hills_MA_Precip_Temp_Data_1.csv')
met_data <- mutate(met_data, DATE = parse_date_time(DATE,"mdy")) # convert date into computable format
met_data <- select(met_data, -c(TOBS)) # remove the TOBS column, since we won't use it
# install.packages("tidyverse")
# install.packages("plotly")
library(tidyverse)
library(lubridate)
## Load in data
met_data <- read_csv('http://stahlm.github.io/ENS_215/Data/Blue_Hills_MA_Precip_Temp_Data_1.csv')
met_data <- mutate(met_data, DATE = parse_date_time(DATE,"mdy")) # convert date into computable format
met_data <- select(met_data, -c(TOBS)) # remove the TOBS column, since we won't use it
head(met_data) # shows us the first few rows and provides info about data types
tail(met_data) # shows us the last few rows and provides info about data types
summary(met_data)
ggplot(met_data) +
geom_line(aes(x = DATE, y = PRCP),color = "blue")
met_data_2000_2010 <- filter(met_data, year(DATE) >= 2000, year(DATE) <= 2010) # new data frame
ggplot(met_data_2000_2010) +
geom_line(aes(x = yday(DATE), y = PRCP), color = "blue") +
facet_wrap(~year(DATE)) # plot the data
met_data <- mutate(met_data,year_val = year(DATE), month_val = month(DATE), day_val = day(DATE)) # add columns for year, month, and day
annual_precip <- group_by(met_data,year_val) # group the data by year
annual_precip<- summarise(annual_precip,tot_precip = sum(PRCP,na.rm = TRUE)) # create a new data frame that has the total annual precipitation (inches)
ggplot(annual_precip) +
geom_line(aes(x = year_val, y = tot_precip),color = "blue") +
geom_point(aes(x = year_val, y = tot_precip),color = "black")
ggplot(met_data) +
geom_bar(aes(x = DATE, y = PRCP),color = "blue")
ggplot(met_data) +
geom_col(aes(x = DATE, y = PRCP),color = "blue")
ggplot(met_data) +
geom_line(aes(x = DATE, y = PRCP),color = "blue")
filter(annual_precip, year_val == 1962)
filter(annual_precip, year_val == 1963)
filter(annual_precip, year_val == 1964)
filter(annual_precip, year_val == 1965)
# Group the data by year and month
monthly_precip <- group_by(met_data, year_val, month_val) %>%
summarise(tot_precip = sum(PRCP, na.rm = TRUE))
# Create a box plot of the monthly precipitation data
fig_box <- ggplot(monthly_precip, aes(x=factor(month_val), y=tot_precip)) +
geom_boxplot()
fig_box
# Group the data by year and month
monthly_precip <- group_by(met_data, year_val, month_val) %>%
summarise(tot_precip = sum(PRCP, na.rm = TRUE))
# Create a box plot of the monthly precipitation data
fig_box <- ggplot(monthly_precip, aes(x=factor(month_val), y=tot_precip)) +
geom_boxplot()
fig_box
# Group the data by year and month
monthly_precip <- group_by(met_data, year_val, month_val) %>%
summarise(tot_precip = sum(PRCP, na.rm = TRUE))
# Create a box plot of the monthly precipitation data
fig_box <- ggplot(monthly_precip, aes(x=factor(month_val), y=tot_precip)) +
geom_boxplot()
fig_box
?geom_boxplot()
# Group the data by year and month
monthly_precip <- group_by(met_data, year_val, month_val) %>%
summarise(tot_precip = sum(PRCP, na.rm = TRUE))
# Create a box plot of the monthly precipitation data
fig_box <- ggplot(monthly_precip, aes(x=factor(month_val), y=tot_precip)) +
geom_boxplot()
fig_box
summary(annual_precip)
sum(2,4,6)
paste("Mason","Stahl")
paste("Mason","Stahl", sep = ",")
paste("Mason","Stahl", sep = ", ")
rev(paste("Mason","Stahl", sep = ", "))
x + 2
sum(2,2, NA)
sum(2,2, NA, na.rm = T)
library(tidyverse)
library(AOI)
library(tidyverse)
library(lubridate)
## Load in data
met_data <- read_csv('http://stahlm.github.io/ENS_215/Data/Blue_Hills_MA_Precip_Temp_Data_1.csv')
met_data <- mutate(met_data, DATE = parse_date_time(DATE,"mdy")) # convert date into computable format
met_data <- select(met_data, -c(TOBS)) # remove the TOBS column, since we won't use it
sum[2,2]
sums(2,2)
addition(2,2)
SuM(2,2)
2+2
a <- 10
sum(2,4,6,8)
Sum(2,4,6,8)
sum(2,4)
sum[2,4]
2+2\
2+2
library(tidyverse)
library(lubridate)
met_data <- read_csv('http://stahlm.github.io/ENS_215/Data/Blue_Hills_MA_Precip_Temp_Data_1.csv')
View(met_data)
met_data <- mutate(met_data, DATE = parse_date_time(DATE,"mdy")) # convert date into computable format
met_data <- select(met_data, -c(TOBS)) # remove the TOBS column, since we won't use it
head(met_data)
tail(met_data)
summary(met_data)
ggplot(met_data) +
geom_line(aes(x = DATE, y = PRCP),color = "blue")
met_data_2000_2010 <- filter(met_data, year(DATE) >= 2000, year(DATE) <= 2010) # new data frame
ggplot(met_data_2000_2010) +
geom_line(aes(x = yday(DATE), y = PRCP), color = "blue") +
facet_wrap(~year(DATE)) # plot the data
met_data <- mutate(met_data, year_val = year(DATE), month_val = month(DATE), day_val = day(DATE)) # add columns for year, month, and day
annual_precip <- group_by(met_data,year_val) # group the data by year
annual_precip <- summarise(annual_precip,tot_precip = sum(PRCP,na.rm = TRUE)) # create a new data frame that has the total annual precipitation (inches)
View(annual_precip)
ggplot(annual_precip) +
geom_line(aes(x = year_val, y = tot_precip),color = "blue") +
geom_point(aes(x = year_val, y = tot_precip),color = "black")
ggplot(annual_precip) +
geom_line(aes(x = year_val, y = tot_precip),color = "blue") +
geom_point(aes(x = year_val, y = tot_precip),color = "black") +
geom_smooth(aes(x = year_val, y = tot_precip))
ggplot(annual_precip) +
geom_line(aes(x = year_val, y = tot_precip),color = "blue") +
geom_point(aes(x = year_val, y = tot_precip),color = "black") +
geom_smooth(aes(x = year_val, y = tot_precip), method = "lm")
filter(annual_precip, year_val == 1965)
