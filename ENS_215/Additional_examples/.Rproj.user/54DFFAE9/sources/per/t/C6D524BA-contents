---
title: "R Notebook"
output:
  html_document:
    df_print: paged
---

Notes:

1) Need to get info about the rice varieties for each of the BET samples
2) In FieldMargin the field labeled BET-40B, BET-40C, BET-40D, BET-40E, BET-40F should almost certainly be BET-41 with their respective A,B,C,... appended to them.
3) IMPORTANT: BET-44 coordinates in the "Cambodia_Jan23_ALLDATA_BySite.xlsx" appear to be incorrect.  These lat/long put BET-44 in the position as seen on FieldMargin of BET-42.


```{r}
library(tidyverse)
library(sf)
library(tmap)
library(moderndive)

library(GGally)
```

## Data prep
```{r}
df_soil_properties <- readxl::read_xlsx("../Data/Sample_analysis/Soil_properties/Cambodia soil samples (texture, pH, SpC).xlsx")
```

```{r}
df_soil_properties <- df_soil_properties %>% 
  rename(soil_pH = pH,
         soil_SPC__uScm = `Specific Conductivity (uS/cm)`) %>% 
  select(Site = `Sample ID`, Soil_description = `Soil description`,
         soil_pH, soil_SPC__uScm, Soil_texture_category)
```



```{r}
df_chem_cambodia <- readxl::read_xlsx("../Data/Cambodia_Jan23_ALLDATA_BySite.xlsx", sheet = "LeafGrainSoil")
```

```{r}
df_chem_cambodia <- df_chem_cambodia %>% 
  replace(. == "<LOD", "0")
```

```{r}
df_chem_cambodia <- df_chem_cambodia %>% 
   mutate(across(4:last_col(), ~ as.numeric(.)))
```


```{r}
df_chem_cambodia <- df_chem_cambodia %>% 
  select(!contains("Sigma"))
```

```{r}
df_chem_cambodia <- df_chem_cambodia %>% 
  mutate(Site = str_replace(Site, pattern = "_", replacement = "-"))

```


```{r}
df_chem_cambodia <- df_chem_cambodia %>% 
  mutate(Site_letter = if_else(str_detect(str_sub(Site, -1,-1), "^[:alpha:]"),
                               str_sub(Site, -1,-1),
                               NA
                               )
         
         )
```


```{r}
df_chem_cambodia <- df_chem_cambodia %>% 
  mutate(Site = if_else(str_detect(str_sub(Site, -1,-1), "^[:alpha:]"),
                               str_sub(Site, 1,-2),
                               Site
                               )
         
         )
```


```{r}
df_chem_cambodia <- df_chem_cambodia %>% 
  mutate(Site = if_else(is.na(Site_letter),
                        Site,
                        paste(Site, Site_letter, sep = " ")
                        ))
```

```{r}
df_chem_cambodia <- df_chem_cambodia %>% 
  select(-Site_letter)
```


```{r}
df_chem_cambodia <- df_chem_cambodia %>% 
  left_join(df_soil_properties, by = "Site")
```

```{r}
df_chem_cambodia <- df_chem_cambodia %>% 
  rename(P_Grain = `P _Grain`)
```


```{r}
df_chem_cambodia <- df_chem_cambodia %>% 
  mutate(Soil_texture_category = if_else(str_detect(Site, "BET-41"), "Clay", Soil_texture_category))
```

```{r}
df_chem_cambodia <- df_chem_cambodia %>% 
  separate(col = Cordinates, into = c("Lat", "Long"), sep = ",")
```

```{r}
sf_chem_cambodia <- df_chem_cambodia %>% 
  filter(!is.na(Lat), !is.na(Long)) %>% 
  st_as_sf(coords = c("Long", "Lat"))
```


## Get occurrence and recurrence data
```{r}
raster_occur <- raster::raster(x = "./5508540/spatial_data/occurrence_100E_20Nv1_4_2021.tif")
raster_season <- raster::raster(x = "./5508540/spatial_data/seasonality_100E_20Nv1_4_2021.tif")
raster_recurr <- raster::raster(x = "./5508540/spatial_data/recurrence_100E_20Nv1_4_2021.tif")
raster_transitions <- raster::raster(x = "./5508540/spatial_data/transitions_100E_20Nv1_4_2021.tif")
```


```{r}
extract_occur <- raster::extract(raster_occur, sf_chem_cambodia, df = T, fun = mean)
sf_chem_cambodia$occur_value <- extract_occur$value


extract_season <- raster::extract(raster_season, sf_chem_cambodia, df = T, fun = mean)
sf_chem_cambodia$seasonal_value <- extract_season$value

extract_recurr <- raster::extract(raster_recurr, sf_chem_cambodia, df = T, fun = mean)
sf_chem_cambodia$recurr_value <- extract_recurr$value

extract_transitions <- raster::extract(raster_transitions, sf_chem_cambodia, df = T, fun = mean)
sf_chem_cambodia$transitions_value <- extract_transitions$value
```


```{r}
occur_recur <- sf_chem_cambodia %>% 
  st_drop_geometry() %>% 
  select(Site, occur_value, recurr_value, seasonal_value, transitions_value)
  
```

```{r}
df_chem_cambodia <- df_chem_cambodia %>% 
  left_join(occur_recur)
```

```{r}
df_chem_cambodia %>% 
  filter(!is.na(As_Grain)) %>% 
  ggplot(aes(x = As_Soil, y = As_Grain, fill = factor(transitions_value))) +
  geom_jitter(shape = 21, size = 4) +
  
  #scale_fill_viridis_c() +
  
  theme_classic()
```



```{r fig.width= 5}
df_chem_cambodia %>% 
  ggplot(aes(x = Ba_Soil/K_Soil)) +
  geom_histogram()


df_chem_cambodia %>% 
  filter(!is.na(As_Grain)) %>% 
  ggplot(aes(x = Ba_Soil, y = K_Soil, fill = As_Grain)) +
  geom_point(shape = 21, size = 4) +
  
  facet_wrap(~Soil_texture_category) +
  
  scale_fill_binned(type = "viridis")

df_chem_cambodia %>% 
  filter(!is.na(As_Grain)) %>% 
  ggplot(aes(x = Ba_Soil, y = Sr_Soil, fill = As_Grain)) +
  geom_point(shape = 21, size = 4) +
  
  scale_fill_binned(type = "viridis")


fig_a <- df_chem_cambodia %>% 
  filter(!is.na(As_Grain)) %>% 
  ggplot(aes(x = Sr_Soil, y = As_Grain, fill = Ba_Soil)) +
  geom_point(shape = 21, size = 4) +
  
  scale_fill_binned(type = "viridis")

fig_a 


```


```{r}
df_chem_cambodia %>% 
  filter(!is.na(Soil_texture_category)) %>% 
  ggplot(aes(x = Soil_texture_category, y = Ba_Soil, fill = Soil_texture_category)) +
  geom_boxplot(outlier.shape = NA) +
  geom_jitter(height = 0, width = 0.2) + 
  
  theme_bw()



df_chem_cambodia %>% 
  filter(!is.na(Soil_texture_category)) %>% 
  ggplot(aes(x = Soil_texture_category, y = K_Soil, fill = Soil_texture_category)) +
  geom_boxplot(outlier.shape = NA) +
  geom_jitter(height = 0, width = 0.2) +
  
  theme_bw()
```

```{r fig.width= 5}
df_chem_cambodia %>% 
  filter(!is.na(Soil_texture_category)) %>% 
  ggplot(aes(x = Ba_Soil, y = As_Grain, color = Soil_texture_category)) +
  geom_point(size = 2) +
  
  geom_parallel_slopes(se = FALSE)# +
  
  #facet_wrap(~Soil_texture_category)



```



```{r}
score_model_interaction <- lm(As_Grain ~ Ba_Soil + Soil_texture_category, 
                              data = df_chem_cambodia)

get_regression_table(score_model_interaction)
```


```{r fig.width= 5}
fig_a <- df_chem_cambodia %>% 
  filter(!is.na(As_Grain)) %>% 
  ggplot(aes(x = Ba_Soil, y = As_Grain, fill = occur_value)) +
  geom_point(shape = 21, size = 4) +
  
  scale_fill_binned(type = "viridis")
  #scale_fill_discrete()

fig_a 

```

```{r}
sen <- function(..., weights = NULL) {
  mblm::mblm(...)
}
```

```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = occur_value, y = As_Grain, fill = Soil_texture_category)) +
  geom_point(shape = 21, color = "black", size = 4, alpha = 0.8) +
  
  #geom_smooth(method = sen, se = F) +
  
  facet_wrap(~ Soil_texture_category) +
  
  theme_bw() +
  theme(legend.position = "none")
```
```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = Ba_Soil, y = As_Grain)) +
  geom_point(shape = 21, color = "black", size = 3) +
  
  scale_fill_viridis_c() +
  #geom_smooth(method = sen, se = F) +
  
  #facet_wrap(~ Soil_texture_category) +
  
  theme_bw() 
  #theme(legend.position = "none")
```
```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = Ba_Soil, y = As_Grain, fill = log(occur_value))) +
  geom_point(shape = 21, color = "black", size = 3) +
  
  scale_fill_viridis_c() +
  #geom_smooth(method = sen, se = F) +
  
  facet_wrap(~ Soil_texture_category) +
  
  theme_bw() 
  #theme(legend.position = "none")
```



```{r}
fig_1 <- df_chem_cambodia %>% 
  ggplot(aes(x = occur_value, y = recurr_value, fill = percent_rank(As_Grain), group = Site )) +
  geom_jitter(shape = 21, color = "black", size = 4) +
  
  #geom_smooth(method = sen, se = F) +
  
  scale_fill_viridis_b(option = "C") +
  
  #facet_wrap(~ Soil_texture_category) +
  
  theme_bw() 
  
fig_1

plotly::ggplotly(fig_1)

```


```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = occur_value, y = P_Grain, fill = Soil_texture_category)) +
  geom_point(shape = 21, color = "black", size = 3) +
  
  #geom_smooth(method = sen, se = F) +
  
  facet_wrap(~ Soil_texture_category) +
  
  theme_bw() +
  theme(legend.position = "none")
```

```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = occur_value, y = Sr_Soil, fill = Soil_texture_category)) +
  geom_point(shape = 21, color = "black", size = 3) +
  
  #geom_smooth(method = sen, se = F) +
  
  facet_wrap(~ Soil_texture_category) +
  
  theme_bw() +
  theme(legend.position = "none")
```

```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = Sr_Soil, y = As_Grain, fill = percent_rank(Ba_Soil))) +
  geom_point(shape = 21, color = "black", size = 3) +
  
  #geom_smooth(method = sen, se = F) +
  scale_fill_viridis_c(option = "B") +
  facet_wrap(~ Soil_texture_category) +
  
  theme_bw() 
```

```{r}
df_chem_cambodia %>% 
  filter(!is.na(As_Grain)) %>% 
  ggplot(aes(x = Ba_Soil, y = Th_Soil, fill = (As_Grain))) +
  geom_jitter(shape = 21, color = "black", size = 5, width = 2, alpha = 0.8) +
  
  #geom_smooth(method = sen, se = F) +
  scale_fill_viridis_c(option = "B") +
  #facet_wrap(~ Soil_texture_category) +
  
  theme_bw() 
```


## Map of data





```{r}
tmap_mode("view")

sf_chem_cambodia %>% 
  tm_shape() +
  tm_dots(col = "Soil_texture_category", palette = "viridis", size = 0.2) +
  
  tm_mouse_coordinates() +
  
  tm_basemap(server = c("Esri.WorldImagery", "OpenStreetMap")) +
  
  tm_scale_bar()
```


```{r fig.width= 4, fig.height= 3}
df_chem_cambodia %>% 
  filter(!is.na(Soil_texture_category)) %>% 
  ggplot(aes(x = Soil_texture_category, y = As_Soil)) +
  geom_boxplot(fill = "lightgrey", outlier.shape = NA) +
  
  geom_jitter(width = 0.1, height = 0) +
  
  theme_classic()
```

```{r fig.width= 4, fig.height= 3}
df_chem_cambodia %>% 
  filter(!is.na(Soil_texture_category)) %>% 
  ggplot(aes(x = Soil_texture_category, y = Ba_Soil)) +
  geom_boxplot(fill = "lightgrey", outlier.shape = NA) +
  
  geom_jitter(width = 0.1, height = 0) +
  
  theme_classic()
```


```{r fig.width= 4, fig.height= 3}
df_chem_cambodia %>% 
  filter(!is.na(Soil_texture_category)) %>% 
  ggplot(aes(x = Soil_texture_category, y = Th_Soil)) +
  geom_boxplot(fill = "lightgrey", outlier.shape = NA) +
  
  geom_jitter(width = 0.1, height = 0) +
  
  theme_classic()
```


```{r fig.width= 4, fig.height= 3}
df_chem_cambodia %>% 
  filter(!is.na(Soil_texture_category)) %>% 
  ggplot(aes(x = Soil_texture_category, y = As_Grain)) +
  geom_boxplot(fill = "lightgrey", outlier.shape = NA) +
  
  geom_jitter(width = 0.1, height = 0) +
  
  theme_classic()
```


```{r fig.width= 4, fig.height= 3}
df_chem_cambodia %>% 
  filter(!is.na(Soil_texture_category)) %>% 
  ggplot(aes(x = Soil_texture_category, y = As_Leaf)) +
  geom_boxplot(fill = "lightgrey", outlier.shape = NA) +
  
  geom_jitter(width = 0.1, height = 0) +
  
  theme_classic()
```

```{r fig.width= 4, fig.height= 3}
df_chem_cambodia %>% 
  filter(!is.na(Soil_texture_category)) %>% 
  ggplot(aes(x = Soil_texture_category, y = Ba_Soil)) +
  geom_boxplot(fill = "lightgrey", outlier.shape = NA) +
  
  geom_jitter(width = 0.1, height = 0) +
  
  theme_classic()
```

```{r fig.width= 4, fig.height= 3}
df_chem_cambodia %>% 
  filter(!is.na(Soil_texture_category)) %>% 
  ggplot(aes(x = Soil_texture_category, y = Th_Soil)) +
  geom_boxplot(fill = "lightgrey", outlier.shape = NA) +
  
  geom_jitter(width = 0.1, height = 0) +
  
  theme_classic()
```


```{r fig.width= 4, fig.height= 3}
df_chem_cambodia %>% 
  filter(!is.na(Soil_texture_category)) %>% 
  ggplot(aes(x = Soil_texture_category, y = soil_SPC__uScm)) +
  geom_boxplot(fill = "lightgrey", outlier.shape = NA) +
  
  geom_jitter(width = 0.1, height = 0) +
  
  theme_classic()
```


```{r}
df_chem_cambodia %>% 
  filter(!is.na(Soil_texture_category)) %>% 
  ggplot(aes(x = As_Soil, y = As_Grain, fill = Soil_texture_category)) +
  geom_point(shape = 21, size = 3) +
  
  theme_classic()
```

```{r}
df_chem_cambodia %>% 
  filter(!is.na(Soil_texture_category)) %>% 
  ggplot(aes(x = soil_pH, y = soil_SPC__uScm, fill = Soil_texture_category)) +
  geom_point(shape = 21, size = 3) +
  
  theme_classic()
```

```{r}
df_chem_cambodia %>% 
  #filter(!is.na(Soil_texture_category)) %>% 
  ggplot(aes(x = Ba_Soil, y = As_Grain, fill = Soil_texture_category)) +
  geom_point(shape = 21, size = 3) +
  
  theme_classic()
```


```{r}
sf_chem_cambodia_long <- df_chem_cambodia %>% 
  #select(-Notes) %>% 
  pivot_longer(cols = -c(Site, Notes, Lat, Long, Soil_description, Soil_texture_category), 
               names_to = "chem_param", values_to = "conc") %>% 
  
  filter(!is.na(Lat), !is.na(Long)) %>% 
  st_as_sf(coords = c("Long", "Lat"))
```

```{r}
sf_chem_cambodia_long %>% 
  filter(chem_param %in% c("As_Soil", "As_Grain")) %>% 
  
  tm_shape() +
  tm_dots(col = "conc", palette = "viridis", size = 0.2, style = "quantile") +
  
  tm_mouse_coordinates() +
  tm_basemap(server = c("Esri.WorldImagery", "OpenStreetMap")) +
  tm_scale_bar() +
  
  tm_facets(by = "chem_param", free.scales.symbol.col = T) 
```


```{r}
sf_chem_cambodia_long %>% 
  filter(chem_param %in% c("As_Soil", "As_Leaf", "As_Grain")) %>% 
  
  tm_shape() +
  tm_dots(col = "conc", palette = "viridis", size = 0.2, style = "quantile") +
  
  tm_mouse_coordinates() +
  tm_basemap(server = c("Esri.WorldImagery", "OpenStreetMap")) +
  tm_scale_bar() +
  
  tm_facets(by = "chem_param", free.scales.symbol.col = T) 
```




```{r}
sf_chem_cambodia_long %>% 
  filter(chem_param %in% c("As_Grain", "Ba_Soil", "occur_value")) %>% 
  
  tm_shape() +
  tm_dots(col = "conc", palette = "viridis", size = 0.2, style = "pretty") +
  
  tm_mouse_coordinates() +
  tm_basemap(server = c("Esri.WorldImagery", "OpenStreetMap")) +
  tm_scale_bar() +
  
  tm_facets(by = "chem_param", free.scales.symbol.col = T) 
```



```{r}
sf_chem_cambodia_long %>% 
  filter(chem_param %in% c("As_Soil", "soil_pH", "soil_SPC__uScm")) %>% 
  
  tm_shape() +
  tm_dots(col = "conc", palette = "viridis", size = 0.2, style = "quantile") +
  
  tm_mouse_coordinates() +
  tm_basemap(server = c("Esri.WorldImagery", "OpenStreetMap")) +
  tm_scale_bar() +
  
  tm_facets(by = "chem_param", free.scales.symbol.col = T) 
```

```{r}
sf_chem_cambodia_long %>% 
  filter(chem_param %in% c("occur_value", "As_Grain")) %>% 
  
  tm_shape() +
  tm_dots(col = "conc", palette = "viridis", size = 0.2, style = "cont") +
  
  tm_mouse_coordinates() +
  tm_basemap(server = c("Esri.WorldImagery", "OpenStreetMap")) +
  tm_scale_bar() +
  
  tm_facets(by = "chem_param", free.scales.symbol.col = T) 
```

## Analyze data

### Soil elemental distribution
```{r}
sf_chem_cambodia_long %>% 
  
  filter(str_detect(chem_param, "Soil") ) %>% 
  drop_na() %>% 
  ggplot(aes(x = reorder(chem_param, conc), y = conc)) +
  geom_boxplot(fill = "lightgrey") +
  
  scale_y_log10() +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) 
  

```

### Grain elemental distribution
```{r}
sf_chem_cambodia_long %>% 
  
  filter(str_detect(chem_param, "Grain") ) %>% 
  drop_na() %>% 
  ggplot(aes(x = reorder(chem_param, conc), y = conc)) +
  geom_boxplot(fill = "lightgrey") +
  
  scale_y_log10() +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) 
  

```


```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = As_Grain)) +
  geom_histogram() +
  
  theme_classic()
```


### Leaf elemental distribution
```{r}
sf_chem_cambodia_long %>% 
  
  filter(str_detect(chem_param, "Leaf") ) %>% 
  drop_na() %>% 
  ggplot(aes(x = reorder(chem_param, conc), y = conc)) +
  geom_boxplot(fill = "lightgrey") +
  
  scale_y_log10() +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) 
  

```



```{r}
df_chem_cambodia %>% 
  filter(!is.na(Soil_texture_category)) %>% 
  
  ggplot(aes(x = Si_Leaf, y = As_Grain, fill = Soil_texture_category, color = Soil_texture_category)) +
  geom_point(shape = 21, size = 5) +
  geom_smooth(method = sen, se = F) +
  theme_classic()
```

```{r}
df_chem_cambodia %>% 
  filter(!is.na(Soil_texture_category)) %>% 
  
  ggplot(aes(x = Si_Leaf, y = As_Grain, fill = Soil_texture_category, color = Soil_texture_category)) +
  geom_point(shape = 21, size = 5) +
  geom_smooth(method = sen, se = F) +
  theme_classic() +
  
  facet_wrap(~Soil_texture_category)
```
```{r}
df_chem_cambodia %>% 
  filter(!is.na(Soil_texture_category)) %>% 
  
  ggplot(aes(x = Ba_Soil, y = As_Grain, fill = Si_Leaf, group = Soil_texture_category)) +
  geom_point(shape = 21, size = 5) +
  geom_smooth(method = sen, se = F) +
  theme_classic() +
  
  scale_fill_viridis_c() +
  
  facet_wrap(~Soil_texture_category)
```


```{r}
df_chem_cambodia %>% 
  filter(!is.na(Soil_texture_category)) %>% 
  ggplot(aes(x = Soil_texture_category, y = Si_Leaf, fill = Soil_texture_category)) +
  
  geom_boxplot() +
  theme_classic()
```


```{r}
df_chem_cambodia %>% 
  filter(!is.na(Soil_texture_category)) %>% 
  
  ggplot(aes(x = Fe_Grain, y = As_Grain, fill = Soil_texture_category, color = Soil_texture_category)) +
  geom_point(shape = 21, size = 5) +
  geom_smooth(method = sen, se = F) +
  theme_classic()
```



```{r}
#ggpairs(df_chem_cambodia, columns = 5:12)
```

```{r}
df_chem_corr <- df_chem_cambodia %>% 
  select_if(is.numeric)
```

```{r}
res <- cor(df_chem_corr, use = "pairwise.complete.obs")
```
```{r}
res_long <- as_tibble(res)
res_long$var <- colnames(res_long)
```

```{r}
res_long <- res_long %>% 
  pivot_longer(cols = -c(var), names_to = "var_b", values_to = "coeff")
```

```{r}
res_long <- res_long %>% 
  mutate(coeff_abs_val = abs(coeff))
```


## Correlation of grain As vs. all other parameters
```{r}
df_chem_corr <- df_chem_cambodia %>% 
  select_if(is.numeric)
  
data_cor <- cor(df_chem_corr,  # Calculate correlations
                df_chem_corr$As_Grain,use = "pairwise.complete.obs")

```


```{r}
data_cor %>% 
  as.data.frame() %>% 
  arrange(-abs(V1))
```

```{r}
df_chem_cambodia %>% 
  
  filter(!is.na(As_Grain)) %>% 
  
  ggplot(aes(x = Ba_Soil, y = Th_Soil, fill = log10(As_Grain) )) +
  geom_point(shape = 21, size = 5) +
  #geom_jitter(shape = 21, size = 3) +
  scale_fill_viridis_c() +
  
  theme_bw()
```


```{r}
df_chem_cambodia %>% 
  
  filter(!is.na(As_Grain)) %>% 
  
  ggplot(aes(x = Ba_Soil, y = Th_Soil, fill = log10(As_Grain) )) +
  geom_point(shape = 21, size = 5) +
  #geom_jitter(shape = 21, size = 3) +
  scale_fill_viridis_c() +
  
  theme_bw() +
  
  facet_wrap(~ Soil_texture_category)
  
```


## Correlation of leaf As vs. all other parameters
```{r}
df_chem_corr <- df_chem_cambodia %>% 
  select_if(is.numeric)
  
data_cor <- cor(df_chem_corr,  # Calculate correlations
                df_chem_corr$As_Leaf,use = "pairwise.complete.obs")

```


```{r}
data_cor %>% 
  as.data.frame() %>% 
  arrange(-abs(V1))
```

```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = Si_Leaf, y = As_Leaf)) +
  geom_point(shape = 21, size = 3, fill = "lightgrey") +
  
  theme_classic()
  
```


## Correlation of soil As vs. all other parameters
```{r}
df_chem_corr <- df_chem_cambodia %>% 
  select_if(is.numeric)
  
data_cor <- cor(df_chem_corr,  # Calculate correlations
                df_chem_corr$As_Soil,use = "pairwise.complete.obs")

```


```{r}
data_cor %>% 
  as.data.frame() %>% 
  arrange(-abs(V1))
```

```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = Fe_Soil, y = As_Soil)) +
  geom_point(shape = 21, size = 3, fill = "lightgrey") +
  
  theme_classic()
  
```

## Correlation of soil pH vs. all other parameters
```{r}
df_chem_corr <- df_chem_cambodia %>% 
  select_if(is.numeric)
  
data_cor <- cor(df_chem_corr,  # Calculate correlations
                df_chem_corr$soil_pH,use = "pairwise.complete.obs")

```


```{r}
data_cor %>% 
  as.data.frame() %>% 
  arrange(-abs(V1))
```


## Correlation of soil specific conductivity vs. all other parameters
```{r}
df_chem_corr <- df_chem_cambodia %>% 
  select_if(is.numeric)
  
data_cor <- cor(df_chem_corr,  # Calculate correlations
                df_chem_corr$soil_SPC__uScm,use = "pairwise.complete.obs")

```


```{r}
data_cor %>% 
  as.data.frame() %>% 
  arrange(-abs(V1))
```


### As grain vs. As soil
```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = As_Soil, y = As_Grain)) +
  geom_point(shape = 21, fill = "darkgrey", size = 3) +
  
  theme_classic() 
```

### As grain vs. As leaf
```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = As_Leaf, y = As_Grain)) +
  geom_point(shape = 21, fill = "darkgrey", size = 3) +
  
  theme_classic() 
```


### As Soil vs. As leaf
```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = As_Soil, y = As_Leaf)) +
  geom_point(shape = 21, fill = "darkgrey", size = 3) +
  
  theme_classic() 
```

### As grain vs. Ba soil
```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = Ba_Soil, y = As_Grain)) +
  geom_point(shape = 21, fill = "darkgrey", size = 3) +
  
  theme_classic()
```

```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = Ba_Soil, y = Zn_Soil, fill = As_Grain)) +
  geom_point(shape = 21, size = 3) +
  
  scale_fill_viridis_c() +
  theme_classic()
```

### As grain vs. Fe soil
```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = Fe_Soil, y = As_Grain)) +
  geom_point(shape = 21, fill = "darkgrey", size = 3) +
  
  theme_classic()
```

### As grain vs. Zn soil
```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = Zn_Soil, y = As_Grain)) +
  geom_point(shape = 21, fill = "darkgrey", size = 3) +
  
  theme_classic()
```

```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = Zn_Soil, y = As_Grain)) +
  geom_point(shape = 21, fill = "darkgrey", size = 3) +
  
  theme_classic() +
  
  facet_wrap(~Soil_texture_category)
```


### As grain vs. Zn grain
```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = Zn_Grain, y = As_Grain)) +
  geom_point(shape = 21, fill = "darkgrey", size = 3) +
  
  theme_classic()
```

### As grain vs. Zn leaf
```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = Zn_Leaf, y = As_Grain)) +
  geom_point(shape = 21, fill = "darkgrey", size = 3) +
  
  theme_classic()
```

### As grain vs. pH
```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = soil_pH, y = As_Grain)) +
  geom_point(shape = 21, fill = "darkgrey", size = 3) +
  
  theme_classic()
```

### As grain vs. specific conductivity
```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = soil_SPC__uScm, y = As_Grain)) +
  geom_point(shape = 21, fill = "darkgrey", size = 3) +
  
  theme_classic()
```
## Soil pH and cond

```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = soil_pH, y = soil_SPC__uScm)) +
  geom_point(shape = 21, fill = "darkgrey", size = 3) +
  
  theme_classic()
```


## As leaf

```{r}
df_chem_corr <- df_chem_cambodia %>% 
  select_if(is.numeric)
  
data_cor <- cor(df_chem_corr,  # Calculate correlations
                df_chem_corr$As_Leaf, use = "pairwise.complete.obs")

```


```{r}
data_cor %>% 
  as.data.frame() %>% 
  arrange(-abs(V1))
```

### As leaf vs. Si leaf
```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = Si_Leaf, y = As_Leaf)) +
  geom_point(shape = 21, fill = "darkgrey", size = 3) +
  
  theme_classic()
```


### As leaf vs. S grain

```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = S_Grain, y = As_Leaf)) +
  geom_point(shape = 21, fill = "darkgrey", size = 3) +
  
  theme_classic()
```

## As Soil

```{r}
df_chem_corr <- df_chem_cambodia %>% 
  select_if(is.numeric)
  
data_cor <- cor(df_chem_corr,  # Calculate correlations
                df_chem_corr$As_Soil, use = "pairwise.complete.obs")

```


```{r}
data_cor %>% 
  as.data.frame() %>% 
  arrange(-abs(V1))
```


```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = Fe_Soil, y = As_Soil)) +
  geom_point(size = 3, shape = 21, fill = "lightgrey") +
  
  theme_classic()
```

```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = Fe_Soil, y = As_Soil, fill = percent_rank(As_Grain))) +
  geom_point(size = 3, shape = 21) +
  
  scale_fill_viridis_c() +
  
  theme_classic()
```
```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = As_Soil, y = As_Grain, fill = percent_rank(Ba_Soil))) +
  geom_point(size = 3, shape = 21) +
  
  scale_fill_viridis_c() +
  
  theme_classic()
```
```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = As_Soil, y = As_Grain, fill = percent_rank(Ba_Soil))) +
  geom_point(size = 3, shape = 21) +
  
  scale_fill_viridis_c() +
  
  theme_bw() +
  
  facet_wrap(~Soil_texture_category)
```


## Random forest to explain grain As

```{r}
library(randomForest)
```


```{r}
df_rf <- df_chem_cambodia %>% 
  select(As_Grain, contains("Soil")) %>% 
  drop_na()
```


```{r eval = F}
rf_formula <- as.formula(As_Grain ~ 
                           Ag_Soil +
                           As_Soil +
                           Au_Soil +
                           Ba_Soil +
                           Ca_Soil +
                           Cd_Soil +
                           Co_Soil +
                           Cr_Soil +
                           Cs_Soil +
                           Cu_Soil +
                           Fe_Soil +
                           Hg_Soil +
                           K_Soil +
                           Mn_Soil +
                           Mo_Soil +
                           Ni_Soil +
                           Pb_Soil +
                           Pd_Soil +
                           Rb_Soil +
                           S_Soil
                           )
```


```{r}
rf_formula <- as.formula(As_Grain ~ 
                           Ba_Soil +
                           Th_Soil
                           )
```


```{r}
rf_classifier = randomForest(rf_formula, data = df_rf, ntree= 500, localImp = TRUE)
```


```{r}
rf_classifier
```


```{r}
plot(rf_classifier)
```


```{r}
randomForest::varImpPlot(rf_classifier, scale = F, sort = T)
```


## Cluster analysis (soil)


```{r}
set.seed(123)

library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
```

```{r}
table_cluster <- df_chem_cambodia %>% 
  select(Site, contains("Soil"))
```

```{r}
table_cluster <- table_cluster %>% 
  select(Site, As_Soil, Ba_Soil, Ca_Soil, Cd_Soil, 
         Co_Soil, Cr_Soil,Fe_Soil,
         K_Soil, Mn_Soil, Pb_Soil, Pd_Soil,
         Rb_Soil, S_Soil, Sr_Soil, Th_Soil, Ti_Soil, V_Soil,
         Zn_Soil, Zr_Soil
         #soil_pH, soil_SPC__uScm
         ) %>% 
  
  drop_na()
```

```{r}
#df_cluster[, 2:ncol(df_cluster)] <- (df_cluster[,2:ncol(df_cluster)]) 
```

```{r}
table_cluster <- column_to_rownames(table_cluster, var = "Site")
```

```{r}
table_cluster <- drop_na(table_cluster)
```


```{r}
table_cluster_scaled <- scale(table_cluster)
```


```{r}

fviz_nbclust(
  table_cluster_scaled,
  pam,
  k.max = 25,
  method = "wss",
  diss = get_dist(table_cluster, method = "spearman")
  #diss = get_dist(table_cluster, method = "euclidean")
) #+
  #scale_y_log10()
```

```{r}

n_clust = 4
#k_n <- kmeans(table_cluster_scaled, centers = n_clust, nstart = 100, iter.max = 15000)


k_n = cluster::pam(table_cluster_scaled, k = n_clust)
```


```{r fig.width= 6}
fig_cluster <- fviz_cluster(k_n, data = table_cluster_scaled, ellipse = T,
                            geom = "point") +
  theme_classic()

```



```{r}
fig_cluster
```

### Create a data frame with the pixel coordinates and the cluster assigned to that pixel
```{r}
df_cluster_info <- tibble(Site = row.names(table_cluster_scaled),
                          cluster_id = k_n$cluster)
```


```{r}
df_chem_cambodia <- df_chem_cambodia %>% 
  #select(-cluster_id) %>% 
  left_join(df_cluster_info) 


```

```{r}
df_chem_cambodia <- df_chem_cambodia %>% 
  rename(cluster_id_soil = cluster_id)
```


```{r fig.width= 4, fig.height= 3.5}
df_chem_cambodia %>% 
  mutate(cluster_id_soil = as.factor(cluster_id_soil)) %>% 
  
  filter(!is.na(cluster_id_soil)) %>% 
  
  ggplot(aes(x = cluster_id_soil, y = As_Grain, fill = cluster_id_soil)) +
  geom_boxplot(outlier.shape = NA) +
  
  scale_fill_viridis_d() +
  geom_jitter(width = 0.1, height = 0, shape = 21,
              fill = "lightgrey") +
  
  theme_classic()
```
```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = Ba_Soil, y = As_Grain, fill = factor(cluster_id_soil))) +
  geom_point(shape = 21, color = "black", size = 4) +
  
  scale_fill_viridis_d() +
  #geom_smooth(method = sen, se = F) +
  
  #facet_wrap(~ Soil_texture_category) +
  
  theme_bw() 
  #theme(legend.position = "none")
```


```{r}
sf_chem_cambodia <- sf_chem_cambodia %>% 
  #select(-cluster_id) %>% 
  left_join(df_cluster_info) %>% 
  
  rename(cluster_id_soil = cluster_id) %>% 
  mutate(cluster_id_soil = as.factor(cluster_id_soil))
```

```{r}
sf_chem_cambodia %>% 
  
  tm_shape() +
  tm_dots(col = "cluster_id_soil", palette = "viridis", size = 0.2) +
  
  tm_mouse_coordinates() +
  tm_basemap(server = c("Esri.WorldImagery", "OpenStreetMap")) +
  tm_scale_bar() 
```






## Cluster analysis (grain)


```{r}
table_cluster <- df_chem_cambodia %>% 
  select(Site, contains("Grain"))
```

```{r}
table_cluster <- table_cluster %>% 
  select(Site, As_Grain, Cd_Grain, Fe_Grain, Mn_Grain, 
         P_Grain, Pb_Grain, S_Grain, Sb_Grain, Si_Grain, Sn_Grain, U_Grain, Zn_Grain
         ) %>% 
  
  drop_na()
```

```{r}
#df_cluster[, 2:ncol(df_cluster)] <- (df_cluster[,2:ncol(df_cluster)]) 
```

```{r}
table_cluster <- column_to_rownames(table_cluster, var = "Site")
```

```{r}
table_cluster <- drop_na(table_cluster)
```


```{r}
table_cluster_scaled <- scale(table_cluster)
```


```{r}

fviz_nbclust(
  table_cluster_scaled,
  pam,
  k.max = 25,
  method = "wss",
  diss = get_dist(table_cluster, method = "spearman")
  #diss = get_dist(table_cluster, method = "euclidean")
) #+
  #scale_y_log10()
```

```{r}

n_clust = 6
#k_n <- kmeans(table_cluster_scaled, centers = n_clust, nstart = 100, iter.max = 15000)


k_n = cluster::pam(table_cluster_scaled, k = n_clust)
```


```{r fig.width= 6}
fig_cluster <- fviz_cluster(k_n, data = table_cluster_scaled, ellipse = T,
                            geom = "point") +
  theme_classic()

```



```{r}
fig_cluster
```

### Create a data frame with the pixel coordinates and the cluster assigned to that pixel
```{r}
df_cluster_info <- tibble(Site = row.names(table_cluster_scaled),
                          cluster_id = k_n$cluster)
```


```{r}
df_chem_cambodia <- df_chem_cambodia %>% 
  #select(-cluster_id) %>% 
  left_join(df_cluster_info) 


```

```{r}
df_chem_cambodia <- df_chem_cambodia %>% 
  rename(cluster_id_grain = cluster_id)
```


```{r fig.width= 4, fig.height= 3.5}
df_chem_cambodia %>% 
  mutate(cluster_id_grain = as.factor(cluster_id_grain)) %>% 
  
  filter(!is.na(cluster_id_grain)) %>% 
  
  ggplot(aes(x = cluster_id_grain, y = As_Grain, fill = cluster_id_grain)) +
  geom_boxplot(outlier.shape = NA) +
  
  scale_fill_viridis_d() +
  geom_jitter(width = 0.1, height = 0, shape = 21,
              fill = "lightgrey") +
  
  theme_classic()
```


```{r}
sf_chem_cambodia <- sf_chem_cambodia %>% 
  #select(-cluster_id) %>% 
  left_join(df_cluster_info) %>% 
  
  rename(cluster_id_grain = cluster_id) %>% 
  mutate(cluster_id_grain = as.factor(cluster_id_grain))
```

```{r}
sf_chem_cambodia %>% 
  
  tm_shape() +
  tm_dots(col = "cluster_id_grain", palette = "viridis", size = 0.2) +
  
  tm_mouse_coordinates() +
  tm_basemap(server = c("Esri.WorldImagery", "OpenStreetMap")) +
  tm_scale_bar() 
```






## Cluster analysis (leaf)


```{r}
table_cluster <- df_chem_cambodia %>% 
  select(Site, contains("Leaf"))
```

```{r}
table_cluster <- table_cluster %>% 
  select(Site, As_Leaf, Cd_Leaf, Fe_Leaf, Mn_Leaf,
         P_Leaf, Pb_Leaf, S_Leaf, Sb_Leaf, Si_Leaf, Sn_Leaf, U_Leaf, Zn_Leaf
         ) %>% 
  
  drop_na()
```

```{r}
#df_cluster[, 2:ncol(df_cluster)] <- (df_cluster[,2:ncol(df_cluster)]) 
```

```{r}
table_cluster <- column_to_rownames(table_cluster, var = "Site")
```

```{r}
table_cluster <- drop_na(table_cluster)
```


```{r}
table_cluster_scaled <- scale(table_cluster)
```


```{r}

fviz_nbclust(
  table_cluster_scaled,
  pam,
  k.max = 25,
  method = "wss",
  diss = get_dist(table_cluster, method = "spearman")
  #diss = get_dist(table_cluster, method = "euclidean")
) #+
  #scale_y_log10()
```

```{r}

n_clust = 7
#k_n <- kmeans(table_cluster_scaled, centers = n_clust, nstart = 100, iter.max = 15000)


k_n = cluster::pam(table_cluster_scaled, k = n_clust)
```


```{r fig.width= 6}
fig_cluster <- fviz_cluster(k_n, data = table_cluster_scaled, ellipse = T,
                            geom = "point") +
  theme_classic()

```



```{r}
fig_cluster
```

### Create a data frame with the pixel coordinates and the cluster assigned to that pixel
```{r}
df_cluster_info <- tibble(Site = row.names(table_cluster_scaled),
                          cluster_id = k_n$cluster)
```


```{r}
df_chem_cambodia <- df_chem_cambodia %>% 
  #select(-cluster_id) %>% 
  left_join(df_cluster_info) 


```

```{r}
df_chem_cambodia <- df_chem_cambodia %>% 
  rename(cluster_id_leaf = cluster_id)
```


```{r fig.width= 4, fig.height= 3.5}
df_chem_cambodia %>% 
  mutate(cluster_id_leaf = as.factor(cluster_id_leaf)) %>% 
  
  filter(!is.na(cluster_id_leaf)) %>% 
  
  ggplot(aes(x = cluster_id_leaf, y = As_Grain, fill = cluster_id_leaf)) +
  geom_boxplot(outlier.shape = NA) +
  
  #scale_fill_viridis_d() +
  geom_jitter(width = 0.1, height = 0, shape = 21,
              fill = "lightgrey") +
  
  theme_classic()
```


```{r}
sf_chem_cambodia <- sf_chem_cambodia %>% 
  #select(-cluster_id) %>% 
  left_join(df_cluster_info) %>% 
  
  rename(cluster_id_leaf = cluster_id) %>% 
  mutate(cluster_id_leaf = as.factor(cluster_id_leaf))
```

```{r}
sf_chem_cambodia %>% 
  
  tm_shape() +
  tm_dots(col = "cluster_id_leaf", size = 0.2) +
  
  tm_mouse_coordinates() +
  tm_basemap(server = c("Esri.WorldImagery", "OpenStreetMap")) +
  tm_scale_bar() 
```


## Cluster comparisions
```{r}
df_chem_cambodia %>% 
  ggplot(aes(x = cluster_id_soil, y = cluster_id_leaf, fill = factor(cluster_id_grain))) +
  
  geom_jitter(width = 0.1, height = 0.1, shape = 21,
              alpha = 0.5, size = 3) +
  
  theme_classic() +
  
  coord_equal() 
```











