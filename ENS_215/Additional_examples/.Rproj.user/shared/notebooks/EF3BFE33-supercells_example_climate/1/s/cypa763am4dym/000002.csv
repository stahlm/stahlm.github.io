"0","```r


get_dtw2d = function(x){
  dist_mat = matrix(nrow = nrow(x), ncol = nrow(x))
  for (i in seq_len(nrow(x))){
    mat1 = matrix(unlist(x[i, ]), ncol = 2)
    for (j in seq_len(nrow(x))){
      mat2 = matrix(unlist(x[j, ]), ncol = 2)
      dist_mat[i, j] = dtwclust::dtw_basic(mat1, mat2, norm = \"L2\", step.pattern = dtw::symmetric2)
    }
  }
  stats::as.dist(dist_mat)
}
dtw_2d = function(x, y){
  dtw2ddistance = dtwclust::dtw_basic(x = matrix(x, ncol = 2), y = matrix(y, ncol = 2),
                                      norm = \"L2\", step.pattern = dtw::symmetric2,
                                      error.check = FALSE)
  return(dtw2ddistance)
}
regionalize_dtw_2d = function(k, superpixels, ...){
  weight_df = st_drop_geometry(superpixels[, !colnames(superpixels) %in% c(\"supercells\", \"x\", \"y\")])
  weight_dist = get_dtw2d(weight_df)
  rook_w = rook_weights(superpixels)
  skater_results = skater(k, rook_w, weight_df, random_seed = 1, cpu_threads = 1, scale_method = \"raw\",
                          rdist = weight_dist)
  superpixels$cluster = skater_results$Clusters
  regions = aggregate(superpixels, by = list(superpixels$cluster), mean)
  regions = st_cast(regions, \"POLYGON\")
  regions$k = k
  return(regions)
}
```"
