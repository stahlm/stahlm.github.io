---
title: "Getting geographic borders/boundaries data"
output: html_notebook
---

## Using the rgeoboundaries package
https://github.com/wmgeolab/rgeoboundaries

```{r}
library(rgeoboundaries)
library(sf)
library(tmap)
```

### Get borders
```{r}
sf_borders_0 <- gb_adm0("Cambodia") # Level 0 (country border)
sf_borders_1 <- gb_adm1("Cambodia") # Level 1 (state level border)

```

```{r}
sf_borders_0 %>% 
  tm_shape() +
  tm_borders()

sf_borders_1 %>% 
  tm_shape() +
  tm_borders()
```
```{r}
sf_borders_1 <- gb_adm1("United States of America") # Level 1 (state level border)
```

```{r}
sf_borders_1 %>% 
  tm_shape() +
  tm_borders()
```

## tigris
https://github.com/walkerke/tigris
```{r}
library(tigris)
```

```{r}
sf_nation <- tigris::nation(resolution = "20m")
```
```{r}
sf_nation %>% 
  tm_shape() +
  tm_borders()
```

```{r}
sf_state <- tigris::states()
```


```{r}
sf_state %>% 
  dplyr::filter(STUSPS == "NY") %>% 
  
  tm_shape() +
  tm_borders()
```

```{r}
sf_counties <- tigris::counties(state = "NY")
```
```{r}
sf_counties %>% 
  tm_shape() +
  tm_borders()
```




## spData
```{r}
library(spData)
```
```{r}
sf_world <- spData::world
```

```{r}
sf_world %>% 
  tm_shape() + 
  tm_borders()
```


```{r}
sf_usa <- spData::us_states
```

```{r}
sf_usa %>% 
  tm_shape() + 
  tm_borders()
```



## rnaturalearth

https://ropensci.github.io/rnaturalearth/

```{r}
library(rnaturalearth)
```


### sf object with all countries
```{r}
sf_borders <- st_as_sf(rnaturalearth::countries110) 


sf_borders <- ne_countries(scale = "large", 
                           country = "United States of America", 
                           returnclass = "sf")


```

```{r}
sf_borders %>% 
  tm_shape() + 
  tm_borders()
```






