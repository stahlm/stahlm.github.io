---
title: "R Notebook"
output: html_notebook
---

## Load in packages
```{r}
library(tidyverse)
library(lubridate)
library(ggExtra)
```

```{r}
bangladesh_gw <- read_csv("https://stahlm.github.io/ENS_215/Data/NationalSurveyData_DPHE_BGS_LabData.csv") %>% 
  drop_na()
```



## Scatter plots

```{r}
fig_1 <- bangladesh_gw %>% 
  ggplot(aes(x = WELL_DEPTH_m, y = LAT_DEG)) +
  geom_point(alpha = 0.3) +
  
  theme_classic()

fig_1
```


```{r}
fig_2 <- ggMarginal(fig_1, type = "density", fill = "grey")

fig_2
```

```{r}
bangladesh_gw %>% 
  ggplot(aes(x = WELL_DEPTH_m, y = LAT_DEG)) +
  geom_hex() +
  
  scale_fill_viridis_c() +
  
  theme_classic()
```

## Time-series data
```{r}
flow <- read_csv("https://stahlm.github.io/ENS_215/Data/USGS_streamflow_01351500.csv") %>% 
  drop_na() %>% 
  filter(Year >= 1940 & Year < 2025) %>%  # select years 1940 through 2024
  mutate(Date = make_date(Year, Month, Day)) # create a Date column that has the dates as an R date object
```


```{r}
fig_flow <- flow %>% 
  ggplot(aes(x = Date, y = flow_cfs)) +
  geom_line() +
  
  theme_classic() +
  
  labs(x = "",
       y = "Flow (cfs)")

fig_flow
```

```{r}
fig_flow + scale_y_log10()
```

```{r}
flow %>% 
  mutate(decade = floor(Year/10)*10) %>% 
  
  ggplot(aes(x = Date, y = flow_cfs)) +
  geom_line() +
  
  scale_y_log10() +
  
  facet_wrap(~decade, scales = "free_x")
  
```


```{r}

flow %>% 
  mutate(DOY = yday(Date)) %>% 
  
  ggplot(aes(x = DOY, y = Year, fill = log10(flow_cfs))) +
  
  geom_tile() +
  
  scale_fill_gradient2(low = "red", mid = "green", high = "blue",
                       midpoint = median(log10(flow$flow_cfs))
                       ) 

```



```{r}
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_state_precipitation.csv")
```

```{r}
precip_data <- precip_data %>% 
  rename(Precip_inches = Value)
```


```{r}
precip_data %>% 
  filter(STATE == "California", YEAR >= 1960, YEAR < 2025) %>% 
  
  ggplot(aes(y = factor(MONTH), x = YEAR)) +
  geom_tile(aes(fill = percent_rank(Precip_inches)), color = "black") +
  
  scale_fill_gradient2(low = "red", mid = "white", high = "blue",
                       midpoint = 0.5) +
  
  coord_equal()
```



