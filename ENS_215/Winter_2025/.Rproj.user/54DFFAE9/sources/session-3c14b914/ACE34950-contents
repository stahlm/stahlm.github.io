---
title: "R Notebook"
output: html_notebook
---

## Load in data
```{r}
library(tidyverse)

dams_data <- read_csv("https://stahlm.github.io/ENS_215/Data/Dams_FAO_SelectCols_LabData.csv")
```

## Required analysis

### Step 1
Create a scatter plot showing the relationship between reservoir storage and reservoir area

```{r warning= F}
ggplot(data = dams_data, aes(x = Reservoir_area_km2,
                             y = Reservoir_capacity_million_m3)) +
  geom_point(alpha = 1, shape = 21, 
             fill = "black", col = "red") +
  scale_x_log10() +
  scale_y_log10()
```

### Create a summary table 
```{r}
table_summary <- dams_data %>% 
  group_by(Continent) %>% 
  summarize(avg_height = mean(Dam_height_m, na.rm = T),
            avg_area = mean(Reservoir_area_km2, na.rm = T),
            avg_storage = mean(Reservoir_capacity_million_m3, na.rm = T)
            )

table_summary
```


```{r}
dams_data %>% 
  ggplot(aes(x = Continent,
             y = Reservoir_capacity_million_m3,
             fill = Continent)) +
  geom_boxplot() +
  
  scale_y_log10()
```

```{r}
table_year_built <- dams_data %>% 
  group_by(Year_completed) %>% 
  summarise(num_dams = n())

table_year_built
```

```{r}
table_year_built %>% 
  ggplot(aes(x = Year_completed, y = num_dams)) +
  geom_point() +
  ylim(0,250)
```

## Office hours (Ilana)
```{r}
dams_canada <- dams_data %>% 
  filter(Country == "Canada") %>% 
  arrange(Hydroelectricity, Year_completed)
```


```{r}
dams_canada %>% 
  mutate(Hydroelectricity = factor(Hydroelectricity)) %>% 
  ggplot(aes(x = Longitude, y = Latitude, fill = Hydroelectricity))  +
  geom_point(shape = 21)
```

```{r}
table_summary_dams <- dams_data %>% 
  group_by(Year_completed, Continent) %>% 
  summarize(n_dam = n(), tot_capacity = sum(Reservoir_capacity_million_m3, na.rm = T))
  
```
```{r}
table_summary_dams %>% 
  filter(!is.na(Year_completed), Year_completed >= 1750) %>% 
  ggplot(aes(x= Year_completed, y = n_dam, fill = log(tot_capacity))) +
  geom_point(shape = 21) +
  
  scale_fill_viridis_c() +
  facet_wrap(~Continent)
```



```{r}
library(sf)
library(tmap)
library(leaflet)
```
```{r}
nation_borders <- st_read("../../Data/FN_borders/Premiere_Nation_First_Nation.shp")
```
```{r}
data_canada_sf <- st_as_sf(dams_canada, )
```



