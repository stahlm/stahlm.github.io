---
title: "R Notebook"
output: html_notebook
---

```{r}
library(tidyverse)
library(lubridate)
library(leaflet)
library(sf)
library(tmap)
library(dataRetrieval)

```

```{r}
start_date <- "1995-01-01"
```


## Get Cl data
```{r}
pCode <- c("00940")

sites_Cl <- whatWQPdata(stateCd = "CT", 
                            parameterCd = pCode, 
                            startDate = start_date
                            ) %>% 
  
  filter(ResolvedMonitoringLocationTypeName %in% c("Stream"))
```
```{r}
data_Cl <- readWQPqw(siteNumbers = sites_Cl$MonitoringLocationIdentifier,
                                parameterCd = pCode,
                                startDate = start_date
                                )
```
## Get Na data
```{r}
pCode <- c("00930")

sites_Na <- whatWQPdata(stateCd = "CT", 
                            parameterCd = pCode, 
                            startDate = start_date
                            ) %>% 
  
  filter(ResolvedMonitoringLocationTypeName %in% c("Stream"))
```

```{r}
data_Na <- readWQPqw(siteNumbers = sites_Na$MonitoringLocationIdentifier,
                                parameterCd = pCode,
                                startDate = start_date
                                )
```


## Join the data

### Select a subset of columns (variables) for the Cl data
```{r}
data_select_Cl <- data_Cl %>% 
  select(ActivityStartDate, MonitoringLocationIdentifier, 
         CharacteristicName_Cl = CharacteristicName, 
         USGSPCode_Cl = USGSPCode,
         ResultMeasureValue_Cl = ResultMeasureValue, 
         ResultMeasure_MeasureUnitCode_Cl = ResultMeasure.MeasureUnitCode)
```

```{r}
data_select_Cl <- data_select_Cl %>% 
  group_by(ActivityStartDate, MonitoringLocationIdentifier) %>% 
  summarize(CharacteristicName_Cl = first(CharacteristicName_Cl),
            USGSPCode_Cl = first(USGSPCode_Cl),
            ResultMeasureValue_Cl = mean(ResultMeasureValue_Cl, na.rm = T),
            ResultMeasure_MeasureUnitCode_Cl = first(ResultMeasure_MeasureUnitCode_Cl)
            )
```



### Select a subset of columns (variables) for the Cl data
```{r}
data_select_Na <- data_Na %>% 
  select(ActivityStartDate, MonitoringLocationIdentifier, 
         CharacteristicName_Na = CharacteristicName, 
         USGSPCode_Na = USGSPCode,
         ResultMeasureValue_Na = ResultMeasureValue, 
         ResultMeasure_MeasureUnitCode_Na = ResultMeasure.MeasureUnitCode)
```

```{r}
data_select_Na <- data_select_Na %>% 
  group_by(ActivityStartDate, MonitoringLocationIdentifier) %>% 
  summarize(CharacteristicName_Na = first(CharacteristicName_Na),
            USGSPCode_Na = first(USGSPCode_Na),
            ResultMeasureValue_Na = mean(ResultMeasureValue_Na, na.rm = T),
            ResultMeasure_MeasureUnitCode_Na = first(ResultMeasure_MeasureUnitCode_Na)
            )
```



### Join the Na and Cl data
```{r}
data_Na_Cl <- data_select_Na %>% 
  full_join(data_select_Cl)
```
## Join the site info to the chemistry data
```{r}
site_info_select <- sites_Cl %>% 
  bind_rows(sites_Na) %>% 
  distinct()
```

```{r}
site_info_select <- site_info_select %>% 
  select(MonitoringLocationIdentifier, 
         MonitoringLocationName, 
         HUCEightDigitCode, 
         ResolvedMonitoringLocationTypeName, 
         StateName, 
         CountyName, 
         lat, 
         lon) %>% 
  distinct()
```

```{r}
data_Na_Cl <- data_Na_Cl %>% 
  left_join(site_info_select)
```
## Write data to csv
```{r}
write_csv(x = data_Na_Cl, file = "./data_Na_Cl.csv")
```


## Make some figures
```{r}
data_Na_Cl %>% 
  ggplot(aes(x = ResultMeasureValue_Na, y = ResultMeasureValue_Cl)) +
  geom_point()
```

```{r}
site_summary <- data_Na_Cl %>% 
  group_by(MonitoringLocationIdentifier) %>% 
  summarize(n_samples = n())
```

```{r}
sites2plot <- site_summary %>% 
  filter(n_samples >= 230)
```


```{r}
data_Na_Cl %>% 
  filter(MonitoringLocationIdentifier %in% sites2plot$MonitoringLocationIdentifier) %>% 
  
  ggplot(aes(x = ActivityStartDate, y = ResultMeasureValue_Na, group = MonitoringLocationIdentifier)) +
  geom_point() +
  geom_line() +
  
  facet_wrap(~MonitoringLocationIdentifier)
```


