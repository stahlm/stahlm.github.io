---
title: "Powell Database: Spatial/mapping analysis"
author: "Global Arsenic Powell Group"
output:
  html_document:
    df_print: paged
    theme: spacelab
    toc: yes
    toc_float: no

---

```{r global_options, include=FALSE}
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE, fig.width = 10.5)
```


```{r load libraries and functions}
library(data.table)
library(tidyverse)
library(ggthemes)
library(ggridges)
library(scales)
library(RColorBrewer)
library(tmap)
library(spData)
library(raster)
library(sf)
library(htmlwidgets)
library(leaflet)
library(leafgl)

source("./Functions/As_mM_to_ppb.R")
source("./Functions/As_ppb_to_mM.R")
source("./Functions/Categorize_As_many_levels.R")
source("./Functions/Categorize_depths.R")
source("./Functions/Generate_gridded_data.R")
source("./Functions/Make_maps.R")
source("./Functions/load_powell_database.R")
source("./Functions/Make_raster_maps.R")
source("./Functions/Make_tm_maps.R")
```


```{r define arsenic category color scheme used by BGS Bangladesh report}
bgs_color_scheme_As = c("#003deeff",
                        "#2498ffff",
                        "#4cbeffff",
                        "#89ddffff",
                        "#67ff4dff",
                        "#ffb578ff",
                        "#ffb675ff",
                        "#ff9813ff",
                        "#ff1200ff",
                        "#d80000ff")

bgs_As_cat_breaks <- c(1,5,10,20,50,75,100,200,300) # breaks in ppb
USA_As_cat_breaks <- c(1,5,10,15,20,30,50,75,100) # breaks in ppb
```


```{r load in data}
water_quality_data <- load_powell_database()

tmap_mode("plot")
```


## Arsenic maps (colored by Arsenic concentration category)

### Countries in S-SE Asia
All available data  

```{r Asia cat}
## Define function inputs
data_in <- water_quality_data
loc2plot <- c("Bangladesh", "Cambodia", "Vietnam", "India", "Pakistan")
var2plot <- "Category_As_many"
style_spec <- "cat"
breaks_list <- NULL
palette_spec <- bgs_color_scheme_As

## Call mapping function
make_map_tm_points(data_in = data_in, loc2plot = loc2plot,
                   var2plot =  var2plot, style_spec = style_spec,
                   breaks_list =  breaks_list,palette_spec =  palette_spec) +
  tm_facets(by = "Country") +
  
  tm_layout(legend.bg.color = "grey90", legend.bg.alpha=.5,
            legend.frame=TRUE, legend.outside = T) 
```

<br/>

### USA
All available data  

```{r USA cat}
## Define function inputs
data_in <- water_quality_data
loc2plot <- c("USA")
var2plot <- "Category_As_many"
style_spec <- "cat"
breaks_list <- NULL
palette_spec <- bgs_color_scheme_As

## Call mapping function
make_map_tm_points(data_in = data_in, loc2plot = loc2plot,
                   var2plot =  var2plot, style_spec = style_spec,
                   breaks_list =  breaks_list,palette_spec =  palette_spec) +
  
  tm_layout(legend.bg.color = "grey90", legend.bg.alpha=.5,
            legend.frame=TRUE, legend.outside = T) 
```

<br/>

## Arsenic maps (colored by Arsenic concentration)

### Countries in S-SE Asia
```{r Asia cont}
## Define function inputs
data_in <- water_quality_data
loc2plot <- c("Bangladesh", "Cambodia", "Vietnam")
var2plot <- "As__ppb"
style_spec <- "cont"
breaks_list <- bgs_As_cat_breaks
palette_spec <- bgs_color_scheme_As

## Call mapping function
make_map_tm_points(data_in = data_in, loc2plot = loc2plot,
                   var2plot =  var2plot, style_spec = style_spec,
                   breaks_list =  breaks_list,palette_spec =  palette_spec) +
  tm_facets(by = "Country") +
  
  tm_layout(legend.bg.color = "grey90", legend.bg.alpha=.5,
            legend.frame=TRUE, legend.outside = T) 
```

<br/>

### China
```{r China cont}
## Define function inputs
#tmap_mode("view")
data_in <- water_quality_data
loc2plot <- c("China")
var2plot <- "As__ppb"
text_id <- "Category_As_many"
style_spec <- "cont"
breaks_list <- bgs_As_cat_breaks
palette_spec <- bgs_color_scheme_As

## Call mapping function
map_fig <- make_map_tm_points(data_in = data_in, loc2plot = loc2plot, text_id = text_id,
                   var2plot =  var2plot, style_spec = style_spec,
                   breaks_list =  breaks_list,palette_spec =  palette_spec) +
  
  tm_layout(legend.bg.color = "grey90", legend.bg.alpha=.5,
            legend.frame=TRUE, legend.outside = T) 

map_fig

#map_fig <- map_fig + tm_basemap(c(Map = "Esri.NatGeoWorldMap", Satellite = "Esri.WorldImagery"))

#tmap_save(map_fig, "fig_map.html")
#file.rename("fig_map.html","./Figures/Interactive_maps/Arsenic_China.html")
```




<br/>

### USA (using BGS concentration breaks)
```{r USA cont bgs}
## Define function inputs
data_in <- water_quality_data
loc2plot <- c("USA")
var2plot <- "As__ppb"
style_spec <- "cont"
breaks_list <- bgs_As_cat_breaks
palette_spec <- bgs_color_scheme_As

## Call mapping function
make_map_tm_points(data_in = data_in, loc2plot = loc2plot,
                   var2plot =  var2plot, style_spec = style_spec,
                   breaks_list =  breaks_list, palette_spec =  palette_spec) +
  tm_facets(by = "Country") +
  
  tm_layout(legend.bg.color = "grey90", legend.bg.alpha=.5,
            legend.frame=TRUE, legend.outside = T) 
```

<br/>

### USA (using narrow concentration breaks)
```{r USA cont us}
## Define function inputs
tmap_mode("plot")
data_in <- water_quality_data
loc2plot <- c("USA")
var2plot <- "As__ppb"
style_spec <- "cont"
breaks_list <- USA_As_cat_breaks
palette_spec <- bgs_color_scheme_As

## Call mapping function
make_map_tm_points(data_in = data_in, loc2plot = loc2plot, 
                   var2plot =  var2plot, style_spec = style_spec,
                   breaks_list =  breaks_list, palette_spec =  palette_spec) 
  

```

<br/>

## Interactive maps - Arsenic
See  file `Powell_Database_As_Map.html`

```{r eval = F}
water_quality_data <- water_quality_data %>% 
  mutate(As_fill_color_r = case_when(
    Category_As_many == "<1 ppb As" ~ col2rgb(bgs_color_scheme_As[1])[1],
    Category_As_many == "1-5" ~ col2rgb(bgs_color_scheme_As[2])[1],
    Category_As_many == "5-10" ~ col2rgb(bgs_color_scheme_As[3])[1],
    Category_As_many == "10-20" ~ col2rgb(bgs_color_scheme_As[4])[1],
    Category_As_many == "20-50" ~ col2rgb(bgs_color_scheme_As[5])[1],
    Category_As_many == "50-75" ~ col2rgb(bgs_color_scheme_As[6])[1],
    Category_As_many == "75-100" ~ col2rgb(bgs_color_scheme_As[7])[1],
    Category_As_many == "100-200" ~ col2rgb(bgs_color_scheme_As[8])[1],
    Category_As_many == "200-300" ~ col2rgb(bgs_color_scheme_As[9])[1],
    Category_As_many == ">300 ppb As" ~ col2rgb(bgs_color_scheme_As[10])[1]
    )
         )

water_quality_data <- water_quality_data %>% 
  mutate(As_fill_color_g = case_when(
    Category_As_many == "<1 ppb As" ~ col2rgb(bgs_color_scheme_As[1])[2],
    Category_As_many == "1-5" ~ col2rgb(bgs_color_scheme_As[2])[2],
    Category_As_many == "5-10" ~ col2rgb(bgs_color_scheme_As[3])[2],
    Category_As_many == "10-20" ~ col2rgb(bgs_color_scheme_As[4])[2],
    Category_As_many == "20-50" ~ col2rgb(bgs_color_scheme_As[5])[2],
    Category_As_many == "50-75" ~ col2rgb(bgs_color_scheme_As[6])[2],
    Category_As_many == "75-100" ~ col2rgb(bgs_color_scheme_As[7])[2],
    Category_As_many == "100-200" ~ col2rgb(bgs_color_scheme_As[8])[2],
    Category_As_many == "200-300" ~ col2rgb(bgs_color_scheme_As[9])[2],
    Category_As_many == ">300 ppb As" ~ col2rgb(bgs_color_scheme_As[10])[2]
    )
         )

water_quality_data <- water_quality_data %>% 
  mutate(As_fill_color_b = case_when(
    Category_As_many == "<1 ppb As" ~ col2rgb(bgs_color_scheme_As[1])[3],
    Category_As_many == "1-5" ~ col2rgb(bgs_color_scheme_As[2])[3],
    Category_As_many == "5-10" ~ col2rgb(bgs_color_scheme_As[3])[3],
    Category_As_many == "10-20" ~ col2rgb(bgs_color_scheme_As[4])[3],
    Category_As_many == "20-50" ~ col2rgb(bgs_color_scheme_As[5])[3],
    Category_As_many == "50-75" ~ col2rgb(bgs_color_scheme_As[6])[3],
    Category_As_many == "75-100" ~ col2rgb(bgs_color_scheme_As[7])[3],
    Category_As_many == "100-200" ~ col2rgb(bgs_color_scheme_As[8])[3],
    Category_As_many == "200-300" ~ col2rgb(bgs_color_scheme_As[9])[3],
    Category_As_many == ">300 ppb As" ~ col2rgb(bgs_color_scheme_As[10])[3]
    )
         )
```



```{r All Data Interactive, eval = F}
map_pts <- water_quality_data %>% 
  dplyr::select(Lat, Long, Study_ID, 
                Country, Category_As_many, As__ppb, Category_Depth, Depth__m,
                As_fill_color_r, As_fill_color_g, As_fill_color_b) %>% 
  filter(!is.na(Lat),
         !is.na(Long)) 

map_pts <- map_pts %>% 
  mutate(As__ppb = round(As__ppb, 1),
         Info_string = paste("Depth (m) = ", round(Depth__m, 1),
                             "; As (ug/L) = ", As__ppb, sep = "") )

map_colors <- dplyr::select(map_pts, 
                            As_fill_color_r, As_fill_color_g, As_fill_color_b)

map_colors <- data.matrix(map_colors/255)

map_pts <- st_as_sf(map_pts, coords = c("Long","Lat"), crs = 4326)


map_leaflet <- leaflet() %>% 
  addProviderTiles(providers$Esri.NatGeoWorldMap, group = "Map") %>%
  addProviderTiles(providers$Esri.WorldImagery, group = "Satellite") %>%
  addGlPoints(data = map_pts, group = "Locations",
              popup = "Info_string", color = map_colors) %>% 
  addLayersControl(baseGroups = c("Map", "Satellite"),
                   overlayGroups = "Locations"
                   )



saveWidget(map_leaflet, file="Powell_Database_As_Map.html", selfcontained=F)
#tmap_save(map_fig, "fig_map.html")
#file.rename("fig_map.html","./Figures/Interactive_maps/Arsenic_Bangladesh.html")
```



```{r USA Interactive, eval= F}
data_in <- water_quality_data
loc2plot <- c("USA")
var2plot <- "Category_As_many"
text_id <- c("As__ppb", "Depth__m", "Lithology")
style_spec <- "cat"
breaks_list <- NULL
palette_spec <- bgs_color_scheme_As

## Call mapping function
map_fig <- make_map_tm_points(data_in = data_in, loc2plot = loc2plot, text_id = text_id,
                   var2plot =  var2plot, style_spec = style_spec,
                   breaks_list =  breaks_list,palette_spec =  palette_spec) +
  
  tm_layout(legend.bg.color = "grey90", legend.bg.alpha=.5,
            legend.frame=TRUE, legend.outside = T) 


map_fig <- map_fig + tm_basemap(c(Map = "Esri.NatGeoWorldMap", Satellite = "Esri.WorldImagery"))

#tmap_save(map_fig, "fig_map.html")
#file.rename("fig_map.html","./Figures/Interactive_maps/Arsenic_USA.html")
```



```{r China Interactive, eval = F}
data_in <- water_quality_data
loc2plot <- c("China")
var2plot <- "Category_As_many"
text_id <- c("As__ppb", "Depth__m")
style_spec <- "cat"
breaks_list <- NULL
palette_spec <- bgs_color_scheme_As

## Call mapping function
map_fig <- make_map_tm_points(data_in = data_in, loc2plot = loc2plot, text_id = text_id,
                   var2plot =  var2plot, style_spec = style_spec,
                   breaks_list =  breaks_list,palette_spec =  palette_spec) +
  
  tm_layout(legend.bg.color = "grey90", legend.bg.alpha=.5,
            legend.frame=TRUE, legend.outside = T) 


map_fig <- map_fig + tm_basemap(c(Map = "Esri.NatGeoWorldMap", Satellite = "Esri.WorldImagery"))

tmap_save(map_fig, "fig_map.html")
file.rename("fig_map.html","./Figures/Interactive_maps/Arsenic_China.html")
```




<br/>

<br/>


## Arsenic maps by depth interval

### Bangladesh
```{r Bangladesh by depth}
## Define function inputs
data_in <- water_quality_data
loc2plot <- c("Bangladesh")
var2plot <- "As__ppb"
style_spec <- "cont"
breaks_list <- bgs_As_cat_breaks
palette_spec <- bgs_color_scheme_As

## Call mapping function
make_map_tm_points(data_in = data_in, loc2plot = loc2plot, 
                   var2plot =  var2plot, style_spec = style_spec,
                   breaks_list =  breaks_list, palette_spec =  palette_spec) +
  tm_facets(by = "Category_Depth", free.coords = F, nrow = 3) +
  
  tm_layout(legend.bg.color = "grey90", legend.bg.alpha=.5,
            legend.frame=TRUE, legend.outside = T) 
```

<br/>

### Vietnam
```{r Vietnam by depth}
## Define function inputs
data_in <- water_quality_data
loc2plot <- c("Vietnam")
var2plot <- "As__ppb"
style_spec <- "cont"
breaks_list <- bgs_As_cat_breaks
palette_spec <- bgs_color_scheme_As

## Call mapping function
make_map_tm_points(data_in = data_in, loc2plot = loc2plot, 
                   var2plot =  var2plot, style_spec = style_spec,
                   breaks_list =  breaks_list, palette_spec =  palette_spec) +
  tm_facets(by = "Category_Depth", free.coords = F) +
  
  tm_layout(legend.bg.color = "grey90", legend.bg.alpha=.5,
            legend.frame=TRUE, legend.outside = T) 
```

<br/>


### Cambodia
```{r Cambodia by depth}
## Define function inputs
data_in <- water_quality_data
loc2plot <- c("Cambodia")
var2plot <- "As__ppb"
style_spec <- "cont"
breaks_list <- bgs_As_cat_breaks
palette_spec <- bgs_color_scheme_As

## Call mapping function
make_map_tm_points(data_in = data_in, loc2plot = loc2plot, 
                   var2plot =  var2plot, style_spec = style_spec,
                   breaks_list =  breaks_list, palette_spec =  palette_spec) +
  tm_facets(by = "Category_Depth", free.coords = F, nrow = 3) +
  
  tm_layout(legend.bg.color = "grey90", legend.bg.alpha=.5,
            legend.frame=TRUE, legend.outside = T) 
```

<br/>

### China
```{r China by depth}
## Define function inputs
data_in <- water_quality_data
loc2plot <- c("China")
var2plot <- "As__ppb"
style_spec <- "cont"
breaks_list <- bgs_As_cat_breaks
palette_spec <- bgs_color_scheme_As

## Call mapping function
make_map_tm_points(data_in = data_in, loc2plot = loc2plot, 
                   var2plot =  var2plot, style_spec = style_spec,
                   breaks_list =  breaks_list, palette_spec =  palette_spec) +
  tm_facets(by = "Category_Depth", free.coords = F, nrow = 3) +
  
  tm_layout(legend.bg.color = "grey90", legend.bg.alpha=.5,
            legend.frame=TRUE, legend.outside = T) 
```

<br/>

### USA
```{r USA by depth}
## Define function inputs
#tmap_mode("view")
data_in <- water_quality_data
loc2plot <- c("USA")
var2plot <- "Category_As_many"
style_spec <- "cat"
breaks_list <- USA_As_cat_breaks
palette_spec <- bgs_color_scheme_As

## Call mapping function
make_map_tm_points(data_in = data_in, loc2plot = loc2plot, 
                   var2plot =  var2plot, style_spec = style_spec,
                   breaks_list =  breaks_list, palette_spec =  palette_spec) +
  tm_facets(by = "Category_Depth", free.coords = F, nrow = 3) +
  
  tm_layout(legend.bg.color = "grey90", legend.bg.alpha=.5,
            legend.frame=TRUE, legend.outside = T) #+
  #tmap_options(limits = c(facets.view = 8))

#tmap_mode("plot")
```




<br/>

## Arsenic maps by Lithologic type

### Bangladesh
```{r Bangladesh by lithology}
## Define function inputs
data_in <- water_quality_data
loc2plot <- c("Bangladesh")
var2plot <- "As__ppb"
style_spec <- "cont"
breaks_list <- bgs_As_cat_breaks
palette_spec <- bgs_color_scheme_As

## Call mapping function
make_map_tm_points(data_in = data_in, loc2plot = loc2plot, 
                   var2plot =  var2plot, style_spec = style_spec,
                   breaks_list =  breaks_list, palette_spec =  palette_spec) +
  tm_facets(by = "Lithology", free.coords = F, nrow = 3) +
  
  tm_layout(legend.bg.color = "grey90", legend.bg.alpha=.5,
            legend.frame=TRUE, legend.outside = T) 
```

<br/>

### USA
```{r USA by lithology, fig.height= 9.5}
## Define function inputs
data_in <- water_quality_data
loc2plot <- c("USA")
var2plot <- "As__ppb"
style_spec <- "cont"
breaks_list <- USA_As_cat_breaks
palette_spec <- bgs_color_scheme_As

## Call mapping function
make_map_tm_points(data_in = data_in, loc2plot = loc2plot, 
                   var2plot =  var2plot, style_spec = style_spec,
                   breaks_list =  breaks_list, palette_spec =  palette_spec) +
  tm_facets(by = "Lithology", free.coords = F, nrow = 4) +
  
  tm_layout(legend.bg.color = "grey90", legend.bg.alpha=.5,
            legend.frame=TRUE, legend.outside = T) 
```


***
File run by `r Sys.info()[7]` on `r Sys.time()`

