avg_area = mean(Reservoir_area_km2, na.rm = T),
avg_storage = mean(Reservoir_capacity_million_m3, na.rm = T)
)
table_summary <- dams_data %>%
group_by(Continent) %>%
summarize(avg_height = mean(Dam_height_m, na.rm = T),
avg_area = mean(Reservoir_area_km2, na.rm = T),
avg_storage = mean(Reservoir_capacity_million_m3, na.rm = T)
)
table_summary
dams_data %>%
ggplot(aes(x = Continent, y = Reservoir_capacity_million_m3)) +
geom_boxplot()
dams_data %>%
ggplot(aes(x = Continent, y = Reservoir_capacity_million_m3)) +
geom_boxplot()
dams_data %>%
ggplot(aes(x = Continent, y = Reservoir_capacity_million_m3)) +
geom_boxplot() +
scale_y_log10()
dams_data %>%
ggplot(aes(x = Continent,
y = Reservoir_capacity_million_m3,
fill = Continent)) +
geom_boxplot() +
scale_y_log10()
View(dams_data)
table_year_built <- dams_data %>%
group_by(Year_completed) %>%
summarise(num_dams = n())
table_year_built
table_year_built %>%
ggplot(aes(x = Year_completed, y = num_dams)) +
geom_point()
table_year_built %>%
ggplot(aes(x = Year_completed, y = num_dams)) +
geom_point() +
ylim(0,500)
table_year_built %>%
ggplot(aes(x = Year_completed, y = num_dams)) +
geom_point() +
ylim(0,250)
df_rubric <- tibble::tibble(score = c(0,1,1.5,2,2.25,2.5,2.75,3))
View(df_rubric)
df_rubric <- tibble::tibble(score = c(0,1,1.5,2,2.25,2.5,2.75,3),
grade = c(0,50,67.5,85,88.75,92.5,96.25,100)
)
View(df_rubric)
# Student's grade table
score_code <- 2
score_results <- 2
score_achieve <- 2
score_discuss <- 2
score_access <- 2
df_student <- tibble::tibble(score = c(score_code, score_results, score_achieve, score_discuss, score_access))
View(df_student)
library(tidyverse)
df_student <- tibble::tibble(score = c(score_code, score_results, score_achieve, score_discuss, score_access))
df_student <- df_student %>%
left_join(df_rubric)
View(df_student)
round(mean(df_student$grade), 1)
round(mean(df_student$grade), 2)
round(2.5)
round(2.5,1)
round(2.5,2)
library(gapminder)
library(tidyverse)
gap_data <- gapminder
a <- gap_data %>% filter(year == 2007, lifeExp <= 60, gdpPercap >= 10000)
View(a)
a <- gap_data %>% filter(year == 2007, lifeExp <= 60, gdpPercap >= 7500)
a <- gap_data %>% filter(year == 2007, lifeExp <= 60, gdpPercap >= 7000)
a <- gap_data %>% filter(year == 2007, lifeExp <= 60, gdpPercap >= 7500)
library(gapminder)
library(gapminder)
gap_data <- gapminder
filter(gap_data, country == "China")
filter(gap_data, country == "China")
filter(gap_data, country == "China")
library(tidyverse)
filter(gap_data, country == "China")
filter(gap_data, country == "China", country == "Spain")
filter(gap_data, country == "China"| country == "Spain")
gap_data %>%
filter(country %in% c("China", "Spain"))
library(tidyverse)
library(readr) # we'll use this package later in the lecture to load in files from our class website
library(gapminder)
my_gap <- gapminder
my_gap_2007 <- filter(my_gap, year == 2007)
summarize(my_gap_2007, avg_life = mean(lifeExp), avg_gdp_per_cap = mean(gdpPercap) )
# Your code here
my_gap_2007 <- group_by(my_gap_2007, continent) # group the data by continent
summarize(my_gap_2007, min_life = min(lifeExp), mean_life = mean(lifeExp), max_life = max(lifeExp))
my_gap <- group_by(my_gap, continent, year) # group by continent then year
summarize(my_gap, min_life = min(lifeExp), mean_life = mean(lifeExp), max_life = max(lifeExp))
my_gap <- ungroup(my_gap) # ungroup the my_gap data
my_gap %>%
group_by(year) %>%
top_n(3, gdpPercap)
my_gap %>%
group_by(year) %>%
top_n(3, gdpPercap) %>%
arrange(year)
# Your code here
# Your code here
# Your code here
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/NOAA_State_Precip_LabData.csv")
# Your code here
# Your code here
# Your code here
# Your code here
# Your code here
t3 <- precip_data %>%
group_by(state_cd, Year) %>%
summarize(annual_precip = sum(Precip_inches))
t3 %>%
group_by(Year) %>%
top_n(1, annual_precip) %>%
arrange(Year)
View(t3)
library(tidyverse)
library(gapminder)
library(kableExtra)
library(scales)
my_gap <- gapminder
my_gap %>% filter(year == 2007) %>%
select(country, gdpPercap, lifeExp) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
my_gap %>% filter(year == 2007) %>%
ggplot() +
geom_point(aes(x = gdpPercap, y = lifeExp , color = continent), size = 3) +
scale_x_continuous(name="GDP per capita (dollars)", labels = comma) +
ylab("Life expectancy (yrs)") +
theme_classic()
my_gap %>% filter(year == 2007) %>%
ggplot() +
geom_point(aes(x = gdpPercap, y = lifeExp))
my_gap %>% filter(year == 2007) %>%
ggplot() +
geom_point(aes(x = gdpPercap, y = lifeExp , color = continent), size = 3) +
scale_x_continuous(name="GDP per capita (dollars)", labels = comma) + ylab("Life expectancy (yrs)") +
theme_classic(base_size = 14) +
labs(caption= "data source: gapminder",
subtitle = "Figure 1: Life expectancy generally increase with per capita GDP") +
theme(legend.title = element_text(colour="black", size=10,
face="bold"),
#legend.position=c(0.85, 0.3
legend.position.inside=c(0.85, 0.3)
) +
labs(col="Continent")
my_gap %>% filter(year == 2007) %>%
ggplot() +
geom_point(aes(x = gdpPercap, y = lifeExp , color = continent), size = 3) +
scale_x_continuous(name="GDP per capita (dollars)", labels = comma) + ylab("Life expectancy (yrs)") +
theme_classic(base_size = 14) +
labs(caption= "data source: gapminder",
subtitle = "Figure 1: Life expectancy generally increase with per capita GDP") +
theme(legend.title = element_text(colour="black", size=10,
face="bold"),
#legend.position=c(0.85, 0.3
legend.position.inside=c(0.5, 0.3)
) +
labs(col="Continent")
my_gap %>% filter(year == 2007) %>%
ggplot() +
geom_point(aes(x = gdpPercap, y = lifeExp , color = continent), size = 3) +
scale_x_continuous(name="GDP per capita (dollars)", labels = comma) + ylab("Life expectancy (yrs)") +
theme_classic(base_size = 14) +
labs(caption= "data source: gapminder",
subtitle = "Figure 1: Life expectancy generally increase with per capita GDP") +
theme(legend.title = element_text(colour="black", size=10,
face="bold"),
#legend.position=c(0.85, 0.3
legend.position.inside=c(0.25, 0.3)
) +
labs(col="Continent")
my_gap %>% filter(year == 2007) %>%
ggplot() +
geom_point(aes(x = gdpPercap, y = lifeExp , color = continent), size = 3) +
scale_x_continuous(name="GDP per capita (dollars)", labels = comma) + ylab("Life expectancy (yrs)") +
theme_classic(base_size = 14) +
labs(caption= "data source: gapminder",
subtitle = "Figure 1: Life expectancy generally increase with per capita GDP") +
theme(legend.title = element_text(colour="black", size=10,
face="bold"),
#legend.position=c(0.85, 0.3
legend.position.inside=c(0.25, 0.93)
) +
labs(col="Continent")
my_gap %>% filter(year == 2007) %>%
ggplot() +
geom_point(aes(x = gdpPercap, y = lifeExp , color = continent), size = 3) +
scale_x_continuous(name="GDP per capita (dollars)", labels = comma) + ylab("Life expectancy (yrs)") +
theme_classic(base_size = 14) +
labs(caption= "data source: gapminder",
subtitle = "Figure 1: Life expectancy generally increase with per capita GDP") +
theme(legend.title = element_text(colour="black", size=10,
face="bold"),
#legend.position=c(0.85, 0.3
legend.position.inside=c(0.25, 0.93)
) +
labs(col="Continent")
my_gap %>% filter(year == 2007) %>%
ggplot() +
geom_point(aes(x = gdpPercap, y = lifeExp , color = continent), size = 3) +
scale_x_continuous(name="GDP per capita (dollars)", labels = comma) + ylab("Life expectancy (yrs)") +
theme_classic(base_size = 14) +
labs(caption= "data source: gapminder",
subtitle = "Figure 1: Life expectancy generally increase with per capita GDP") +
theme(legend.title = element_text(colour="black", size=10,
face="bold"),
#legend.position=c(0.85, 0.3
legend.position.inside=c(0.95, 0.93)
) +
labs(col="Continent")
my_gap %>% filter(year == 2007) %>%
ggplot() +
geom_point(aes(x = gdpPercap, y = lifeExp , color = continent), size = 3) +
scale_x_continuous(name="GDP per capita (dollars)", labels = comma) + ylab("Life expectancy (yrs)") +
theme_classic(base_size = 14) +
labs(caption= "data source: gapminder",
subtitle = "Figure 1: Life expectancy generally increase with per capita GDP") +
theme(legend.title = element_text(colour="black", size=10,
face="bold"),
#legend.position=c(0.85, 0.3
legend.position = "inside",
legend.position.inside=c(0.95, 0.93)
) +
labs(col="Continent")
my_gap %>% filter(year == 2007) %>%
ggplot() +
geom_point(aes(x = gdpPercap, y = lifeExp , color = continent), size = 3) +
scale_x_continuous(name="GDP per capita (dollars)", labels = comma) + ylab("Life expectancy (yrs)") +
theme_classic(base_size = 14) +
labs(caption= "data source: gapminder",
subtitle = "Figure 1: Life expectancy generally increase with per capita GDP") +
theme(legend.title = element_text(colour="black", size=10,
face="bold"),
#legend.position=c(0.85, 0.3
legend.position = "inside",
legend.position.inside=c(0.5, 0.93)
) +
labs(col="Continent")
my_gap %>% filter(year == 2007) %>%
ggplot() +
geom_point(aes(x = gdpPercap, y = lifeExp , color = continent), size = 3) +
scale_x_continuous(name="GDP per capita (dollars)", labels = comma) + ylab("Life expectancy (yrs)") +
theme_classic(base_size = 14) +
labs(caption= "data source: gapminder",
subtitle = "Figure 1: Life expectancy generally increase with per capita GDP") +
theme(legend.title = element_text(colour="black", size=10,
face="bold"),
#legend.position=c(0.85, 0.3
legend.position = "inside",
legend.position.inside=c(0.65, 0.93)
) +
labs(col="Continent")
my_gap %>% filter(year == 2007) %>%
ggplot() +
geom_point(aes(x = gdpPercap, y = lifeExp , color = continent), size = 3) +
scale_x_continuous(name="GDP per capita (dollars)", labels = comma) + ylab("Life expectancy (yrs)") +
theme_classic(base_size = 14) +
labs(caption= "data source: gapminder",
subtitle = "Figure 1: Life expectancy generally increase with per capita GDP") +
theme(legend.title = element_text(colour="black", size=10,
face="bold"),
#legend.position=c(0.85, 0.3
legend.position = "inside",
legend.position.inside=c(0.65, 0.25)
) +
labs(col="Continent")
my_gap %>% filter(year == 2007) %>%
ggplot() +
geom_point(aes(x = gdpPercap, y = lifeExp , color = continent), size = 3) +
scale_x_continuous(name="GDP per capita (dollars)", labels = comma) + ylab("Life expectancy (yrs)") +
theme_classic(base_size = 14) +
labs(caption= "data source: gapminder",
subtitle = "Figure 1: Life expectancy generally increase with per capita GDP") +
theme(legend.title = element_text(colour="black", size=10,
face="bold"),
#legend.position=c(0.85, 0.3
legend.position = "inside",
legend.position.inside=c(0.75, 0.25)
) +
labs(col="Continent")
my_gap %>% filter(year == 2007) %>%
ggplot() +
geom_point(aes(x = gdpPercap, y = lifeExp , color = continent), size = 3) +
scale_x_continuous(name="GDP per capita (dollars)", labels = comma) + ylab("Life expectancy (yrs)") +
theme_classic(base_size = 14) +
labs(caption= "data source: gapminder",
subtitle = "Figure 1: Life expectancy generally increase with per capita GDP") +
theme(legend.title = element_text(colour="black", size=10,
face="bold"),
#legend.position=c(0.85, 0.3
legend.position = "inside",
legend.position.inside=c(0.85, 0.25)
) +
labs(col="Continent")
my_gap %>% filter(year == 2007) %>%
ggplot() +
geom_point(aes(x = gdpPercap, y = lifeExp , color = continent), size = 3) +
scale_x_continuous(name="GDP per capita (dollars)", labels = comma) + ylab("Life expectancy (yrs)") +
theme_classic(base_size = 14) +
labs(caption= "data source: gapminder",
subtitle = "Figure 1: Life expectancy generally increase with per capita GDP") +
theme(legend.title = element_text(colour="black", size=10,
face="bold"),
#legend.position=c(0.85, 0.3
legend.position = "inside",
legend.position.inside=c(0.95, 0.25)
) +
labs(col="Continent")
install.packages("mapgl")
library(mapgl)
mapboxgl(
center = c(-97.6, 25.4)
) |>
fly_to(
center = c(-96.810481, 32.790869),
zoom = 18.4,
pitch = 75,
bearing = 136.8
)
devtools::install_github("EdwinTh/dutchmasters")
library(dutchmasters)
dutchmasters_pal()
dutchmasters::dutchmasters
scales::show_col(dutchmasters_pal())
scales::show_col(dutchmasters)
scales::show_col(dutchmasters_pal(palette = "milkmaid"))
dutchmasters_pal(palette = "milkmaid")
dutchmasters_pal(palette = "milkmaid", n = 5)
dutchmasters_pal(palette = "milkmaid")
a<-dutchmasters_pal(palette = "milkmaid")
a
dutchmasters$milkmaid
scales::show_col(dutchmasters$milkmaid)
scales::show_col(dutchmasters$pearl_earring)
scales::show_col(dutchmasters$view_of_Delft)
scales::show_col(dutchmasters$little_street)
scales::show_col(dutchmasters$anatomy)
scales::show_col(dutchmasters$staalmeesters)
install.packages("paletteer")
library(paletteer)
paletteer::paletteer_c()
paletteer_d(`"calecopal::vermillion"`)
paletteer_d(`"calecopal::vermillion"`)
paletteer_d(`"nord::polarnight"`)
paletteer_d("colRoz::n_levis")
library(paletteer)
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d(`"dutchmasters::pearl_earring"`)
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("dutchmasters::pearl_earring")
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d(`"NineteenEightyR::sunset1"`)
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d(`"MoMAColors::Picasso"`)
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d(`"nationalparkcolors::Yellowstone"`)
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("nationalparkcolors::Yellowstone")
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("nationalparkcolors::Glacier")
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("nationalparkcolors::Yellowstone")
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d(`"MetBrewer::Monet"`)
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("MetBrewer::Monet")
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d(`"calecopal::wetland"`)
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("calecopal::wetland")
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("nbapalettes::celtics")
scale_color_paletteer_d("dutchmasters::pearl_earring")
scale_color_paletteer_d(`"calecopal::chaparral1"`)
paletteer_d(`"feathers::plains_wanderer"`)
paletteer_d(`"calecopal::chaparral1"`)
devtools::install_github("EmilHvitfeldt/paletteer")
library(paletteer)
a<-palettes_d_names
View(a)
paletteer_d("vangogh::StarryNight")
knitr::opts_chunk$set(comment=NA, fig.width=5.5, fig.height=4.5)
library(tidyverse)
library(gapminder)
my_gap <- gapminder # create your own data object with the gapminder data
fig_1 <- my_gap %>%
filter(year == 2007, continent == "Asia") %>%
ggplot(aes(x = reorder(country, gdpPercap), y = gdpPercap)) +
geom_point() +
theme_classic()
fig_1
fig_1 <- fig_1 +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
fig_1
library(scales)
fig_1 +
scale_y_continuous(labels=comma_format())
fig_life <- ggplot(my_gap, aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
theme_classic() +
scale_x_log10()
fig_life
fig_life +
scale_x_log10(labels = trans_format('log10', math_format(10^.x)) )
fig_life +
scale_x_log10(breaks = c(250, 1000, 5000, 25000, 50000, 90000))
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
scale_x_log10() +
labs(title = "Life expectancy increases with income",
subtitle = "Life expectancy vs. GDP per capita",
x = "GDP per capita",
y = "Life Expectancy",
caption = "Data source: gapminder") +
theme_classic()
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
scale_x_log10() +
labs(title = "Life expectancy increases with income",
subtitle = "Life expectancy vs. GDP per capita",
x = "GDP per capita",
y = "Life Expectancy",
caption = "Data source: gapminder") +
theme_classic() +
theme(plot.title = element_text(color = "blue", size = 14, face = "bold"),
plot.subtitle = element_text(color = "blue", size = 11),
plot.caption = element_text(face = "italic"),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")
)
my_gap %>%
filter(continent == "Americas" , year == 2007) %>%
ggplot(aes(y = reorder(country, gdpPercap), x = gdpPercap, color = lifeExp)) +
geom_point(size = 3) +
scale_color_gradient(low = "red", high = "green") +
theme_classic()
my_gap %>%
filter(continent == "Americas" , year == 2007) %>%
ggplot(aes(y = reorder(country, gdpPercap), x = gdpPercap, color = lifeExp)) +
geom_point(size = 3) +
scale_color_gradient2(low = "red", mid = "green", high = "blue", midpoint = 70)
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_brewer(palette = "Dark2")
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_manual(values = c("red", "blue", "green", "gray", "purple"))
library(paletteer)
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("dutchmasters::pearl_earring")
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("nationalparkcolors::Yellowstone")
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("calecopal::wetland")
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("nbapalettes::celtics")
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("MetBrewer::Monet")
View(a)
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("vangogh::StarryNight")
paletteer_d("soilpalettes::redox")
paletteer_d("soilpalettes::podzol")
paletteer_d("soilpalettes::redox2")
