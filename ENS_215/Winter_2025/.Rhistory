df_seasonality_bos_sfo %>%
mutate(group_name = if_else(group_name == "724940-23234", "San Francisco", "Boston")) %>%
mutate(a_vec_length = (value_tot_x^2 + value_tot_y^2)^0.5) %>%
pivot_longer(cols = c(value_tot, a_vec_length), names_to = "precip_meas", values_to = "precip_val") %>%
ggplot(aes(x = group_name, y = precip_val, fill = precip_meas)) +
scale_fill_manual(values = c("red", "darkgrey")) +
geom_col(position = position_dodge()) +
theme_bw(base_size = 14) +
theme(legend.position = "none") +
labs(y = "Precipitation magnitude (mm)", x = "")
df_seasonality_bos_sfo %>%
mutate(group_name = if_else(group_name == "724940-23234", "San Francisco", "Boston")) %>%
rename(Location = group_name) %>%
select(Location, SI, SC) %>%
mutate(SI = round(SI, 2),
SC = round(SC,0)
) %>%
kableExtra::kable() %>%
kableExtra::  kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
df_seasonality_bos_sfo %>%
ggplot(aes(x = SC, y = SI, color = group_name)) +
geom_segment(aes(y = 0, xend = SC, yend = SI),
size = 2, arrow = arrow(length = unit(0.03, "npc")) ) +
scale_color_manual(values = c("Black","Blue")) +
scale_x_continuous(breaks = c(0,90,180,270,360), limits = c(0,360)) +
coord_polar() +
theme_bw(base_size = 14) +
theme(legend.position = "none") +
labs(title = "Precipitation seasonality",
caption = "Boston (blue) and San Francisco (black)")
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_state_precipitation.csv")
precip_data <- precip_data %>%
rename(Year = YEAR,
Month = MONTH,
Precip_inches = Value)
precip_data <- precip_data %>%
mutate(Month = as.numeric(Month))
df_monthly_normals <- precip_data %>%
filter(Year >= 1980) %>%
group_by(STATE, Month) %>%
summarize(observation_value = mean(Precip_inches)) %>%
rename(group_name = STATE)
source("https://stahlm.github.io/functions/compute_seasonality_indices.R")
df_seasonality_precip <- compute_seasonality_indices(df_monthly_normals)
df_seasonality_precip <- df_seasonality_precip[[2]]
df_seasonality_precip %>%
ggplot(aes(y = reorder(group_name, SI), x = SI)) +
geom_point(size = 2) +
geom_segment(aes(x = 0, xend = SI, yend = group_name)) +
theme_bw(base_size = 12) +
labs(x = "SI", y = "State")
df_monthly_normals %>%
filter(group_name %in% c("Rhode Island", "California", "Idaho")) %>%
ggplot() +
geom_col(aes(x = factor(Month), y = observation_value)) +
facet_wrap(~ group_name) +
theme_bw() +
labs(x = "Month", y = "Precipitation (inches)")
state_dictionary <- tibble(NAME = state.name, state_cd = state.abb)
df_seasonality_precip <- df_seasonality_precip %>%
rename(NAME = group_name) %>%
left_join(state_dictionary)
sf_states <- spData::us_states
sf_seasonality_precip <- sf_states %>%
right_join(df_seasonality_precip)
sf_seasonality_precip <- sf_seasonality_precip %>%
filter(NAME != "Alaska", NAME != "Hawaii")
tmap_mode("view")
sf_seasonality_precip %>%
tm_shape(bbox = st_bbox(sf_states), projection = 5070) +
tm_polygons(col = "SI", style = "cont", palette = "viridis") +
tm_shape(sf_states) +
tm_borders()
sf_seasonality_precip %>%
tm_shape(bbox = st_bbox(sf_states), projection = 5070) +
tm_polygons(col = "SI", style = "cont", palette = "viridis") +
tm_shape(sf_states) +
tm_borders()
sf_seasonality_precip %>%
tm_shape(bbox = st_bbox(sf_states), projection = 5070) +
tm_polygons(col = "SC", style = "cont", palette = "viridis") +
tm_shape(sf_states) +
tm_borders()
sf_seasonality_precip %>% filter(SI >= 0.1) %>%
tm_shape(bbox = st_bbox(sf_states), projection = 5070) +
tm_polygons(col = "SI", style = "cont", palette = "viridis") +
tm_shape(sf_states) +
tm_borders()
sf_seasonality_precip %>% filter(SI >= 0.1) %>%
tm_shape(bbox = st_bbox(sf_states), projection = 5070) +
tm_polygons(col = "SC", style = "cont", palette = "viridis") +
tm_shape(sf_states) +
tm_borders()
library(tidyverse)
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_state_precipitation.csv")
precip_data <- precip_data %>%
rename(Year = YEAR,
Month = MONTH,
Precip_inches = Value
)
precip_data <- precip_data %>%
mutate(Month = as.numeric(Month))
df_monthly_normals <- precip_data %>%
filter(Year >= 1980) %>%
group_by(STATE, Month) %>%
summarise(observation_value = mean(Precip_inches)) %>%
rename(group_name = STATE)
source("https://stahlm.github.io/functions/compute_seasonality_indices.R")
df_seasonality_precip <- compute_seasonality_indices(df_monthly_normals)
df_seasonality_precip <- df_seasonality_precip[[2]]
df_seasonality_precip
df_seasonality_precip %>%
ggplot(aes(y = reorder(group_name, SI), x = SI)) +
geom_point(size = 2) +
geom_segment(aes(x = 0, xend = SI, yend = group_name)) +
theme_bw(base_size = 12)
df_monthly_normals %>%
filter(group_name %in% c("Rhode Island", "California", "Idaho")) %>%
ggplot() +
geom_col(aes(x = factor(Month), y = observation_value))
df_monthly_normals %>%
filter(group_name %in% c("Rhode Island", "California", "Idaho")) %>%
ggplot() +
geom_col(aes(x = factor(Month), y = observation_value)) +
facet_wrap(~group_name) +
theme_bw()
View(df_seasonality_precip)
state_dictionary <- tibble(NAME = state.name, state_cd = state.abb)
state_dictionary <- tibble(NAME = state.name, state_cd = state.abb)
View(state_dictionary)
df_seasonality_precip <- df_seasonality_precip %>%
rename(NAME = group_name) %>%
left_join(state_dictionary)
library(sf)
library(tmap)
sf_states <- spData::us_states
View(sf_states)
sf_seasonality_precip <- sf_states %>%
right_join(df_seasonality_precip)
View(sf_seasonality_precip)
sf_seasonality_precip <- sf_seasonality_precip %>%
filter(NAME != "Alaska", NAME != "Hawaii")
tmap_mode("view")
sf_seasonality_precip %>%
tm_shape() +
tm_polygons(col = "SI") +
tm_shape(sf_states) +
tm_borders()
sf_seasonality_precip %>%
tm_shape() +
tm_polygons(col = "SI") +
tm_shape(sf_states) +
tm_borders()
sf_seasonality_precip %>%
tm_shape() +
tm_polygons(col = "SI", palette = "viridis") +
tm_shape(sf_states) +
tm_borders()
sf_seasonality_precip %>%
tm_shape() +
tm_polygons(col = "SI", palette = "viridis") +
tm_shape(sf_states) +
tm_borders()
sf_seasonality_precip %>%
tm_shape() +
tm_polygons(col = "SI", palette = "viridis",
style = "cont") +
tm_shape(sf_states) +
tm_borders()
sf_seasonality_precip %>%
tm_shape() +
tm_polygons(col = "SI", palette = "viridis",
style = "cont") +
tm_shape(sf_states) +
tm_borders()
sf_seasonality_precip %>%
tm_shape() +
tm_polygons(col = "SC", palette = "viridis",
style = "cont") +
tm_shape(sf_states) +
tm_borders()
sf_seasonality_precip %>%
filter(SI >= 0.1) %>%
tm_shape() +
tm_polygons(col = "SC", palette = "viridis",
style = "cont") +
tm_shape(sf_states) +
tm_borders()
df_stream_data <-  read_csv("https://stahlm.github.io/ENS_215/Data/USGS_01354500_flow.csv")
View(df_stream_data)
df_stream_data <- df_stream_data %>%
mutate(Year = year(Date),
Month = month(Date),
Day = day(Date)
)
df_stream_monthly_normals <-  df_stream_data %>%
filter(Year >= 2014 & Year <= 2024) %>%
group_by(Month, site_no) %>%
summarize(observation_value = mean(Flow, na.rm = T)) %>%
rename(group_name = site_no)
View(df_stream_monthly_normals)
df_stream_monthly_normals %>%
ggplot(aes(x = Month, y = observation_value)) +
geom_col() +
scale_x_continuous(breaks = 1:12) +
theme_classic()
df_seasonality_flow <- compute_seasonality_indices(df_stream_monthly_normals)
df_seasonality_flow <- df_seasonality_flow[[2]]
df_seasonality_flow
met_df <- read_csv("https://stahlm.github.io/ENS_215/Data/gsod_alb.csv")
View(met_df)
library(tidyverse)
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_state_precipitation.csv")
precip_data <- precip_data %>%
rename(Year = YEAR,
Month = MONTH,
Precip_inches = Value
)
precip_data <- precip_data %>%
mutate(Month = as.numeric(Month))
df_monthly_normals <- precip_data %>%
filter(Year >= 1980) %>%
group_by(STATE, Month) %>%
summarise(observation_value = mean(Precip_inches)) %>%
rename(group_name = STATE)
source("https://stahlm.github.io/functions/compute_seasonality_indices.R")
df_seasonality_precip <- compute_seasonality_indices(df_monthly_normals)
df_seasonality_precip <- df_seasonality_precip[[2]]
df_seasonality_precip
df_seasonality_precip %>%
ggplot(aes(y = reorder(group_name, SI), x = SI)) +
geom_point(size = 2) +
geom_segment(aes(x = 0, xend = SI, yend = group_name)) +
theme_bw(base_size = 12)
df_monthly_normals %>%
filter(group_name %in% c("Rhode Island", "California", "Idaho")) %>%
ggplot() +
geom_col(aes(x = factor(Month), y = observation_value)) +
facet_wrap(~group_name) +
theme_bw()
state_dictionary <- tibble(NAME = state.name, state_cd = state.abb)
df_seasonality_precip <- df_seasonality_precip %>%
rename(NAME = group_name) %>%
left_join(state_dictionary)
library(sf)
library(tmap)
sf_states <- spData::us_states
sf_seasonality_precip <- sf_states %>%
right_join(df_seasonality_precip)
sf_seasonality_precip <- sf_seasonality_precip %>%
filter(NAME != "Alaska", NAME != "Hawaii")
tmap_mode("view")
sf_seasonality_precip %>%
tm_shape() +
tm_polygons(col = "SI", palette = "viridis",
style = "cont") +
tm_shape(sf_states) +
tm_borders()
df_stream_monthly_normals %>%
ggplot(aes(x = Month, y = observation_value)) +
geom_col() +
scale_x_continuous(breaks = 1:12) +
theme_classic()
library(tidyverse)
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_state_precipitation.csv")
precip_data <- precip_data %>%
rename(Year = YEAR,
Month = MONTH,
Precip_inches = Value
)
precip_data <- precip_data %>%
mutate(Month = as.numeric(Month))
df_monthly_normals <- precip_data %>%
filter(Year >= 1980) %>%
group_by(STATE, Month) %>%
summarise(observation_value = mean(Precip_inches)) %>%
rename(group_name = STATE)
source("https://stahlm.github.io/functions/compute_seasonality_indices.R")
df_seasonality_precip <- compute_seasonality_indices(df_monthly_normals)
df_seasonality_precip <- df_seasonality_precip[[2]]
df_seasonality_precip
df_seasonality_precip %>%
ggplot(aes(y = reorder(group_name, SI), x = SI)) +
geom_point(size = 2) +
geom_segment(aes(x = 0, xend = SI, yend = group_name)) +
theme_bw(base_size = 12)
df_monthly_normals %>%
filter(group_name %in% c("Rhode Island", "California", "Idaho")) %>%
ggplot() +
geom_col(aes(x = factor(Month), y = observation_value)) +
facet_wrap(~group_name) +
theme_bw()
state_dictionary <- tibble(NAME = state.name, state_cd = state.abb)
df_seasonality_precip <- df_seasonality_precip %>%
rename(NAME = group_name) %>%
left_join(state_dictionary)
library(sf)
library(tmap)
sf_states <- spData::us_states
sf_seasonality_precip <- sf_states %>%
right_join(df_seasonality_precip)
sf_seasonality_precip <- sf_seasonality_precip %>%
filter(NAME != "Alaska", NAME != "Hawaii")
tmap_mode("view")
sf_seasonality_precip %>%
tm_shape() +
tm_polygons(col = "SI", palette = "viridis",
style = "cont") +
tm_shape(sf_states) +
tm_borders()
df_stream_monthly_normals %>%
ggplot(aes(x = Month, y = observation_value)) +
geom_col() +
scale_x_continuous(breaks = 1:12) +
theme_classic()
df_stream_monthly_normals <-  df_stream_data %>%
filter(Year >= 2014 & Year <= 2024) %>%
group_by(Month, site_no) %>%
summarize(observation_value = mean(Flow, na.rm = T)) %>%
rename(group_name = site_no)
library(tidyverse)
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_state_precipitation.csv")
precip_data <- precip_data %>%
rename(Year = YEAR,
Month = MONTH,
Precip_inches = Value
)
precip_data <- precip_data %>%
mutate(Month = as.numeric(Month))
df_monthly_normals <- precip_data %>%
filter(Year >= 1980) %>%
group_by(STATE, Month) %>%
summarise(observation_value = mean(Precip_inches)) %>%
rename(group_name = STATE)
source("https://stahlm.github.io/functions/compute_seasonality_indices.R")
df_seasonality_precip <- compute_seasonality_indices(df_monthly_normals)
df_seasonality_precip <- df_seasonality_precip[[2]]
df_seasonality_precip
df_seasonality_precip %>%
ggplot(aes(y = reorder(group_name, SI), x = SI)) +
geom_point(size = 2) +
geom_segment(aes(x = 0, xend = SI, yend = group_name)) +
theme_bw(base_size = 12)
df_monthly_normals %>%
filter(group_name %in% c("Rhode Island", "California", "Idaho")) %>%
ggplot() +
geom_col(aes(x = factor(Month), y = observation_value)) +
facet_wrap(~group_name) +
theme_bw()
state_dictionary <- tibble(NAME = state.name, state_cd = state.abb)
df_seasonality_precip <- df_seasonality_precip %>%
rename(NAME = group_name) %>%
left_join(state_dictionary)
library(sf)
library(tmap)
sf_states <- spData::us_states
sf_seasonality_precip <- sf_states %>%
right_join(df_seasonality_precip)
sf_seasonality_precip <- sf_seasonality_precip %>%
filter(NAME != "Alaska", NAME != "Hawaii")
tmap_mode("view")
sf_seasonality_precip %>%
tm_shape() +
tm_polygons(col = "SI", palette = "viridis",
style = "cont") +
tm_shape(sf_states) +
tm_borders()
df_stream_monthly_normals <-  df_stream_data %>%
filter(Year >= 2014 & Year <= 2024) %>%
group_by(Month, site_no) %>%
summarize(observation_value = mean(Flow, na.rm = T)) %>%
rename(group_name = site_no)
library(tidyverse)
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_state_precipitation.csv")
precip_data <- precip_data %>%
rename(Year = YEAR,
Month = MONTH,
Precip_inches = Value
)
precip_data <- precip_data %>%
mutate(Month = as.numeric(Month))
df_monthly_normals <- precip_data %>%
filter(Year >= 1980) %>%
group_by(STATE, Month) %>%
summarise(observation_value = mean(Precip_inches)) %>%
rename(group_name = STATE)
source("https://stahlm.github.io/functions/compute_seasonality_indices.R")
df_seasonality_precip <- compute_seasonality_indices(df_monthly_normals)
df_seasonality_precip <- df_seasonality_precip[[2]]
df_seasonality_precip
df_seasonality_precip %>%
ggplot(aes(y = reorder(group_name, SI), x = SI)) +
geom_point(size = 2) +
geom_segment(aes(x = 0, xend = SI, yend = group_name)) +
theme_bw(base_size = 12)
df_monthly_normals %>%
filter(group_name %in% c("Rhode Island", "California", "Idaho")) %>%
ggplot() +
geom_col(aes(x = factor(Month), y = observation_value)) +
facet_wrap(~group_name) +
theme_bw()
state_dictionary <- tibble(NAME = state.name, state_cd = state.abb)
df_seasonality_precip <- df_seasonality_precip %>%
rename(NAME = group_name) %>%
left_join(state_dictionary)
library(sf)
library(tmap)
sf_states <- spData::us_states
sf_seasonality_precip <- sf_states %>%
right_join(df_seasonality_precip)
sf_seasonality_precip <- sf_seasonality_precip %>%
filter(NAME != "Alaska", NAME != "Hawaii")
tmap_mode("view")
sf_seasonality_precip %>%
tm_shape() +
tm_polygons(col = "SI", palette = "viridis",
style = "cont") +
tm_shape(sf_states) +
tm_borders()
sf_seasonality_precip %>%
filter(SI >= 0.1) %>%
tm_shape() +
tm_polygons(col = "SC", palette = "viridis",
style = "cont") +
tm_shape(sf_states) +
tm_borders()
df_stream_data <-  read_csv("https://stahlm.github.io/ENS_215/Data/USGS_01354500_flow.csv")
df_stream_data <- df_stream_data %>%
mutate(Year = year(Date),
Month = month(Date),
Day = day(Date)
)
df_stream_monthly_normals <-  df_stream_data %>%
filter(Year >= 2014 & Year <= 2024) %>%
group_by(Month, site_no) %>%
summarize(observation_value = mean(Flow, na.rm = T)) %>%
rename(group_name = site_no)
df_stream_monthly_normals %>%
ggplot(aes(x = Month, y = observation_value)) +
geom_col() +
scale_x_continuous(breaks = 1:12) +
theme_classic()
library(rgeoboundaries)
library(sf)
library(tmap)
sf_borders_0 <- gb_adm0("United States of America") # Level 0 (country border)
sf_borders_0 <- gb_adm0("United States of America") # Level 0 (country border)
View(sf_borders_0)
sf_borders_1 <- gb_adm1("United States of America") # Level 0 (country border)
View(sf_borders_1)
View(sf_borders_1)
library(tigris)
a <- tigris::places(state = "VT")
library(tidyverse)
library(sf)
library(tmap)
tmap_mode("view")
a %>%
tm_shape() +
tm_borders()
a %>%
tm_shape() +
tm_borders()
View(a)
a %>%
tm_shape() +
tm_polygons()
library(tidyverse)
library(tmap)
library(sf)
library(terra)
df_agent_orange <- read_csv("./agent_orange_data.csv")
df_agent_orange <- df_agent_orange %>%
separate(col = Coordinates, into = c("Lat", "Long"), sep = ",")
df_agent_orange <- df_agent_orange %>%
mutate(Lat = as.numeric(Lat),
Long = as.numeric(Long),
Lat_va = Lat,
Long_va = Long,
DATE = mdy(Date),
YEAR = year(DATE),
MONTH = month(DATE),
DAY = day(DATE)
)
df_agent_orange <- df_agent_orange %>%
st_as_sf(coords = c("Long", "Lat"))
tmap_mode("view")
fig_map <- df_agent_orange %>%
tm_shape() +
tm_dots(col = "purple") +
tm_mouse_coordinates() +
tm_basemap(server = c("Esri.WorldImagery", "OpenStreetMap", "Esri.WorldShadedRelief")) +
tm_scale_bar()
fig_map <-  fig_map %>%
tmap_leaflet %>%
leaflet.extras::addFullscreenControl()
fig_map
crsuggest::suggest_crs(df_agent_orange)
df_agent_orange <- st_set_crs(df_agent_orange, "EPSG:4326") # set CRS
df_agent_orange_projected = st_transform(df_agent_orange,
crs = "+proj=tmerc +lat_0=0 +lon_0=111 +k=1 +x_0=19500000 +y_0=0 +ellps=krass +units=m +no_defs")
raster_template = rast(ext(df_agent_orange_projected),
resolution = 20000, # in meters
crs = crs(df_agent_orange_projected))
ch_raster3 = rasterize(df_agent_orange_projected, raster_template,
field = "Gallons", fun = sum, na.rm = TRUE)
ch_raster3 %>%
tm_shape() +
tm_raster(palette = "plasma", style = "quantile") +
tm_mouse_coordinates() +
tm_basemap(server = c("Esri.WorldImagery", "OpenStreetMap", "Esri.WorldShadedRelief")) +
tm_scale_bar()
