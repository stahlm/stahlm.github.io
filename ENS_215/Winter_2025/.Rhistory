library(kableExtra)
life_exp_table <- my_gap %>%
filter(year %in% c(1952,2007)) %>%
group_by(country) %>%
arrange(country, year) %>%
summarize(continent = first(continent), life_1952 = first(lifeExp), life_2007 = last(lifeExp))
head(life_exp_table) %>% kable() %>% kable_styling()
life_exp_table %>%
ggplot(aes(x = life_1952, y = life_2007)) +
geom_point() +
theme_bw()
life_exp_table %>%
ggplot(aes(x = life_1952, y = life_2007)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red") +
theme_bw()
fig_gap <- my_gap %>%
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
theme_bw() # let's save our "base/template" figure to an object so we can easily adapt it while typing less code
fig_gap
fig_gap +
xlim(0, 60000)
fig_gap +
xlim(0, 60000) +
ylim(30,80)
fig_gap +
ylim(60,NA)
fig_gap
fig_gap +
scale_x_log10()
bangladesh_gw <- read_csv("https://stahlm.github.io/ENS_215/Data/NationalSurveyData_DPHE_BGS_LabData.csv")
As_fig <- bangladesh_gw %>%
ggplot(aes(x = As_ugL, y = WELL_DEPTH_m)) +
geom_point() +
theme_bw()
As_fig
As_fig <- As_fig +
scale_y_reverse() # reverse the y-axis and update As_fig
As_fig
As_fig +
coord_flip()
As_fig <- As_fig +
labs(title = "Groundwater arsenic in Bangladesh",
subtitle = "Arsenic vs. depth",
x = "As (ug/L)",
y = "Depth (m)",
caption = "Data source: BGS")
As_fig
library(tidyverse)
df_met <- read_csv("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Data/Albany_GHCND_2840632.csv")
year_vec <- seq(1939, 2021)
year_vec
table_stats <- tibble(year = year_vec,
n_days = NA,
n_events = NA)
threshold_min <- 32
for (i_year in year_vec) {
df_temp <- df_met[df_met$YEAR == i_year, ] # current year's data
i_count <- sum(df_temp$TMIN <= threshold_min)
#print(i_count)
i_days <- nrow(df_temp)
#print(i_days)
table_stats$n_events[table_stats$year == i_year] <- i_count
table_stats$n_days[table_stats$year == i_year] <- i_days
}
table_stats %>%
ggplot(aes(x = year, y = n_events)) +
geom_point() + geom_smooth()
library(tidyverse)
library(gapminder)
gap_data <- gapminder
gap_data %>%
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point()
gap_data %>%
filter(country == "China") %>%
ggplot(aes(x = year, y = pop))
gap_data %>%
filter(country == "China") %>%
ggplot(aes(x = year, y = pop)) +
geom_line()
gap_data %>%
filter(country == "Nigeria") %>%
ggplot(aes(x = year, y = pop)) +
geom_line()
gap_data %>%
filter(country == "Lesotho") %>%
ggplot(aes(x = year, y = pop)) +
geom_line()
gap_data %>%
filter(country == "China") %>%
ggplot(aes(x = year, y = pop)) +
geom_line()
gap_data %>%
filter(country == "China") %>%
ggplot(aes(x = year, y = pop)) +
geom_line() +
geom_point()
gap_data %>%
filter(year == 2007) %>%
ggplot(aes(x = continent)) +
geom_bar()
library(tidyverse)
library(gapminder)
gap_data <- gapminder
gap_data %>%
filter(country == "China") %>%
ggplot(aes(x = year, y = pop)) +
geom_line()
gap_data %>%
filter(country == "China") %>%
ggplot(aes(x = year, y = pop)) +
geom_line() +
geom_point()
library(tidyverse)
library(gapminder)
gap_data <- gapminder
gap_data %>%
filter(country == "China")
ggplot() +
geom_line()
gap_data %>%
filter(country == "China") %>%
ggplot(aes(x = year, y = pop)) +
geom_line()
gap_data %>%
filter(country == "China") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line()
gap_data %>%
filter(country == "China") %>%
ggplot(aes(x = year, y = gdpPercap, color = "blue")) +
geom_line()
gap_data %>%
filter(country == "China") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line(color = "blue")
gap_data %>%
filter(country == "China") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line(color = "blue", linewidth = 2)
gap_data %>%
filter(country == "China") %>%
ggplot(aes(x = year, y = gdpPercap, linewidth = pop)) +
geom_line(color = "blue")
gap_data %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_point()
gap_data %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_point() +
ylim(0,60000)
gap_data %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_point() +
ylim(0,60000)
gap_data %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_jitter() +
ylim(0,60000)
gap_data %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_jitter(width = 0.2) +
ylim(0,60000)
gap_data %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_jitter(width = 0.4) +
ylim(0,60000)
gap_data %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_jitter(width = 0.7) +
ylim(0,60000)
gap_data %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_jitter(width = 0.7, height = 0) +
ylim(0,60000)
gap_data %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_boxplot() +
geom_jitter(width = 0.7, height = 0) +
ylim(0,60000)
gap_data %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_boxplot() +
geom_jitter(width = 0.7, height = 0) +
coord_cartesian(ylim= c(0,60000))
gap_data %>%
ggplot(aes(x = factor(year), y = gdpPercap)) +
geom_boxplot() +
geom_jitter(width = 0.7, height = 0) +
coord_cartesian(ylim= c(0,60000))
knitr::opts_chunk$set(comment=NA, fig.width=5.5, fig.height=4.5)
library(tidyverse)
library(gapminder)
my_gap <- gapminder # assign the gapminder data to our own data object called my_gap
my_gap %>%
ggplot(aes(x = year, y = lifeExp)) +
geom_line()
my_gap %>%
ggplot(aes(x = year, y = lifeExp, color = country)) +
geom_line() +
theme(legend.position = "none") # turning off the legend
my_gap %>%
ggplot(aes(x = year, y = lifeExp, group = country)) +
geom_line()
my_gap %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = continent)) +
geom_line()
my_gap %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = continent)) +
geom_line(alpha = 0.4) +
geom_smooth(aes(group = continent)) +
theme_bw()
my_gap %>%
filter(continent == "Americas", year == 2007) %>%
ggplot(aes(x = lifeExp, y = country)) +
geom_point() +
theme_bw()
my_gap %>%
filter(continent == "Americas", year == 2007) %>%
ggplot(aes(x = lifeExp, y = reorder(country,lifeExp) )) +
geom_point() +
theme_bw()
my_gap %>%
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
theme_bw()
my_gap %>% ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
theme_bw() +
facet_wrap(~ continent)
my_gap %>%
filter(year%in% c(1952, 1972, 1992, 2002)) %>%
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
theme_bw() +
facet_grid(continent ~ year)
global_mean_gdpPercap <- my_gap %>%
group_by(year) %>%
summarize(gdpPercap = mean(gdpPercap))
my_gap %>%
ggplot(aes(x = year, y = gdpPercap, group = country)) +
geom_point(alpha = 0.5) +
geom_line(alpha = 0.5) +
geom_line(data = global_mean_gdpPercap,
aes(x = year, y = gdpPercap, group = NA),
color = "blue",
size = 1) +
geom_point(data = global_mean_gdpPercap,
aes(x = year, y = gdpPercap, group = NA),
color = "blue",
size = 1.5) +
ylim(NA, 50000) +
theme_bw() +
facet_wrap(~ continent)
global_mean_gdpPercap <- my_gap %>%
group_by(year) %>%
summarize(gdpPercap = mean(lifeExp))
my_gap %>%
ggplot(aes(x = year, y = gdpPercap, group = country)) +
geom_point(alpha = 0.5) +
geom_line(alpha = 0.5) +
geom_line(data = global_mean_gdpPercap,
aes(x = year, y = gdpPercap, group = NA),
color = "blue",
size = 1) +
geom_point(data = global_mean_gdpPercap,
aes(x = year, y = gdpPercap, group = NA),
color = "blue",
size = 1.5) +
ylim(NA, 50000) +
theme_bw() +
facet_wrap(~ continent)
global_mean_gdpPercap <- my_gap %>%
group_by(year) %>%
summarize(gdpPercap = mean(lifeExp))
my_gap %>%
ggplot(aes(x = year, y = lifeExp, group = country)) +
geom_point(alpha = 0.5) +
geom_line(alpha = 0.5) +
geom_line(data = global_mean_gdpPercap,
aes(x = year, y = gdpPercap, group = NA),
color = "blue",
size = 1) +
geom_point(data = global_mean_gdpPercap,
aes(x = year, y = gdpPercap, group = NA),
color = "blue",
size = 1.5) +
ylim(NA, 50000) +
theme_bw() +
facet_wrap(~ continent)
global_mean_gdpPercap <- my_gap %>%
group_by(year) %>%
summarize(gdpPercap = mean(lifeExp))
my_gap %>%
ggplot(aes(x = year, y = lifeExp, group = country)) +
geom_point(alpha = 0.5) +
geom_line(alpha = 0.5) +
geom_line(data = global_mean_gdpPercap,
aes(x = year, y = gdpPercap, group = NA),
color = "blue",
size = 1) +
geom_point(data = global_mean_gdpPercap,
aes(x = year, y = gdpPercap, group = NA),
color = "blue",
size = 1.5) +
ylim(NA, 90) +
theme_bw() +
facet_wrap(~ continent)
global_mean_gdpPercap <- my_gap %>%
group_by(year) %>%
summarize(gdpPercap = mean(gdpPercap))
my_gap %>%
ggplot(aes(x = year, y = gdpPercap, group = country)) +
geom_point(alpha = 0.5) +
geom_line(alpha = 0.5) +
geom_line(data = global_mean_gdpPercap,
aes(x = year, y = gdpPercap, group = NA),
color = "blue",
size = 1) +
geom_point(data = global_mean_gdpPercap,
aes(x = year, y = gdpPercap, group = NA),
color = "blue",
size = 1.5) +
ylim(NA, 50000) +
theme_bw() +
facet_wrap(~ continent)
knitr::opts_chunk$set(comment=NA, fig.width=5.5, fig.height=4.5)
library(tidyverse)
library(gapminder)
my_gap <- gapminder # create your own data object with the gapminder data
fig_1 <- my_gap %>%
filter(year == 2007, continent == "Asia") %>%
ggplot(aes(x = reorder(country, gdpPercap), y = gdpPercap)) +
geom_point() +
theme_classic()
fig_1
fig_1 <- fig_1 +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
fig_1
library(scales)
fig_1 +
scale_y_continuous(labels=comma_format())
fig_life <- ggplot(my_gap, aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
theme_classic() +
scale_x_log10()
fig_life
fig_life +
scale_x_log10(labels = trans_format('log10', math_format(10^.x)) )
fig_life +
scale_x_log10(breaks = c(250, 1000, 5000, 25000, 50000, 90000))
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
scale_x_log10(breaks = c(250, 1000, 5000, 25000, 50000, 90000),
labels=comma_format()) +
labs(title = "Life expectancy increases with income",
subtitle = "Life expectancy vs. GDP per capita",
x = "GDP per capita",
y = "Life Expectancy",
caption = "Data source: gapminder") +
theme_classic()
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
scale_x_log10(breaks = c(250, 1000, 5000, 25000, 50000, 90000),
labels=comma_format()) +
labs(title = "Life expectancy increases with income",
subtitle = "Life expectancy vs. GDP per capita",
x = "GDP per capita",
y = "Life Expectancy",
caption = "Data source: gapminder") +
theme_classic() +
theme(plot.title = element_text(color = "blue", size = 14, face = "bold"),
plot.subtitle = element_text(color = "blue", size = 11),
plot.caption = element_text(face = "italic"),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")
)
my_gap %>%
filter(continent == "Americas" , year == 2007) %>%
ggplot(aes(y = reorder(country, gdpPercap), x = gdpPercap, color = lifeExp)) +
geom_point(size = 3) +
scale_color_gradient(low = "red", high = "green") +
theme_classic()
my_gap %>%
filter(continent == "Americas" , year == 2007) %>%
ggplot(aes(y = reorder(country, gdpPercap), x = gdpPercap, color = lifeExp)) +
geom_point(size = 3) +
scale_color_gradient2(low = "red", mid = "green", high = "blue", midpoint = 70)
my_gap %>%
filter(continent == "Americas" , year == 2007) %>%
ggplot(aes(y = reorder(country, gdpPercap), x = gdpPercap, color = lifeExp)) +
geom_point(size = 3) +
scale_color_gradient2(low = "red", mid = "green", high = "blue", midpoint = 70) +
theme_classic()
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_brewer(palette = "Dark2")
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_manual(values = c("red", "blue", "green", "gray", "purple"))
library(paletteer)
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("dutchmasters::pearl_earring")
library(tidyverse)
library(tidyverse)
library(gapminder)
gap_data <- gapminder
gap_data %>%
filter(year == 2007)
gap_data %>%
filter(year == 2007) %>%
arrange(lifeExp)
gap_data %>%
filter(year == 2007) %>%
arrange(lifeExp) %>%
top_n(n = c(2,-2), wt = lifeExp)
gap_data %>%
filter(year == 2007) %>%
arrange(lifeExp) %>%
top_n(n = 2, wt = lifeExp)
top2 <- gap_data %>%
filter(year == 2007) %>%
top_n(n = 2, wt = lifeExp)
library(tidyverse)
library(gapminder)
gap_data <- gapminder
gap_data %>%
ggplot(aes(x = year, y = lifeExp,
color = continent, size = pop)) +
geom_jitter()
gap_data %>%
ggplot(aes(x = year, y = lifeExp,
color = continent, size = pop)) +
geom_jitter(height = 0, width = 0.4)
gap_data %>%
ggplot(aes(x = year, y = lifeExp,
color = continent, size = pop)) +
geom_jitter(height = 0, width = 0.7)
gap_data %>%
ggplot(aes(x = year, y = lifeExp,
fill = continent, size = pop)) +
geom_jitter(height = 0, width = 0.7, shape = 21)
gap_data %>%
filter(year == 2007) %>%
ggplot(aes(x = continent, y = lifeExp)) +
geom_boxplot(fill = "lightblue")
gap_data %>%
filter(year == 2007) %>%
ggplot(aes(x = continent, y = lifeExp)) +
geom_boxplot(fill = "lightblue") +
geom_jitter(alpha = 0.5)
gap_data %>%
filter(year == 2007) %>%
ggplot(aes(x = continent, y = lifeExp)) +
geom_boxplot(fill = "lightblue") +
geom_jitter(alpha = 0.5, width = 0.7, height = 0)
gap_data %>%
filter(year == 2007) %>%
ggplot(aes(x = continent, y = lifeExp)) +
geom_boxplot(fill = "lightblue") +
geom_jitter(alpha = 0.5, width = 0.25, height = 0)
gap_data %>%
filter(year == 2007) %>%
ggplot(aes(x = continent, y = lifeExp)) +
geom_boxplot(fill = "lightblue") +
geom_jitter(alpha = 0.5, width = 0.2, height = 0)
top_2 <- gap_data %>%
filter(year == 2007)
top_2 <- gap_data %>%
filter(year == 2007) %>%
top_n(2, lifeExp)
top_2 <- gap_data %>%
filter(year == 2007) %>%
top_n(2, lifeExp)
top_2
top_2 <- gap_data %>%
filter(year == 2007) %>%
top_n(2, lifeExp)
top_2
bottom_2 <- gap_data %>%
filter(year == 2007) %>%
top_n(-2, lifeExp)
bottom_2
gap_data %>%
filter(country %in% top_2$country | country %in% bottom_2$country)
gap_data %>%
filter(country %in% top_2$country | country %in% bottom_2$country) %>%
ggplot(aes(x = year, y = lifeExp, color = country)) +
geom_point()
gap_data %>%
filter(country %in% top_2$country | country %in% bottom_2$country) %>%
ggplot(aes(x = year, y = lifeExp, color = country)) +
geom_point() +
geom_line()
gap_data %>%
filter(country %in% top_2$country | country %in% bottom_2$country) %>%
ggplot(aes(x = year, y = lifeExp, color = country)) +
geom_point() +
geom_line(color = "black")
gap_data %>%
filter(country %in% top_2$country | country %in% bottom_2$country) %>%
ggplot(aes(x = year, y = lifeExp, color = country)) +
geom_point() +
geom_line()
library(tidyverse)
library(dataRetrieval)
