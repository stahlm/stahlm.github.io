ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, color = year))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~class)
us_makes <- c("chevrolet", "dodge", "ford", "jeep", "lincoln", "mercury", "pontiac")
fuel_data <- mutate(fuel_data, region = if_else(manufacturer %in% us_makes, "US", "Foreign"))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, color = drv)) +
facet_wrap(~class)
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy), color = "plum3") +
geom_point(aes(x = displ, y = cty), color = "skyblue1")
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, shape = region), color = "hotpink1") +
geom_point(aes(x = displ, y = cty, shape = region), color = "skyblue1")
ggplot(data = fuel_data) +
geom_point(aes(x = cyl, y = hwy))
library(tidyverse)
library(gapminder)
library(tidyverse)
library(gapminder)
gap_data <- gapminder
gap_data %>%
filter(year > 1980,
continent %in% c("Asia", "Africa")
)
gap_data %>%
filter(year > 1980,
continent %in% c("Asia", "Africa")
) %>%
arrange(continent, lifeExp)
gap_data %>%
filter(lifeExp > mean(lifeExp))
gap_data %>%
filter(lifeExp > mean(lifeExp), pop > 20*10^6)
gap_data %>%
filter(lifeExp > mean(lifeExp), pop > 20*10^6, year == 2007)
install.packages("Hmisc")
library(Hmisc)
library(Hmisc)
hidingTOC()
library(tidyverse)
library(gapminder)
gap_data <- gapminder
gap_question1 <- gap_data %>%
arrange(continent, lifeExp) %>%
filter(year > 1980,
continent == "Asia" | continent == "Africa")
gap_question1
gap_question1 <- gap_data %>%
arrange(continent, lifeExp) %>%
filter(year > 1980,
continent %in% c("Asia", "Africa"))
gap_question1
df_gap2 <- gap_data %>%
filter(year == 2007,
lifeExp < 60,
gdpPercap > 10000
) %>%
select(-continent)
df_gap2
mean_lifeExp <- mean(gap_data$lifeExp)
mean_lifeExp <- mean(gap_data$lifeExp, na.rm = T)
mean_lifeExp <- mean(gap_data$lifeExp, na.rm = T)
mean_lifeExp
mean_lifeExp <- mean(gap_data$lifeExp, na.rm = T)
mean_lifeExp
df_q3 <- gap_data %>%
filter(lifeExp > mean_lifeExp,
pop > 20*10^6
)
df_q3
#mean_lifeExp <- mean(gap_data$lifeExp, na.rm = T)
#mean_lifeExp
df_q3 <- gap_data %>%
filter(lifeExp > mean(lifeExp),
pop > 20*10^6
)
df_q3
#mean_lifeExp <- mean(gap_data$lifeExp, na.rm = T)
#mean_lifeExp
gap_data %>%
filter(lifeExp > mean(lifeExp),
pop > 20*10^6
)
df_q4 <- gap_data %>%
filter(year == 1977) %>%
select(-continent, -pop, -gdpPercap)
df_q4 <- gap_data %>%
filter(year == 1977) %>%
select(-continent, -pop, -gdpPercap)
df_q4
View(df_q4)
gap_data %>%
filter(year == 1977) %>%
arrange(lifeExp)
gap_data %>%
filter(year == 1977) %>%
arrange(lifeExp) %>%
slice(1)
gap_data %>%
filter(year == 1977, lifeExp == min(lifeExp))
gap_data %>%
filter(year == 1977) %>%
filter(lifeExp == min(lifeExp))
df_q5 <- gap_data %>%
filter(year == 2007, continent == "Europe") %>%
arrange(lifeExp) %>%
select(-pop, -gdpPercap)
df_q5 <- gap_data %>%
filter(year == 2007, continent == "Europe") %>%
arrange(lifeExp) %>%
select(-pop, -gdpPercap)
df_q5
df_q6 <- gap_data %>%
mutate(tot_gdp = pop*gdpPercap) %>%
filter(year == 1952) %>%
arrange(desc(tot_gdp))
df_q6
df_q6 <- gap_data %>%
mutate(tot_gdp = pop*gdpPercap) %>%
filter(year == 2007) %>%
arrange(desc(tot_gdp))
df_q6
df_q6 <- gap_data %>%
mutate(tot_gdp = pop*gdpPercap) %>%
filter(years == 2007) %>%
arrange(desc(tot_gdp))
df_q6 <- gap_data %>%
mutate(tot_gdp = pop*gdpPercap)
df_q6 <- gap_data %>%
mutate(tot_gdp = pop*gdpPercap) %>%
filter(years == 2007)
library(tidyverse)
dams_data <- read_csv("https://stahlm.github.io/ENS_215/Data/Dams_FAO_SelectCols_LabData.csv")
ggplot(data = dams_data, aes(x = Reservoir_area_km2,
y = Reservoir_capacity_million_m3)) +
geom_point(alpha = 1, shape = 21,
fill = "black", col = "red") +
scale_x_log10() +
scale_y_log10()
table_summary <- dams_data %>%
group_by(Continent) %>%
summarize(avg_height = mean(Dam_height_m, na.rm = T),
avg_area = mean(Reservoir_area_km2, na.rm = T),
avg_storage = mean(Reservoir_capacity_million_m3, na.rm = T)
)
table_summary
dams_data %>%
ggplot(aes(x = Continent,
y = Reservoir_capacity_million_m3,
fill = Continent)) +
geom_boxplot() +
scale_y_log10()
table_year_built <- dams_data %>%
group_by(Year_completed) %>%
summarise(num_dams = n())
table_year_built
table_year_built %>%
ggplot(aes(x = Year_completed, y = num_dams)) +
geom_point() +
ylim(0,250)
table_year_built %>%
ggplot(aes(x = Year_completed, y = num_dams)) +
geom_point() +
ylim(0,250)
dams_canada <- dams_data %>%
filter(Country == "Canada")
dams_canada <- dams_data %>%
filter(Country == "Canada") %>%
arrange(Year_completed)
View(dams_canada)
dams_canada <- dams_data %>%
filter(Country == "Canada") %>%
arrange(Hydroelectricity, Year_completed)
View(dams_canada)
dams_canada %>%
ggplot(aes(x = Longitude, y = Latitude))  +
geom_point()
dams_canada %>%
ggplot(aes(x = Longitude, y = Latitude, fill = Hydroelectricity))  +
geom_point(shape = 21)
dams_canada %>%
mutate(Hydroelectricity = factor(Hydroelectricity)) %>%
ggplot(aes(x = Longitude, y = Latitude, fill = Hydroelectricity))  +
geom_point(shape = 21)
library(sf)
library(tmap)
library(leaflet)
leaflet(data = dams_canada) %>%
addTiles()
leaflet(data = dams_canada) %>%
addTiles() %>%
addMarkers(lng = ~Longitude, lat = ~Latitude)
nation_borders <- st_read("../../Data/FN_borders/Premiere_Nation_First_Nation.shp")
library(tidyverse)
dams_data <- read_csv("https://stahlm.github.io/ENS_215/Data/Dams_FAO_SelectCols_LabData.csv")
ggplot(data = dams_data, aes(x = Reservoir_area_km2,
y = Reservoir_capacity_million_m3)) +
geom_point(alpha = 1, shape = 21,
fill = "black", col = "red") +
scale_x_log10() +
scale_y_log10()
table_summary <- dams_data %>%
group_by(Continent) %>%
summarize(avg_height = mean(Dam_height_m, na.rm = T),
avg_area = mean(Reservoir_area_km2, na.rm = T),
avg_storage = mean(Reservoir_capacity_million_m3, na.rm = T)
)
table_summary
dams_data %>%
ggplot(aes(x = Continent,
y = Reservoir_capacity_million_m3,
fill = Continent)) +
geom_boxplot() +
scale_y_log10()
table_year_built <- dams_data %>%
group_by(Year_completed) %>%
summarise(num_dams = n())
table_year_built
table_year_built %>%
ggplot(aes(x = Year_completed, y = num_dams)) +
geom_point() +
ylim(0,250)
dams_canada <- dams_data %>%
filter(Country == "Canada") %>%
arrange(Hydroelectricity, Year_completed)
dams_canada %>%
mutate(Hydroelectricity = factor(Hydroelectricity)) %>%
ggplot(aes(x = Longitude, y = Latitude, fill = Hydroelectricity))  +
geom_point(shape = 21)
dams_data %>%
group_by(Year_completed) %>%
summarize(n_dam = n())
dams_data %>%
group_by(Year_completed, Continent) %>%
summarize(n_dam = n())
dams_data %>%
group_by(Year_completed, Continent) %>%
summarize(n_dam = n(), tot_capacity = sum(Reservoir_capacity_million_m3, na.rm = T))
table_summary_dams <- dams_data %>%
group_by(Year_completed, Continent) %>%
summarize(n_dam = n(), tot_capacity = sum(Reservoir_capacity_million_m3, na.rm = T))
table_summary_dams %>%
ggplot(aes(x= Year_completed, y = n_dam, fill = tot_capacity)) +
geom_point(shape = 21)
table_summary_dams %>%
ggplot(aes(x= Year_completed, y = n_dam, fill = tot_capacity)) +
geom_point(shape = 21) +
facet_wrap(~Continent)
table_summary_dams %>%
filter(!is.na(Year_completed)) %>%
ggplot(aes(x= Year_completed, y = n_dam, fill = tot_capacity)) +
geom_point(shape = 21) +
facet_wrap(~Continent)
table_summary_dams %>%
filter(!is.na(Year_completed), Year_completed >= 1400) %>%
ggplot(aes(x= Year_completed, y = n_dam, fill = tot_capacity)) +
geom_point(shape = 21) +
facet_wrap(~Continent)
table_summary_dams %>%
filter(!is.na(Year_completed), Year_completed >= 1750) %>%
ggplot(aes(x= Year_completed, y = n_dam, fill = tot_capacity)) +
geom_point(shape = 21) +
facet_wrap(~Continent)
table_summary_dams %>%
filter(!is.na(Year_completed), Year_completed >= 1750) %>%
ggplot(aes(x= Year_completed, y = n_dam, fill = tot_capacity)) +
geom_point(shape = 21) +
facet_wrap(~Continent, scales = "free_y")
table_summary_dams %>%
filter(!is.na(Year_completed), Year_completed >= 1750) %>%
ggplot(aes(x= Year_completed, y = n_dam, fill = tot_capacity)) +
geom_point(shape = 21) +
facet_wrap(~Continent)
table_summary_dams %>%
filter(!is.na(Year_completed), Year_completed >= 1750) %>%
ggplot(aes(x= Year_completed, y = n_dam, fill = log(tot_capacity))) +
geom_point(shape = 21) +
facet_wrap(~Continent)
table_summary_dams %>%
filter(!is.na(Year_completed), Year_completed >= 1750) %>%
ggplot(aes(x= Year_completed, y = n_dam, fill = log(tot_capacity))) +
geom_point(shape = 21) +
scale_fill_viridis_c() +
facet_wrap(~Continent)
library(tidyverse)
library(readr) # we'll use this package later in the lecture to load in files from our class website
library(gapminder)
my_gap <- gapminder
my_gap_2007 <- filter(my_gap, year == 2007)
summarize(my_gap_2007,
avg_life = mean(lifeExp),
avg_gdp_per_cap = mean(gdpPercap) )
# Your code here
my_gap_2007 <- group_by(my_gap_2007, continent) # group the data by continent
summarize(my_gap_2007,
min_life = min(lifeExp),
mean_life = mean(lifeExp),
max_life = max(lifeExp))
my_gap <- group_by(my_gap, continent, year) # group by continent then year
summarize(my_gap,
min_life = min(lifeExp),
mean_life = mean(lifeExp),
max_life = max(lifeExp))
my_gap <- ungroup(my_gap) # ungroup the my_gap data
my_gap %>%
group_by(year) %>%
top_n(3, gdpPercap)
my_gap %>%
group_by(year) %>%
top_n(3, gdpPercap) %>%
arrange(year)
# Your code here
# Your code here
# Your code here
my_gap <- mutate(my_gap, tot_gdp = pop*gdpPercap) # add a total gdp variable
gap_summary_table <- my_gap %>%
group_by(country) %>%
summarize(continent = first(continent),
gdp_percap_ratio = (last(gdpPercap))/first(gdpPercap),
gdp_ratio = (last(tot_gdp))/first(tot_gdp),
life_exp_change = last(lifeExp) - first(lifeExp) ) %>%
arrange(desc(life_exp_change))
my_gap <- mutate(my_gap, tot_gdp = pop*gdpPercap) # add a total gdp variable
gap_summary_table <- my_gap %>%
group_by(country) %>%
summarize(continent = first(continent),
gdp_percap_ratio = (last(gdpPercap))/first(gdpPercap),
gdp_ratio = (last(tot_gdp))/first(tot_gdp),
life_exp_change = last(lifeExp) - first(lifeExp) ) %>%
arrange(desc(life_exp_change))
gap_summary_table <- my_gap %>%
group_by(country) %>%
summarize(continent = first(continent),
gdp_percap_ratio = (last(gdpPercap))/first(gdpPercap),
gdp_ratio = (last(tot_gdp))/first(tot_gdp),
life_exp_change = last(lifeExp) - first(lifeExp) ) %>%
arrange(desc(life_exp_change))
View(gap_summary_table)
library(tidyverse)
bangladesh_gw <- read_csv("https://stahlm.github.io/ENS_215/Data/NationalSurveyData_DPHE_BGS_LabData.csv")
risk_table_1 <- bangladesh_gw %>%
group_by(DIVISION) %>%
summarize(num_wells = n(),
low_As = mean(As_cat == "low As")*100,
med_As = mean(As_cat == "med As")*100,
high_As = mean(As_cat == "high As")*100, ) %>%
arrange(desc(high_As))
low_As <- 10 # low arsenic threshold (ug/L)
med_As <- 50 # low arsenic threshold (ug/L)
bangladesh_gw <- bangladesh_gw %>%
mutate(As_cat = case_when(As_ugL <= low_As ~ "low As",
(As_ugL > low_As) & (As_ugL <= med_As) ~ "med As",
As_ugL > med_As ~ "high As"))
bangladesh_gw <- mutate(bangladesh_gw, As_cat = factor(As_cat,ordered = TRUE, levels = c("low As","med As","high As" )) )
risk_table_1 <- bangladesh_gw %>%
group_by(DIVISION) %>%
summarize(num_wells = n(),
low_As = mean(As_cat == "low As")*100,
med_As = mean(As_cat == "med As")*100,
high_As = mean(As_cat == "high As")*100, ) %>%
arrange(desc(high_As))
View(risk_table_1)
risk_table_2 <- bangladesh_gw %>%
group_by(depth_cat) %>%
summarize(num_wells = n(),
low_As = mean(As_cat == "low As")*100,
med_As = mean(As_cat == "med As")*100,
high_As = mean(As_cat == "high As")*100, ) %>%
arrange(desc(high_As))
risk_table_1 <- bangladesh_gw %>%
group_by(DIVISION) %>%
summarize(num_wells = n(),
low_As = mean(As_cat == "low As")*100,
med_As = mean(As_cat == "med As")*100,
high_As = mean(As_cat == "high As")*100, ) %>%
arrange(desc(high_As))
risk_table_1 <- bangladesh_gw %>%
group_by(DIVISION) %>%
summarize(num_wells = n(),
low_As = mean(As_cat == "low As")*100,
med_As = mean(As_cat == "med As")*100,
high_As = mean(As_cat == "high As")*100) %>%
arrange(desc(high_As))
risk_table_2 <- bangladesh_gw %>%
group_by(depth_cat) %>%
summarize(num_wells = n(), "low_As" = mean(As_cat == "low As")*100, "med_As" = mean(As_cat == "med As")*100,  "high_As" = mean(As_cat == "high As")*100, ) %>%
arrange(desc(high_As))
# add a column with depth categories
shallow <- 50 # threshold for shallow wells (meters)
intermed <- 100 # threshold for intermed wells (meters)
# create categorical variable for well depths
bangladesh_gw <- bangladesh_gw %>%
mutate(depth_cat = case_when(WELL_DEPTH_m <= shallow ~"shallow",
WELL_DEPTH_m > shallow & WELL_DEPTH_m <= intermed ~ "intermed",
WELL_DEPTH_m > intermed ~ "deep"))
# reorder factors
bangladesh_gw <- mutate(bangladesh_gw, depth_cat = factor(depth_cat,ordered = TRUE, levels = c("shallow","intermed","deep" )) )
# add a column with depth categories
shallow <- 50 # threshold for shallow wells (meters)
intermed <- 100 # threshold for intermed wells (meters)
# create categorical variable for well depths
bangladesh_gw <- bangladesh_gw %>%
mutate(depth_cat = case_when(WELL_DEPTH_m <= shallow ~"shallow",
WELL_DEPTH_m > shallow & WELL_DEPTH_m <= intermed ~ "intermed",
WELL_DEPTH_m > intermed ~ "deep"))
# reorder factors
bangladesh_gw <- mutate(bangladesh_gw,
depth_cat = factor(depth_cat,ordered = TRUE,
levels = c("shallow","intermed","deep" )) )
risk_table_2 <- bangladesh_gw %>%
group_by(depth_cat) %>%
summarize(num_wells = n(),
low_As = mean(As_cat == "low As")*100,
med_As = mean(As_cat == "med As")*100,
high_As = mean(As_cat == "high As")*100) %>%
arrange(desc(high_As))
library(tidyverse)
bangladesh_gw <- read_csv("https://stahlm.github.io/ENS_215/Data/NationalSurveyData_DPHE_BGS_LabData.csv")
# add a column with depth categories
shallow <- 50 # threshold for shallow wells (meters)
intermed <- 100 # threshold for intermed wells (meters)
# create categorical variable for well depths
bangladesh_gw <- bangladesh_gw %>%
mutate(depth_cat = case_when(WELL_DEPTH_m <= shallow ~"shallow",
WELL_DEPTH_m > shallow & WELL_DEPTH_m <= intermed ~ "intermed",
WELL_DEPTH_m > intermed ~ "deep"))
# reorder factors
bangladesh_gw <- mutate(bangladesh_gw,
depth_cat = factor(depth_cat,ordered = TRUE,
levels = c("shallow","intermed","deep" )) )
low_As <- 10 # low arsenic threshold (ug/L)
med_As <- 50 # low arsenic threshold (ug/L)
bangladesh_gw <- bangladesh_gw %>%
mutate(As_cat = case_when(As_ugL <= low_As ~ "low As",
(As_ugL > low_As) & (As_ugL <= med_As) ~ "med As",
As_ugL > med_As ~ "high As"))
bangladesh_gw <- mutate(bangladesh_gw,
As_cat = factor(As_cat,ordered = TRUE,
levels = c("low As","med As","high As" )) )
summary_table_1 <- bangladesh_gw %>%
summarise_at(vars(WELL_DEPTH_m, YEAR_CONSTRUCTION, As_ugL, Fe_mgL, Mn_mgL, SO4_mgL),
funs(mean, median),
na.rm = TRUE)
summary_table_1 <- bangladesh_gw %>%
summarise_at(vars(WELL_DEPTH_m, YEAR_CONSTRUCTION, As_ugL, Fe_mgL, Mn_mgL, SO4_mgL),
list(mean, median),
na.rm = TRUE)
View(summary_table_1)
summary_table_1 <- bangladesh_gw %>%
summarise_at(vars(WELL_DEPTH_m, YEAR_CONSTRUCTION, As_ugL, Fe_mgL, Mn_mgL, SO4_mgL),
funs(mean, median),
na.rm = TRUE)
summary_table_1 <- bangladesh_gw %>%
summarise_at(vars(WELL_DEPTH_m, YEAR_CONSTRUCTION, As_ugL, Fe_mgL, Mn_mgL, SO4_mgL),
lst(mean, median),
na.rm = TRUE)
View(summary_table_1)
summary_table_2 <- bangladesh_gw %>%
group_by(DIVISION) %>%
summarise_at(vars(WELL_DEPTH_m, YEAR_CONSTRUCTION, As_ugL, Fe_mgL, Mn_mgL, SO4_mgL),
lst(mean, median),
na.rm = TRUE) %>%
arrange(desc(As_ugL_mean))
View(summary_table_2)
risk_table_1 <- bangladesh_gw %>%
group_by(DIVISION) %>%
summarize(num_wells = n(),
low_As = mean(As_cat == "low As")*100,
med_As = mean(As_cat == "med As")*100,
high_As = mean(As_cat == "high As")*100) %>%
arrange(desc(high_As))
risk_table_2 <- bangladesh_gw %>%
group_by(depth_cat) %>%
summarize(num_wells = n(),
low_As = mean(As_cat == "low As")*100,
med_As = mean(As_cat == "med As")*100,
high_As = mean(As_cat == "high As")*100) %>%
arrange(desc(high_As))
# As vs. depth
bangladesh_gw %>%
ggplot() +
geom_point(aes(x = As_ugL, y = WELL_DEPTH_m), alpha = 0.25) +
scale_y_reverse()
# As vs. depth
bangladesh_gw %>%
ggplot() + geom_point(aes(x = As_ugL, y = WELL_DEPTH_m), alpha = 0.25) +
scale_y_reverse() +
facet_wrap(~DIVISION)
# Fe vs. depth
bangladesh_gw %>%
ggplot() +
geom_point(aes(x = Fe_mgL, y = WELL_DEPTH_m), alpha = 0.25) +
scale_y_reverse()
# Mn vs. depth
bangladesh_gw %>%
ggplot() +
geom_point(aes(x = Mn_mgL, y = WELL_DEPTH_m), alpha = 0.25) +
scale_y_reverse()
# SO4 vs. depth
bangladesh_gw %>%
ggplot() +
geom_point(aes(x = SO4_mgL, y = WELL_DEPTH_m), alpha = 0.25) +
scale_y_reverse()
bangladesh_gw %>%
ggplot(aes(x = Fe_mgL, y = As_ugL)) +
geom_point()
bangladesh_gw %>%
ggplot(aes(x = SO4_mgL, y = As_ugL)) +
geom_point()
