filter(Month == 1) %>%
mutate(Month = Month*0,
value_x_cumul = value_x_cumul*0,
value_y_cumul = value_y_cumul*0
)
df_end <- monthly_met_bos_sfo %>%
bind_rows(month_zero) %>%
filter(Month %in% c(0,12)) %>%
mutate(group_name = if_else(group_name == "724940-23234", "San Francisco", "Boston")) %>%
arrange(loc_name, Month)
monthly_met_bos_sfo %>%
bind_rows(month_zero) %>%
mutate(group_name = if_else(group_name == "724940-23234", "San Francisco", "Boston")) %>%
arrange(loc_name, Month) %>%
ggplot(aes(y = value_x_cumul, x = value_y_cumul, color = group_name)) +
geom_path(arrow = arrow(length = unit(0.04, "npc")), size = 0.75) +
#geom_text(aes(label = Month)) +
geom_path(data = df_end,  arrow = arrow(length = unit(0.04, "npc")), size = 1, color = "red") +
#geom_point() +
scale_color_manual(values = c("black", "blue")) +
#ylim(-350,350) +
#xlim(-350,350) +
scale_x_continuous(breaks = c(-200,0,200), limits = c(-350,350), labels = c(200,0,200)) +
scale_y_continuous(breaks = c(-200,0,200), limits = c(-350,350), labels = c(200,0,200)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") +
coord_equal() +
theme_bw(base_size = 14) +
theme(legend.position = "none") +
labs(x = "Precip (mm)", y = "Precip (mm)") +
facet_wrap(~ group_name)
df_seasonality_bos_sfo %>%
mutate(group_name = if_else(group_name == "724940-23234", "San Francisco", "Boston")) %>%
mutate(a_vec_length = (value_tot_x^2 + value_tot_y^2)^0.5) %>%
pivot_longer(cols = c(value_tot, a_vec_length), names_to = "precip_meas", values_to = "precip_val") %>%
ggplot(aes(x = group_name, y = precip_val, fill = precip_meas)) +
scale_fill_manual(values = c("red", "darkgrey")) +
geom_col(position = position_dodge()) +
theme_bw(base_size = 14) +
theme(legend.position = "none") +
labs(y = "Precipitation magnitude (mm)", x = "")
df_seasonality_bos_sfo %>%
mutate(group_name = if_else(group_name == "724940-23234", "San Francisco", "Boston")) %>%
rename(Location = group_name) %>%
select(Location, SI, SC) %>%
mutate(SI = round(SI, 2),
SC = round(SC,0)
) %>%
kableExtra::kable() %>%
kableExtra::  kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
df_seasonality_bos_sfo %>%
ggplot(aes(x = SC, y = SI, color = group_name)) +
geom_segment(aes(y = 0, xend = SC, yend = SI),
size = 2, arrow = arrow(length = unit(0.03, "npc")) ) +
scale_color_manual(values = c("Black","Blue")) +
scale_x_continuous(breaks = c(0,90,180,270,360), limits = c(0,360)) +
coord_polar() +
theme_bw(base_size = 14) +
theme(legend.position = "none") +
labs(title = "Precipitation seasonality",
caption = "Boston (blue) and San Francisco (black)")
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_state_precipitation.csv")
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_state_precipitation.csv")
precip_data <- precip_data %>%
rename(Year = YEAR,
Month = MONTH,
Precip_inches = Value)
df_monthly_normals <- precip_data %>%
filter(Year >= 1980) %>%
group_by(state_cd, Month) %>%
summarize(observation_value = mean(Precip_inches)) %>%
rename(group_name = state_cd)
df_monthly_normals <- precip_data %>%
filter(Year >= 1980) %>%
group_by(STATE, Month) %>%
summarize(observation_value = mean(Precip_inches)) %>%
rename(group_name = STATE)
source("https://stahlm.github.io/functions/compute_seasonality_indices.R")
df_seasonality_precip <- compute_seasonality_indices(df_monthly_normals)
View(df_monthly_normals)
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_state_precipitation.csv")
precip_data <- precip_data %>%
rename(Year = YEAR,
Month = as.numeric(MONTH),
Precip_inches = Value)
precip_data <- precip_data %>%
mutate(Month = as.numeric(Month))
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_state_precipitation.csv")
precip_data <- precip_data %>%
rename(Year = YEAR,
Month = MONTH,
Precip_inches = Value)
precip_data <- precip_data %>%
mutate(Month = as.numeric(Month))
df_monthly_normals <- precip_data %>%
filter(Year >= 1980) %>%
group_by(STATE, Month) %>%
summarize(observation_value = mean(Precip_inches)) %>%
rename(group_name = STATE)
df_seasonality_precip <- compute_seasonality_indices(df_monthly_normals)
df_seasonality_precip <- df_seasonality_precip[[2]]
df_seasonality_precip %>%
ggplot(aes(y = reorder(group_name, SI), x = SI)) +
geom_point(size = 2) +
geom_segment(aes(x = 0, xend = SI, yend = group_name)) +
theme_bw(base_size = 12) +
labs(x = "SI", y = "State")
df_monthly_normals %>%
filter(group_name %in% c("Rhode Island", "California", "Idaho")) %>%
ggplot() +
geom_col(aes(x = factor(Month), y = observation_value)) +
facet_wrap(~ group_name) +
theme_bw() +
labs(x = "Month", y = "Precipitation (inches)")
state_dictionary <- tibble(NAME = state.name, state_cd = state.abb)
df_seasonality_precip <- df_seasonality_precip %>%
rename(state_cd = group_name) %>%
left_join(state_dictionary)
library(sf)
library(tmap)
sf_states <- spData::us_states
sf_seasonality_precip <- sf_states %>%
right_join(df_seasonality_precip)
sf_seasonality_precip %>%
tm_shape(bbox = st_bbox(sf_states), projection = 5070) +
tm_polygons(col = "SI", style = "cont", palette = "viridis")+
tm_shape(sf_states) +
tm_borders()
sf_seasonality_precip %>%
tm_shape(bbox = st_bbox(sf_states), projection = 5070) +
tm_polygons(col = "SI", style = "cont", palette = "viridis")
sf_seasonality_precip %>%
tm_shape(bbox = st_bbox(sf_states)) +
tm_polygons(col = "SI", style = "cont", palette = "viridis")+
tm_shape(sf_states) +
tm_borders()
View(sf_seasonality_precip)
library(tidyverse)
library(GSODR)
library(tmap)
library(sf)
source("https://stahlm.github.io/functions/compute_seasonality_indices.R")
met_sfo <- read_csv("https://stahlm.github.io/ENS_215/Data/met_sfo.csv")
library(tidyverse)
library(GSODR)
library(tmap)
library(sf)
source("https://stahlm.github.io/functions/compute_seasonality_indices.R")
met_sfo <- read_csv("https://stahlm.github.io/ENS_215/Data/met_sfo.csv")
library(tidyverse)
library(GSODR)
library(tmap)
library(sf)
source("https://stahlm.github.io/functions/compute_seasonality_indices.R")
met_sfo <- read_csv("https://stahlm.github.io/ENS_215/Data/gsod_sfo.csv")
met_bos <- read_csv("https://stahlm.github.io/ENS_215/Data/gsod_bos.csv")
#met_sfo <- get_GSOD(years = 2011:2024, station = "724940-23234")
#met_bos <- get_GSOD(years = 2011:2024, station = "725090-14739")
monthly_met_sfo <- met_sfo %>%
group_by(YEAR, MONTH, STNID) %>%
summarize(observation_value = sum(PRCP, na.rm = T)) %>%
ungroup() %>%
group_by(MONTH, STNID) %>%
summarise(observation_value = mean(observation_value)) %>%
rename(group_name = STNID, Month = MONTH)
monthly_met_bos <- met_bos %>%
group_by(YEAR, MONTH, STNID) %>%
summarize(observation_value = sum(PRCP, na.rm = T)) %>%
ungroup() %>%
group_by(MONTH, STNID) %>%
summarise(observation_value = mean(observation_value)) %>%
rename(group_name = STNID, Month = MONTH)
monthly_met_bos_sfo <- monthly_met_bos %>%
bind_rows(monthly_met_sfo) %>%
mutate(loc_name = if_else(group_name == "725090-14739", "Boston", "San Francisco"))
monthly_met_bos_sfo %>%
ggplot(aes(x = factor(Month), y = observation_value )) +
geom_col() +
facet_wrap(~ loc_name) +
labs(x = "Month", y = "Precipitation (mm)",
title = "Mean monthly precipitation (2011-2024)",
caption = "Data source: NOAA GSOD"
) +
theme_bw()
df_seasonality_bos_sfo <- monthly_met_bos_sfo %>%
compute_seasonality_indices()
monthly_met_bos_sfo <- df_seasonality_bos_sfo[[1]]
df_seasonality_bos_sfo <- df_seasonality_bos_sfo[[2]]
monthly_met_bos_sfo %>%
mutate(group_name = if_else(group_name == "724940-23234", "San Francisco", "Boston")) %>%
ggplot(aes(x = 15+ (Month-1)*30, y = observation_value, color = group_name)) +
geom_segment(aes(y = 0, xend = 15+ (Month-1)*30, yend = observation_value),
size = 1.25, arrow = arrow(length = unit(0.03, "npc")) ) +
scale_color_manual(values = c("Black","Blue")) +
scale_x_continuous(breaks = c(0,90,180,270,360), limits = c(0,360)) +
coord_polar() +
labs(y = "Precip (mm)", x = "", title = "Monthly precipitation") +
theme_bw(base_size = 14) +
theme(legend.position = "none") +
facet_wrap(~ group_name)
monthly_met_bos_sfo <- monthly_met_bos_sfo %>%
group_by(group_name) %>%
mutate(value_x_cumul = cumsum(value_x),
value_y_cumul = cumsum(value_y)
)
month_zero <- monthly_met_bos_sfo %>%
filter(Month == 1) %>%
mutate(Month = Month*0,
value_x_cumul = value_x_cumul*0,
value_y_cumul = value_y_cumul*0
)
df_end <- monthly_met_bos_sfo %>%
bind_rows(month_zero) %>%
filter(Month %in% c(0,12)) %>%
mutate(group_name = if_else(group_name == "724940-23234", "San Francisco", "Boston")) %>%
arrange(loc_name, Month)
monthly_met_bos_sfo %>%
bind_rows(month_zero) %>%
mutate(group_name = if_else(group_name == "724940-23234", "San Francisco", "Boston")) %>%
arrange(loc_name, Month) %>%
ggplot(aes(y = value_x_cumul, x = value_y_cumul, color = group_name)) +
geom_path(arrow = arrow(length = unit(0.04, "npc")), size = 0.75) +
#geom_text(aes(label = Month)) +
geom_path(data = df_end,  arrow = arrow(length = unit(0.04, "npc")), size = 1, color = "red") +
#geom_point() +
scale_color_manual(values = c("black", "blue")) +
#ylim(-350,350) +
#xlim(-350,350) +
scale_x_continuous(breaks = c(-200,0,200), limits = c(-350,350), labels = c(200,0,200)) +
scale_y_continuous(breaks = c(-200,0,200), limits = c(-350,350), labels = c(200,0,200)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") +
coord_equal() +
theme_bw(base_size = 14) +
theme(legend.position = "none") +
labs(x = "Precip (mm)", y = "Precip (mm)") +
facet_wrap(~ group_name)
df_seasonality_bos_sfo %>%
mutate(group_name = if_else(group_name == "724940-23234", "San Francisco", "Boston")) %>%
mutate(a_vec_length = (value_tot_x^2 + value_tot_y^2)^0.5) %>%
pivot_longer(cols = c(value_tot, a_vec_length), names_to = "precip_meas", values_to = "precip_val") %>%
ggplot(aes(x = group_name, y = precip_val, fill = precip_meas)) +
scale_fill_manual(values = c("red", "darkgrey")) +
geom_col(position = position_dodge()) +
theme_bw(base_size = 14) +
theme(legend.position = "none") +
labs(y = "Precipitation magnitude (mm)", x = "")
df_seasonality_bos_sfo %>%
mutate(group_name = if_else(group_name == "724940-23234", "San Francisco", "Boston")) %>%
rename(Location = group_name) %>%
select(Location, SI, SC) %>%
mutate(SI = round(SI, 2),
SC = round(SC,0)
) %>%
kableExtra::kable() %>%
kableExtra::  kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
df_seasonality_bos_sfo %>%
ggplot(aes(x = SC, y = SI, color = group_name)) +
geom_segment(aes(y = 0, xend = SC, yend = SI),
size = 2, arrow = arrow(length = unit(0.03, "npc")) ) +
scale_color_manual(values = c("Black","Blue")) +
scale_x_continuous(breaks = c(0,90,180,270,360), limits = c(0,360)) +
coord_polar() +
theme_bw(base_size = 14) +
theme(legend.position = "none") +
labs(title = "Precipitation seasonality",
caption = "Boston (blue) and San Francisco (black)")
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_state_precipitation.csv")
precip_data <- precip_data %>%
rename(Year = YEAR,
Month = MONTH,
Precip_inches = Value)
precip_data <- precip_data %>%
mutate(Month = as.numeric(Month))
df_monthly_normals <- precip_data %>%
filter(Year >= 1980) %>%
group_by(STATE, Month) %>%
summarize(observation_value = mean(Precip_inches)) %>%
rename(group_name = STATE)
source("https://stahlm.github.io/functions/compute_seasonality_indices.R")
df_seasonality_precip <- compute_seasonality_indices(df_monthly_normals)
df_seasonality_precip <- df_seasonality_precip[[2]]
df_seasonality_precip %>%
ggplot(aes(y = reorder(group_name, SI), x = SI)) +
geom_point(size = 2) +
geom_segment(aes(x = 0, xend = SI, yend = group_name)) +
theme_bw(base_size = 12) +
labs(x = "SI", y = "State")
df_monthly_normals %>%
filter(group_name %in% c("Rhode Island", "California", "Idaho")) %>%
ggplot() +
geom_col(aes(x = factor(Month), y = observation_value)) +
facet_wrap(~ group_name) +
theme_bw() +
labs(x = "Month", y = "Precipitation (inches)")
state_dictionary <- tibble(NAME = state.name, state_cd = state.abb)
View(df_seasonality_precip)
df_seasonality_precip <- df_seasonality_precip %>%
rename(NAME = group_name) %>%
left_join(state_dictionary)
library(sf)
library(tmap)
sf_states <- spData::us_states
View(sf_states)
sf_seasonality_precip <- sf_states %>%
right_join(df_seasonality_precip)
sf_seasonality_precip %>%
tm_shape(bbox = st_bbox(sf_states)) +
tm_polygons(col = "SI", style = "cont", palette = "viridis")+
tm_shape(sf_states) +
tm_borders()
sf_seasonality_precip %>%
tm_shape() +
tm_polygons(col = "SI", style = "cont", palette = "viridis")+
tm_shape(sf_states) +
tm_borders()
sf_seasonality_precip %>%
tm_shape(bbox = st_bbox(sf_states)) +
tm_polygons(col = "SI", style = "cont", palette = "viridis")
tm_shape(sf_states) +
tm_borders()
View(sf_seasonality_precip)
sf_seasonality_precip %>%
filter(NAME != "Alaska", NAME != "Hawaii")
sf_seasonality_precip <- sf_seasonality_precip %>%
filter(NAME != "Alaska", NAME != "Hawaii")
sf_seasonality_precip %>%
tm_shape(bbox = st_bbox(sf_states)) +
tm_polygons(col = "SI", style = "cont", palette = "viridis") +
tm_shape(sf_states) +
tm_borders()
sf_seasonality_precip %>%
tm_shape(bbox = st_bbox(sf_states), projection = 5070) +
tm_polygons(col = "SI", style = "cont", palette = "viridis") +
tm_shape(sf_states) +
tm_borders()
library(dataRetrieval)
library(lubridate)
df_stream_data <- readNWISdv(siteNumbers = "01354500",
parameterCd = "00060",
statCd = "00003") %>%
renameNWISColumns()
# Add columns with year, month, and day information
df_stream_data <- df_stream_data %>%
mutate(Year = year(Date),
Month = month(Date),
Day = day(Date)
)
df_stream_monthly_normals <- df_stream_data %>%
filter(Year > 2011 & Year < 2025) %>%
group_by(Month, site_no) %>%
summarize(observation_value = mean(Flow, na.rm = T)) %>%
rename(group_name = site_no)
df_seasonality_flow <- compute_seasonality_indices(df_stream_monthly_normals)
df_seasonality_flow <- df_seasonality_flow[[2]]
df_stream_monthly_normals <- df_stream_data %>%
filter(Year > 2013 & Year < 2025) %>%
group_by(Month, site_no) %>%
summarize(observation_value = mean(Flow, na.rm = T)) %>%
rename(group_name = site_no)
df_seasonality_flow <- compute_seasonality_indices(df_stream_monthly_normals)
df_seasonality_flow <- df_seasonality_flow[[2]]
# Download data for 2014-2024
met_df <- get_GSOD(years = 2014:2024, station = "725180-14735")
df_alb_precip_monthly_normals <- met_df %>%
group_by(YEAR, MONTH, STNID) %>%
summarize(observation_value = sum(PRCP, na.rm = T)) %>%
ungroup() %>%
group_by(MONTH, STNID) %>%
summarise(observation_value = mean(observation_value)) %>%
rename(group_name = STNID, Month = MONTH)
df_seasonality_alb_precip <- compute_seasonality_indices(df_alb_precip_monthly_normals)
df_seasonality_alb_precip <- df_seasonality_alb_precip[[2]]
df_seasonality_alb_precip$obs_type <- "Precip"
df_seasonality_flow$obs_type <- "Flow"
df_seasonality <- bind_rows(df_seasonality_alb_precip, df_seasonality_flow)
df_seasonality %>%
mutate(group_name = if_else(obs_type == "Flow", "Mohawk River flow", "Precipitation")) %>%
mutate(SI = round(SI, 2),
SC = round(SC,0)
) %>%
select(obs_type, SI, SC) %>%
kableExtra::kable() %>%
kableExtra::  kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
df_seasonality %>%
ggplot(aes(x = SC, y = SI, color = obs_type)) +
geom_segment(aes(y = 0, xend = SC, yend = SI),
size = 2, arrow = arrow(length = unit(0.03, "npc")) ) +
scale_color_manual(values = c("Black","Blue")) +
scale_x_continuous(breaks = c(0,90,180,270,360), limits = c(0,360)) +
coord_polar() +
theme_bw(base_size = 14) +
theme(legend.position = "none") +
labs(caption = "Streamflow (black) and precipitation (blue)",
title = "Hydrologic seasonality",
subtitle = "Mohawk River Watershed"
)
met_alb <- get_GSOD(years = 2014:2024, station = "725180-14735")
library(GSODR)
library(tidyverse)
met_alb <- get_GSOD(years = 2014:2024, station = "725180-14735")
write_csv(x = met_alb, file = "./gsod_alb.csv")
# Data for 2014-2024
met_sfo <- read_csv("https://stahlm.github.io/ENS_215/Data/gsod_alb.csv")
# Data for 2014-2024
met_sfo <- read_csv("https://stahlm.github.io/ENS_215/Data/gsod_alb.csv")
df_stream_data <- readNWISdv(siteNumbers = "01354500",
parameterCd = "00060",
statCd = "00003") %>%
renameNWISColumns()
library(dataRetrieval)
df_stream_data <- readNWISdv(siteNumbers = "01354500",
parameterCd = "00060",
statCd = "00003") %>%
renameNWISColumns()
write_csv(x = df_stream_data, file = "./USGS_01354500_flow.csv")
# Data for 2014-2024
met_sfo <- read_csv("https://stahlm.github.io/ENS_215/Data/gsod_alb.csv")
precip_mv <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_division_mohawk_valley_precipitation.csv", skip = 4)
precip_mv <- precip_mv %>%
rename(Year = YEAR, Month = MONTH) %>%
filter(Year >= 1940, Year < 2025) %>%
mutate(Month = as.numeric(Month))
flow <- read_csv("https://stahlm.github.io/ENS_215/Data/USGS_streamflow_01351500.csv") %>%
drop_na() %>%
filter(Year >= 1940 & Year < 2025) %>%  # select years 1940 through 2024
mutate(Date = make_date(Year, Month, Day)) # create a Date column that has the dates as an R date object
flow_monthly <- flow %>%
mutate(flow_inches = flow_cfs/((5280^2)*886)*(365*24*60*60/12)*12 ) %>%
group_by(Year, Month) %>%
summarize(flow_cfs = mean(flow_cfs, na.rm = T),
flow_inches = mean(flow_inches, na.rm = T),
n_obs = n()
)
df_precip_flow <- precip_mv %>%
left_join(flow_monthly)
df_flow_precip <- read_csv("https://stahlm.github.io/ENS_215/Data/precip_mv_flow_01351500.csv")
View(df_flow_precip)
df_flow_precip <- df_flow_precip %>%
select(Year, Month, Precip_inches, flow_inches)
library(tidyverse)
library(moderndive)
df_flow_precip <- read_csv("https://stahlm.github.io/ENS_215/Data/precip_mv_flow_01351500.csv")
df_flow_precip <- df_flow_precip %>%
select(Year, Month, Precip_inches, flow_inches)
df_flow_precip %>%
ggplot(aes(x = Precip_inches, y = flow_inches)) +
geom_point() +
theme_classic()
df_flow_precip %>%
ggplot(aes(x = Precip_inches, y = flow_inches)) +
geom_point(alpha = 0.5) +
theme_classic()
df_flow_precip %>%
ggplot(aes(x = Precip_inches, y = flow_inches)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm") +
theme_classic()
df_flow_precip %>%
ggplot(aes(x = Precip_inches, y = flow_inches)) +
geom_point(alpha = 0.5) +
coord_equal() +
theme_classic()
df_flow_precip %>%
ggplot(aes(x = Precip_inches, y = flow_inches)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm") +
coord_equal() +
theme_classic()
lm(data = df_flow_precip, formula = flow_inches ~ Precip_inches)
lm_1 <- lm(data = df_flow_precip, formula = flow_inches ~ Precip_inches)
library(tidyverse)
library(moderndive)
df_flow_precip <- read_csv("https://stahlm.github.io/ENS_215/Data/precip_mv_flow_01351500.csv")
df_flow_precip <- df_flow_precip %>%
select(Year, Month, Precip_inches, flow_inches)
df_flow_precip %>%
ggplot(aes(x = Precip_inches, y = flow_inches)) +
geom_point(alpha = 0.5) +
coord_equal() +
theme_classic()
df_flow_precip %>%
ggplot(aes(x = Precip_inches, y = flow_inches)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm") +
coord_equal() +
theme_classic()
lm_flow <- lm(data = df_flow_precip, formula = flow_inches ~ Precip_inches)
lm_flow
get_regression_table(lm_flow, digits = 5)
get_regression_table(lm_flow, digits = 3)
get_regression_summaries(lm_flow)
library(tidyverse)
library(moderndive)
df_flow_precip <- read_csv("https://stahlm.github.io/ENS_215/Data/precip_mv_flow_01351500.csv")
df_flow_precip <- df_flow_precip %>%
select(Year, Month, Precip_inches, flow_inches)
df_flow_precip %>%
ggplot(aes(x = Precip_inches, y = flow_inches)) +
geom_point(alpha = 0.5) +
coord_equal() +
theme_classic()
df_flow_precip %>%
ggplot(aes(x = Precip_inches, y = flow_inches)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm") +
coord_equal() +
theme_classic()
lm_flow <- lm(data = df_flow_precip, formula = flow_inches ~ Precip_inches)
lm_flow
get_regression_table(lm_flow, digits = 3)
get_regression_summaries(lm_flow)
