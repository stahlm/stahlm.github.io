(fig_01 / fig_02) +
plot_annotation(title = paste(loc2use,": Temperature and precipitation", sep = ""),
caption = "Data source: GridMET",
tag_levels = "a"
)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(readxl)
library(ggthemes)
library(sf)
library(tmap)
library(AOI)
Heard_of <- read_xlsx("../../Data/Class_survey_2025.xlsx", sheet = "Heard_of")
Class_yr <- read_xlsx("../../Data/Class_survey_2025.xlsx", sheet = "Class_yr")
Class_yr$Year <- ordered(Class_yr$Year, levels = c("FR","SO","JR","SR","Other"))
Majors <- read_xlsx("../../Data/Class_survey_2025.xlsx", sheet = "Major")
States <- read_xlsx("../../Data/Class_survey_2025.xlsx", sheet = "Home_state")
View(Class_yr)
View(Heard_of)
library(tidyverse)
library(stationaRy)
library(sf)
library(tmap)
library(spData)
library(AOI)
library(climateR)
library(raster)
library(rasterVis)
library(patchwork)
# Get the data
#loc2use <- 'Death Valley National Park'
loc2use <- 'Union College'
AOI = AOI::geocode(loc2use,
pt = TRUE)
ts  = getGridMET(AOI, varname = c("tmmx","tmmn", "pr"),
startDate = "2024-01-01",
endDate = "2024-12-31")
# convert units
ts <- ts %>%
mutate(tmax = ((tmmx - 273.15)*(9/5) +32),
tmin = ((tmmn - 273.15)*(9/5) +32),
prcp = pr/25.4
)
# Summary table
ts %>%
summarize(pcrp_max = max(prcp),
temp_max = max(tmax),
temp_min = min(tmin),
temp_mean = mean((tmin+tmax)/2),
temp_max_change = max(tmax - tmin),
n_days = n()
)
# Make the figures
fig_01 <- ts %>%
ggplot() +
geom_line(aes(x = date, y = tmax), color = "red") +
geom_line(aes(x = date, y = tmin), color = "blue") +
labs(x = "",
y = "Temperature (F)"
) +
geom_hline(yintercept = 32, linetype = "dashed") +
theme_bw()
fig_02 <- ts %>%
ggplot() +
geom_col(aes(x = date, y = prcp), color = "black") +
labs(y = "Precipitation (inches)") +
theme_bw()
# Make the figures
(fig_01 / fig_02) +
plot_annotation(title = paste(loc2use,": Temperature and precipitation", sep = ""),
caption = "Data source: GridMET",
tag_levels = "a"
)
# Get the data
#loc2use <- 'Death Valley National Park'
loc2use <- 'Miami, FL'
AOI = AOI::geocode(loc2use,
pt = TRUE)
ts  = getGridMET(AOI, varname = c("tmmx","tmmn", "pr"),
startDate = "2024-01-01",
endDate = "2024-12-31")
# convert units
ts <- ts %>%
mutate(tmax = ((tmmx - 273.15)*(9/5) +32),
tmin = ((tmmn - 273.15)*(9/5) +32),
prcp = pr/25.4
)
# Summary table
ts %>%
summarize(pcrp_max = max(prcp),
temp_max = max(tmax),
temp_min = min(tmin),
temp_mean = mean((tmin+tmax)/2),
temp_max_change = max(tmax - tmin),
n_days = n()
)
# Make the figures
fig_01 <- ts %>%
ggplot() +
geom_line(aes(x = date, y = tmax), color = "red") +
geom_line(aes(x = date, y = tmin), color = "blue") +
labs(x = "",
y = "Temperature (F)"
) +
geom_hline(yintercept = 32, linetype = "dashed") +
theme_bw()
fig_02 <- ts %>%
ggplot() +
geom_col(aes(x = date, y = prcp), color = "black") +
labs(y = "Precipitation (inches)") +
theme_bw()
# Make the figures
(fig_01 / fig_02) +
plot_annotation(title = paste(loc2use,": Temperature and precipitation", sep = ""),
caption = "Data source: GridMET",
tag_levels = "a"
)
library(tidyverse)
library(stationaRy)
library(sf)
library(tmap)
library(spData)
library(AOI)
library(climateR)
library(raster)
library(rasterVis)
library(patchwork)
# Get the data
#loc2use <- 'Death Valley National Park'
loc2use <- 'Union College'
AOI = AOI::geocode(loc2use,
pt = TRUE)
ts  = getGridMET(AOI, varname = c("tmmx","tmmn", "pr"),
startDate = "2024-01-01",
endDate = "2024-12-31")
View(ts)
# convert units
ts <- ts %>%
mutate(tmax = ((tmmx - 273.15)*(9/5) +32),
tmin = ((tmmn - 273.15)*(9/5) +32),
prcp = pr/25.4
)
# Summary table
ts %>%
summarize(pcrp_max = max(prcp),
temp_max = max(tmax),
temp_min = min(tmin),
temp_mean = mean((tmin+tmax)/2),
temp_max_change = max(tmax - tmin),
n_days = n()
)
# Make the figures
fig_01 <- ts %>%
ggplot() +
geom_line(aes(x = date, y = tmax), color = "red") +
geom_line(aes(x = date, y = tmin), color = "blue") +
labs(x = "",
y = "Temperature (F)"
) +
geom_hline(yintercept = 32, linetype = "dashed") +
theme_bw()
fig_02 <- ts %>%
ggplot() +
geom_col(aes(x = date, y = prcp), color = "black") +
labs(y = "Precipitation (inches)") +
theme_bw()
# Make the figures
(fig_01 / fig_02) +
plot_annotation(title = paste(loc2use,": Temperature and precipitation", sep = ""),
caption = "Data source: GridMET",
tag_levels = "a"
)
# Get the data
#loc2use <- 'Death Valley National Park'
loc2use <- 'Chicago'
AOI = AOI::geocode(loc2use,
pt = TRUE)
ts  = getGridMET(AOI, varname = c("tmmx","tmmn", "pr"),
startDate = "2024-01-01",
endDate = "2024-12-31")
# convert units
ts <- ts %>%
mutate(tmax = ((tmmx - 273.15)*(9/5) +32),
tmin = ((tmmn - 273.15)*(9/5) +32),
prcp = pr/25.4
)
# Summary table
ts %>%
summarize(pcrp_max = max(prcp),
temp_max = max(tmax),
temp_min = min(tmin),
temp_mean = mean((tmin+tmax)/2),
temp_max_change = max(tmax - tmin),
n_days = n()
)
# Make the figures
fig_01 <- ts %>%
ggplot() +
geom_line(aes(x = date, y = tmax), color = "red") +
geom_line(aes(x = date, y = tmin), color = "blue") +
labs(x = "",
y = "Temperature (F)"
) +
geom_hline(yintercept = 32, linetype = "dashed") +
theme_bw()
fig_02 <- ts %>%
ggplot() +
geom_col(aes(x = date, y = prcp), color = "black") +
labs(y = "Precipitation (inches)") +
theme_bw()
# Make the figures
(fig_01 / fig_02) +
plot_annotation(title = paste(loc2use,": Temperature and precipitation", sep = ""),
caption = "Data source: GridMET",
tag_levels = "a"
)
hurricane_data = getGridMET(aoi_get(state = c("NC")),
varname = "pr",
startDate = "2024-09-23", endDate = "2024-09-28")
r = terra::rast(hurricane_data)
r_inches <- r/25.4
tmap_mode("plot")
fig_map <- r_inches %>%
tm_shape() +
tm_raster(style = "cont") +
tm_shape(spData::us_states) +
tm_borders()
fig_map
tmap_mode("view")
fig_map
fig_map
tmap_mode("plot")
round(terra::global(x = r_inches, "max", na.rm = T),2) %>% as.data.frame()
sf::sf_use_s2(FALSE)
temperature_US = getGridMET(aoi_get(state = "conus"),
varname = "tmmn",
startDate = "2024-10-31", endDate = "2024-10-31")
#> Spherical geometry (s2) switched off
#> Spherical geometry (s2) switched on
temperature_US <- terra::rast(temperature_US)
temperature_US <- temperature_US - 273.15
temperature_US <- (temperature_US*9/5) + 32
tmap_mode("plot")
temperature_US %>%
tm_shape() +
tm_raster(style = "cont", palette = "-RdBu", midpoint = 32, title = "Min Temp (C)") +
tm_shape(spData::us_states) +
tm_borders() +
tm_layout(legend.outside.position = "right", legend.outside = T)
library(osmdata)
library(tigris)
library(sf)
#library(osmplotr)
library(tmaptools)
library(OpenStreetMap)
Sys.setenv(MAPBOX_API_KEY = "pk.eyJ1Ijoic3RhaGxtIiwiYSI6ImNrZnJiMDMxbDA0aGsyenFlajhvMzZ4bXUifQ.I7l7fJBAHCQWRwyYozq4ZQ")
loc2use <- "New Mexico"
bb_values <- getbb(loc2use)
bb_values
springs_data <- opq(bb_values) %>%
add_osm_feature(key = 'natural', value = 'spring') %>%
osmdata_sf()
View(springs_data)
loc_border <- spData::us_states %>%
filter(NAME == "New Mexico")
tmap_mode("view")
map_springs <-
tm_shape(loc_border) +
tm_borders(col = "black") +
tm_shape(springs_data$osm_points) +
tm_dots(col = "blue")
map_springs
library(dataRetrieval)
library(lubridate)
df_stream_data <- readNWISdv(siteNumbers = "09380000",
parameterCd = c("00060"),
statCd = "00003") %>%
renameNWISColumns()
df_stream_data %>%
ggplot(aes(x = Date, y = Flow)) +
geom_line() +
theme_classic()
table_flows <- df_stream_data %>%
mutate(Year = year(Date)) %>%
group_by(Year) %>%
summarize(mean_flow = mean(Flow, na.rm= T),
min_flow = min(Flow, na.rm = T),
max_flow = max(Flow, na.rm = T),
n_meas = n()) %>%
filter(n_meas > 350)
table_flows
fig_max <- table_flows %>%
ggplot(aes(x = Year)) +
geom_line(aes(y = max_flow), size = 1, color = "blue") +
#geom_line(aes(y = min_flow), size = 1, color = "red") +
#geom_line(aes(y = mean_flow), size = 1, color = "black") +
theme_classic()
fig_min <- table_flows %>%
ggplot(aes(x = Year)) +
geom_line(aes(y = min_flow), size = 1, color = "red") +
#geom_line(aes(y = mean_flow), size = 1, color = "black") +
theme_classic()
fig_mean <- table_flows %>%
ggplot(aes(x = Year)) +
geom_line(aes(y = mean_flow), size = 1, color = "black") +
theme_classic()
fig_mean/fig_max/fig_min
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(readxl)
library(ggthemes)
library(sf)
library(tmap)
library(AOI)
Heard_of <- read_xlsx("../../Data/Class_survey_2025.xlsx", sheet = "Heard_of")
Class_yr <- read_xlsx("../../Data/Class_survey_2025.xlsx", sheet = "Class_yr")
Class_yr$Year <- ordered(Class_yr$Year, levels = c("FR","SO","JR","SR","Other"))
Majors <- read_xlsx("../../Data/Class_survey_2025.xlsx", sheet = "Major")
States <- read_xlsx("../../Data/Class_survey_2025.xlsx", sheet = "Home_state")
locs_state <- aoi_get(state = c("NY",
"CA",
"NJ",
"CT",
"MA",
"VT",
"DC"
)
)
locs_state <- aoi_get(state = c("NY",
"CA",
"NJ",
"CT",
"MA",
"VT",
"Washington DC"
)
)
locs_state <- aoi_get(state = c("NY",
"CA",
"NJ",
"CT",
"MA",
"VT",
"District of Columbia"
)
)
locs_state <- aoi_get(state = c("NY",
"CA",
"NJ",
"CT",
"MA",
"VT"
)
)
locs_country <- aoi_get(country = c("India"
)
)
tmap_mode("view")
locs_country %>%
tm_shape() +
tm_polygons(col = "orange", border.col = "black") +
tm_shape(locs_state) +
tm_polygons(col = "orange", border.col = "black")
tmap_mode("view")
tm_shape(locs_state) +
tm_polygons(col = "orange", border.col = "black") +
tm_shape(locs_country) +
tm_polygons(col = "orange", border.col = "black") +
#loc_map
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(readxl)
library(ggthemes)
library(sf)
library(tmap)
library(AOI)
Heard_of <- read_xlsx("../../Data/Class_survey_2025.xlsx", sheet = "Heard_of")
Class_yr <- read_xlsx("../../Data/Class_survey_2025.xlsx", sheet = "Class_yr")
Class_yr$Year <- ordered(Class_yr$Year, levels = c("FR","SO","JR","SR","Other"))
Majors <- read_xlsx("../../Data/Class_survey_2025.xlsx", sheet = "Major")
States <- read_xlsx("../../Data/Class_survey_2025.xlsx", sheet = "Home_state")
locs_state <- aoi_get(state = c("NY",
"CA",
"NJ",
"CT",
"MA",
"VT"
)
)
locs_country <- aoi_get(country = c("India"
)
)
tmap_mode("view")
tm_shape(locs_state) +
tm_polygons(col = "orange", border.col = "black") +
tm_shape(locs_country) +
tm_polygons(col = "orange", border.col = "black") +
#loc_map
tmap_mode("view")
tm_shape(locs_state) +
tm_polygons(col = "orange", border.col = "black") +
tm_shape(locs_country) +
tm_polygons(col = "orange", border.col = "black")
locs_all <- locs_state %>%
bind_rows(locs_country)
library(tidyverse)
fuel_data <- mpg
fuel_data <- mpg
View(fuel_data)
View(fuel_data)
str(fuel_data)
?mpg
n_rows <- nrow(fuel_data)
n_rows <- nrow(fuel_data)
n_cols <- ncol(fuel_data)
dim(fuel_data)
dim(fuel_data)[1]
dim(fuel_data)[2]
summary(fuel_data)
fuel_data$manufacturer
fuel_data$hwy2cty <- fuel_data$hwy/fuel_data$cty
View(fuel_data)
fuel_data <- mutate(fuel_data, hwy2cty = hwy/cty)
min(fuel_data$hwy2cty)
min(fuel_data$hwy2cty)
max(fuel_data$hwy2cty)
ggplot(data = fuel_data)
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, color = class))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, color = year))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~class)
us_makes <- c("chevorlet","dodge","ford","jeep",
"lincoln","mercury","pontiac"
)
us_makes <- c("chevrolet","dodge","ford","jeep",
"lincoln","mercury","pontiac"
)
us_makes
fuel_data <- mutate(fuel_data,
region = if_else(manufacturer %in% us_makes, "US", "Foreign"))
fuel_data <- mutate(fuel_data,
regon = if_else(manufacturer %in% us_makes, "US", "Foreign"))
library(tidyverse)
fuel_data <- mpg
str(fuel_data)
n_rows <- nrow(fuel_data)
n_cols <- ncol(fuel_data)
dim(fuel_data)[2]
summary(fuel_data)
fuel_data$hwy2cty <- fuel_data$hwy/fuel_data$cty
fuel_data <- mutate(fuel_data, hwy2cty = hwy/cty)
min(fuel_data$hwy2cty)
max(fuel_data$hwy2cty)
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, color = class))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, color = year))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~class)
us_makes <- c("chevrolet","dodge","ford","jeep",
"lincoln","mercury","pontiac"
)
fuel_data <- mutate(fuel_data,
region = if_else(manufacturer %in% us_makes, "US", "Foreign"))
ggplot(data = fuel_data) +
geom_boxplot(x = region, y = hwy)
ggplot(data = fuel_data) +
geom_boxplot(aes(x = region, y = hwy))
df_met <- read_csv("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Data/Albany_GHCND_2840632.csv")
View(df_met)
table_stats <- tibble(year = year_vec,
n_days = NA,
n_events = NA
)
year_vec <- seq(1939, 2021)
table_stats <- tibble(year = year_vec,
n_days = NA,
n_events = NA
)
View(table_stats)
threshold_min <- 32
for (i_year in year_vec) {
df_temp <- df_met[df_met$YEAR == i_year,]
i_count <- (sum(df_temp$TMIN <= threshold_min))
i_days <- nrow(df_temp)
table_stats$n_events[table_stats$year == i_year] <- i_count
table_stats$n_days[table_stats$year == i_year] <- i_days
}
View(table_stats)
table_stats %>%
ggplot(aes(x = year, y = n_events)) +
geom_point() + geom_smooth()
library(GSODR)
a<-GSODR::get_inventory()
View(a)
b <- get_GSOD(years = 2024, station = "725180-14735")
View(b)
b <- get_GSOD(years years = 2020:2024, station = "725180-14735")
b <- get_GSOD(years years = c(2020:2024), station = "725180-14735")
b <- get_GSOD(years years = seq(2020:2024), station = "725180-14735")
b <- get_GSOD(years = seq(2020:2024), station = "725180-14735")
b <- get_GSOD(years = 2020:2024, station = "725180-14735")
View(df_met)
b <- get_GSOD(years = 1939:1940, station = "725180-14735")
