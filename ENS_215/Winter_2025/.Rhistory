scale_color_paletteer_d(`"calecopal::wetland"`)
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("calecopal::wetland")
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("nbapalettes::celtics")
scale_color_paletteer_d("dutchmasters::pearl_earring")
scale_color_paletteer_d(`"calecopal::chaparral1"`)
paletteer_d(`"feathers::plains_wanderer"`)
paletteer_d(`"calecopal::chaparral1"`)
devtools::install_github("EmilHvitfeldt/paletteer")
library(paletteer)
a<-palettes_d_names
View(a)
paletteer_d("vangogh::StarryNight")
knitr::opts_chunk$set(comment=NA, fig.width=5.5, fig.height=4.5)
library(tidyverse)
library(gapminder)
my_gap <- gapminder # create your own data object with the gapminder data
fig_1 <- my_gap %>%
filter(year == 2007, continent == "Asia") %>%
ggplot(aes(x = reorder(country, gdpPercap), y = gdpPercap)) +
geom_point() +
theme_classic()
fig_1
fig_1 <- fig_1 +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
fig_1
library(scales)
fig_1 +
scale_y_continuous(labels=comma_format())
fig_life <- ggplot(my_gap, aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
theme_classic() +
scale_x_log10()
fig_life
fig_life +
scale_x_log10(labels = trans_format('log10', math_format(10^.x)) )
fig_life +
scale_x_log10(breaks = c(250, 1000, 5000, 25000, 50000, 90000))
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
scale_x_log10() +
labs(title = "Life expectancy increases with income",
subtitle = "Life expectancy vs. GDP per capita",
x = "GDP per capita",
y = "Life Expectancy",
caption = "Data source: gapminder") +
theme_classic()
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
scale_x_log10() +
labs(title = "Life expectancy increases with income",
subtitle = "Life expectancy vs. GDP per capita",
x = "GDP per capita",
y = "Life Expectancy",
caption = "Data source: gapminder") +
theme_classic() +
theme(plot.title = element_text(color = "blue", size = 14, face = "bold"),
plot.subtitle = element_text(color = "blue", size = 11),
plot.caption = element_text(face = "italic"),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")
)
my_gap %>%
filter(continent == "Americas" , year == 2007) %>%
ggplot(aes(y = reorder(country, gdpPercap), x = gdpPercap, color = lifeExp)) +
geom_point(size = 3) +
scale_color_gradient(low = "red", high = "green") +
theme_classic()
my_gap %>%
filter(continent == "Americas" , year == 2007) %>%
ggplot(aes(y = reorder(country, gdpPercap), x = gdpPercap, color = lifeExp)) +
geom_point(size = 3) +
scale_color_gradient2(low = "red", mid = "green", high = "blue", midpoint = 70)
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_brewer(palette = "Dark2")
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_manual(values = c("red", "blue", "green", "gray", "purple"))
library(paletteer)
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("dutchmasters::pearl_earring")
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("nationalparkcolors::Yellowstone")
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("calecopal::wetland")
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("nbapalettes::celtics")
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("MetBrewer::Monet")
View(a)
ggplot(my_gap, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10() +
scale_color_paletteer_d("vangogh::StarryNight")
paletteer_d("soilpalettes::redox")
paletteer_d("soilpalettes::podzol")
paletteer_d("soilpalettes::redox2")
library(tidyverse)
fuel_data <- mpg
str(fuel_data)
n_rows <- nrow(fuel_data)
n_cols <- ncol(fuel_data)
dim(fuel_data)
summary(fuel_data)
fuel_data$hwy2cty <-fuel_data$hwy/fuel_data$cty
fuel_data <- mutate(fuel_data, hwy2cty = hwy/cty)
summary(fuel_data$hwy2cty)
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, color = class))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, color = year))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~class)
us_makes <- c("chevrolet", "dodge", "ford", "jeep", "lincoln", "mercury","pontiac")
fuel_data <- mutate(fuel_data,
region = if_else(manufacturer %in% us_makes, "US", "Foreign"))
ggplot(data = fuel_data) +
geom_point(aes(x = trans, y = hwy, color = region))
ggplot(data = fuel_data) +
geom_point(aes(x = hwy, y = cty, color = region))
ggplot(data = fuel_data) +
geom_point(aes(x = hwy, y = cty, color = class))
ggplot(data = fuel_data) +
geom_point(aes(x = hwy, y = cty, color = drv))
automatic_trans <- c("auto(av)", "auto(l3)", "auto(l4)", "auto(l5)", "auto(l6)", "auto(s4), auto(s5), auto(s6)")
fuel_data <- mutate(fuel_data,
Simple_Trans = if_else(trans %in% automatic_trans, "auto", "manuel"))
ggplot(data = fuel_data) +
geom_point(aes(x = hwy, y = cty, color = Simple_Trans))
library(tidyverse)
fuel_data <- mpg
str(fuel_data)
n_rows <- nrow(fuel_data)
n_cols <- ncol(fuel_data)
dim(fuel_data)
summary(fuel_data)
fuel_data$hwy2cty <- fuel_data$hwy/fuel_data$cty
fuel_data <- mutate(fuel_data, hwy2cty = hwy/cty)
min(fuel_data$hwy2cty)
max(fuel_data$hwy2cty)
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, color = class))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, color = year))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~class)
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, color = year)) +
facet_wrap(~class)
us_makes <- c("chevrolet", "dodge", "ford", "jeep", "lincoln", "mercury", "pontiac")
fuel_data <- mutate(fuel_data, region = if_else(manufacturer %in% us_makes, "US", "Foreign"))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = cty, color = year)) +
facet_wrap(~class)
ggplot(data = fuel_data) +
geom_point(aes(x = cyl, y = hwy))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = cty, color = drv)) +
facet_wrap(~class)
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = cty, color = trans)) +
facet_wrap(~class)
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy), color = "hotpink2") +
geom_point(aes(x = displ, y = cty), color = "turquoise")
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = cty, color = region))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = cty, color = region)) +
facet_wrap(~model)
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = cty, color = region)) +
facet_wrap(~manufacturer)
ggplot(data = fuel_data) +
geom_boxplot(aes(x = region, y = hwy))
85-50
35*0.75
50+26.25
# Rubric score to grade conversion
df_rubric <- tibble::tibble(score = c(0,1,1.5,1.75,2,2.25,2.5,2.75,3),
grade = c(0,50,67.5,76.25,85,88.75,92.5,96.25,100)
)
df_rubric
# Student's grade table
score_code <- 2.75
score_results <- 2.5
score_achieve <- 2.5
score_discuss <- 1.5
score_access <- 3
df_student <- tibble::tibble(score = c(score_code, score_results, score_achieve, score_discuss, score_access))
df_student <- df_student %>%
left_join(df_rubric)
df_student
mean(df_student$grade)
library(tidyverse)
fuel_data<-mpg
str(fuel_data)
n_rows <- nrow(fuel_data)
n_col <- ncol(fuel_data)
#can also do dim(fuel data) and it will show rows then col
summary(fuel_data)
fuel_data$hwy2cty <- fuel_data$hwy/fuel_data$cty
fuel_data <- mutate(fuel_data, hwy2cty = hwy/cty)
summary(fuel_data)
ggplot(data=fuel_data) +
geom_point(aes(x=displ, y=hwy))
ggplot(data=fuel_data) +
geom_point(aes(x=displ, y=hwy, color=class))
ggplot(data=fuel_data) +
geom_point(aes(x=displ, y=hwy, color=year))
ggplot(data=fuel_data) +
geom_point(aes(x=displ, y=hwy)) +
facet_wrap(~class)
us_makes <- c("chevrolet", "dodge", "ford", "jeep", "lincoln", "mercury", "pontiac")
fuel_data <- mutate(fuel_data, region= if_else(manufacturer %in% us_makes, "US", "Foreign"))
ggplot(data=fuel_data) +
geom_point(aes(x=displ, y=hwy, color=year)) +
facet_wrap(~class) +
labs(caption="Highway mileage(hwy) shown for engine size(displ) and year for each class ")
ggplot(data=fuel_data) +
geom_point(aes(x=trans, y=displ)) +
labs(caption= "Transmission type(trans) in relation to engine size(disp)")
ggplot(data=fuel_data) +
geom_bar(aes(x=trans))+
labs(caption= "Number of each transmission type shown. The highest number of the cars are auto(l4) and munual(m5) ")
ggplot(data=fuel_data) +
geom_point(aes(x=trans, y=displ, color=class)) +
labs(caption="There does not appear to be a correlation between engine size (disp), transmission type (trans), and class")
print(score_code,"/",3)
# Student's grade table
score_code <- 2
score_results <- 2.5
score_achieve <- 2.5
score_discuss <- 1.5
score_access <- 3
print(score_code,"/",3)
print(paste(score_code,"/",3))
print(paste0(score_code,"/",3))
### Presentation of results:
df_student <- tibble::tibble(score = c(score_code, score_results, score_achieve, score_discuss, score_access))
df_student <- df_student %>%
left_join(df_rubric)
df_student
# Student's grade table
score_code <- 2.75
score_results <- 2.5
score_achieve <- 2.5
score_discuss <- 1.5
score_access <- 1.5
round(mean(df_student$grade), 1)
library(tidyverse)
fuel_data <- mpg
str(fuel_data)
n_col <- ncol(fuel_data)
n_row <- nrow(fuel_data)
summary(fuel_data)
fuel_data$hwy2cty <- fuel_data$hwy/fuel_data$cty
fuel_data <- mutate(fuel_data, hwy2cty = hwy/cty)
summary(fuel_data)
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, color = class))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, color = year))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~class)
us_makes <- c("chevrolet", "dodge", "ford", "jeep", "lincoln", "mercury", "pontiac")
fuel_data <- mutate(fuel_data, region = if_else(manufacturer %in% us_makes, "US", "Foreign"))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, color = drv)) +
facet_wrap(~class)
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy), color = "plum3") +
geom_point(aes(x = displ, y = cty), color = "skyblue1")
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, shape = region), color = "hotpink1") +
geom_point(aes(x = displ, y = cty, shape = region), color = "skyblue1")
library(tidyverse)
fuel_data <- mpg
str(fuel_data)
n_col <- ncol(fuel_data)
n_row <- nrow(fuel_data)
summary(fuel_data)
fuel_data$hwy2cty <- fuel_data$hwy/fuel_data$cty
fuel_data <- mutate(fuel_data, hwy2cty = hwy/cty)
summary(fuel_data)
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, color = class))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, color = year))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~class)
us_makes <- c("chevrolet", "dodge", "ford", "jeep", "lincoln", "mercury", "pontiac")
fuel_data <- mutate(fuel_data, region = if_else(manufacturer %in% us_makes, "US", "Foreign"))
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, color = drv)) +
facet_wrap(~class)
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy), color = "plum3") +
geom_point(aes(x = displ, y = cty), color = "skyblue1")
ggplot(data = fuel_data) +
geom_point(aes(x = displ, y = hwy, shape = region), color = "hotpink1") +
geom_point(aes(x = displ, y = cty, shape = region), color = "skyblue1")
ggplot(data = fuel_data) +
geom_point(aes(x = cyl, y = hwy))
library(tidyverse)
library(gapminder)
library(tidyverse)
library(gapminder)
gap_data <- gapminder
gap_data %>%
filter(year > 1980,
continent %in% c("Asia", "Africa")
)
gap_data %>%
filter(year > 1980,
continent %in% c("Asia", "Africa")
) %>%
arrange(continent, lifeExp)
gap_data %>%
filter(lifeExp > mean(lifeExp))
gap_data %>%
filter(lifeExp > mean(lifeExp), pop > 20*10^6)
gap_data %>%
filter(lifeExp > mean(lifeExp), pop > 20*10^6, year == 2007)
install.packages("Hmisc")
library(Hmisc)
library(Hmisc)
hidingTOC()
library(tidyverse)
library(gapminder)
gap_data <- gapminder
gap_question1 <- gap_data %>%
arrange(continent, lifeExp) %>%
filter(year > 1980,
continent == "Asia" | continent == "Africa")
gap_question1
gap_question1 <- gap_data %>%
arrange(continent, lifeExp) %>%
filter(year > 1980,
continent %in% c("Asia", "Africa"))
gap_question1
df_gap2 <- gap_data %>%
filter(year == 2007,
lifeExp < 60,
gdpPercap > 10000
) %>%
select(-continent)
df_gap2
mean_lifeExp <- mean(gap_data$lifeExp)
mean_lifeExp <- mean(gap_data$lifeExp, na.rm = T)
mean_lifeExp <- mean(gap_data$lifeExp, na.rm = T)
mean_lifeExp
mean_lifeExp <- mean(gap_data$lifeExp, na.rm = T)
mean_lifeExp
df_q3 <- gap_data %>%
filter(lifeExp > mean_lifeExp,
pop > 20*10^6
)
df_q3
#mean_lifeExp <- mean(gap_data$lifeExp, na.rm = T)
#mean_lifeExp
df_q3 <- gap_data %>%
filter(lifeExp > mean(lifeExp),
pop > 20*10^6
)
df_q3
#mean_lifeExp <- mean(gap_data$lifeExp, na.rm = T)
#mean_lifeExp
gap_data %>%
filter(lifeExp > mean(lifeExp),
pop > 20*10^6
)
df_q4 <- gap_data %>%
filter(year == 1977) %>%
select(-continent, -pop, -gdpPercap)
df_q4 <- gap_data %>%
filter(year == 1977) %>%
select(-continent, -pop, -gdpPercap)
df_q4
View(df_q4)
gap_data %>%
filter(year == 1977) %>%
arrange(lifeExp)
gap_data %>%
filter(year == 1977) %>%
arrange(lifeExp) %>%
slice(1)
gap_data %>%
filter(year == 1977, lifeExp == min(lifeExp))
gap_data %>%
filter(year == 1977) %>%
filter(lifeExp == min(lifeExp))
df_q5 <- gap_data %>%
filter(year == 2007, continent == "Europe") %>%
arrange(lifeExp) %>%
select(-pop, -gdpPercap)
df_q5 <- gap_data %>%
filter(year == 2007, continent == "Europe") %>%
arrange(lifeExp) %>%
select(-pop, -gdpPercap)
df_q5
df_q6 <- gap_data %>%
mutate(tot_gdp = pop*gdpPercap) %>%
filter(year == 1952) %>%
arrange(desc(tot_gdp))
df_q6
df_q6 <- gap_data %>%
mutate(tot_gdp = pop*gdpPercap) %>%
filter(year == 2007) %>%
arrange(desc(tot_gdp))
df_q6
df_q6 <- gap_data %>%
mutate(tot_gdp = pop*gdpPercap) %>%
filter(years == 2007) %>%
arrange(desc(tot_gdp))
df_q6 <- gap_data %>%
mutate(tot_gdp = pop*gdpPercap)
df_q6 <- gap_data %>%
mutate(tot_gdp = pop*gdpPercap) %>%
filter(years == 2007)
library(tidyverse)
dams_data <- read_csv("https://stahlm.github.io/ENS_215/Data/Dams_FAO_SelectCols_LabData.csv")
ggplot(data = dams_data, aes(x = Reservoir_area_km2,
y = Reservoir_capacity_million_m3)) +
geom_point(alpha = 1, shape = 21,
fill = "black", col = "red") +
scale_x_log10() +
scale_y_log10()
table_summary <- dams_data %>%
group_by(Continent) %>%
summarize(avg_height = mean(Dam_height_m, na.rm = T),
avg_area = mean(Reservoir_area_km2, na.rm = T),
avg_storage = mean(Reservoir_capacity_million_m3, na.rm = T)
)
table_summary
dams_data %>%
ggplot(aes(x = Continent,
y = Reservoir_capacity_million_m3,
fill = Continent)) +
geom_boxplot() +
scale_y_log10()
table_year_built <- dams_data %>%
group_by(Year_completed) %>%
summarise(num_dams = n())
table_year_built
table_year_built %>%
ggplot(aes(x = Year_completed, y = num_dams)) +
geom_point() +
ylim(0,250)
table_year_built %>%
ggplot(aes(x = Year_completed, y = num_dams)) +
geom_point() +
ylim(0,250)
dams_canada <- dams_data %>%
filter(Country == "Canada")
dams_canada <- dams_data %>%
filter(Country == "Canada") %>%
arrange(Year_completed)
View(dams_canada)
dams_canada <- dams_data %>%
filter(Country == "Canada") %>%
arrange(Hydroelectricity, Year_completed)
View(dams_canada)
dams_canada %>%
ggplot(aes(x = Longitude, y = Latitude))  +
geom_point()
dams_canada %>%
ggplot(aes(x = Longitude, y = Latitude, fill = Hydroelectricity))  +
geom_point(shape = 21)
dams_canada %>%
mutate(Hydroelectricity = factor(Hydroelectricity)) %>%
ggplot(aes(x = Longitude, y = Latitude, fill = Hydroelectricity))  +
geom_point(shape = 21)
library(sf)
library(tmap)
library(leaflet)
leaflet(data = dams_canada) %>%
addTiles()
leaflet(data = dams_canada) %>%
addTiles() %>%
addMarkers(lng = ~Longitude, lat = ~Latitude)
nation_borders <- st_read("../../Data/FN_borders/Premiere_Nation_First_Nation.shp")
