geom_vline(xintercept = qv[2], linetype = "solid", color = "blue") +
geom_vline(xintercept = qv[3], linetype = "dashed")
vec_norm %>%
ggplot(aes(values)) +
geom_density(fill = "grey") +
theme_classic() +
scale_x_continuous(breaks = c(2,3,4,5,6,7,8,9,10)) +
labs(x = "Value",
y = "Density",
title = "Density plot",
subtitle = "Sample of 100,000 values from Normal distribution (mean = 6, sd = 1)",
caption = "Dashed lines represent 25th and 75th percentile, solid line represents 50th") +
geom_vline(xintercept = qv[1], linetype = "dashed") +
geom_vline(xintercept = qv[2], linetype = "solid", color = "blue") +
geom_vline(xintercept = qv[3], linetype = "dashed")
vec_norm %>%
ggplot(aes(values)) +
geom_density(fill = "grey") +
theme_classic() +
scale_x_continuous(breaks = c(2,3,4,5,6,7,8,9,10)) +
labs(x = "Value",
y = "Density",
title = "Density plot",
subtitle = "Sample of 100,000 values from Normal distribution (mean = 6, sd = 1)",
caption = "Dashed lines represent 25th and 75th percentile, solid line represents 50th") +
geom_vline(xintercept = qv[1], linetype = "dashed") +
geom_vline(xintercept = qv[2], linetype = "solid", color = "blue") +
geom_vline(xintercept = qv[3], linetype = "dashed")
vec_norm %>%
ggplot(aes(x = cume_dist(values), y = values))  +
geom_line(linewidth = 1.5) +
theme_classic() +
scale_x_continuous(breaks = c(2,3,4,5,6,7,8,9,10)) +
labs(x = "f-value",
y = "Value",
title = "Quantile plot",
subtitle = "Sample of 100,000 values from Normal distribution (mean = 6, sd = 1)",
caption = "Dashed lines represent 25th and 75th percentile, solid line represents 50th") +
geom_hline(yintercept = qv[1], linetype = "dashed") +
geom_hline(yintercept = qv[2], linetype = "solid", color = "blue") +
geom_hline(yintercept = qv[3], linetype = "dashed")
vec_norm %>%
ggplot(aes(x = cume_dist(values), y = values))  +
geom_line(linewidth = 1.5) +
theme_classic() +
scale_x_continuous(breaks = c(2,3,4,5,6,7,8,9,10)) +
labs(x = "f-value",
y = "Value",
title = "Quantile plot",
subtitle = "Sample of 100,000 values from Normal distribution (mean = 6, sd = 1)",
caption = "Dashed lines represent 25th and 75th percentile, solid line represents 50th") +
geom_hline(yintercept = qv[1], linetype = "dashed") +
geom_hline(yintercept = qv[2], linetype = "solid", color = "blue") +
geom_hline(yintercept = qv[3], linetype = "dashed")
vec_norm %>%
ggplot(aes(x = cume_dist(values), y = values))  +
geom_line(linewidth = 1.5) +
theme_classic() +
scale_y_continuous(breaks = c(2,3,4,5,6,7,8,9,10)) +
labs(x = "f-value",
y = "Value",
title = "Quantile plot",
subtitle = "Sample of 100,000 values from Normal distribution (mean = 6, sd = 1)",
caption = "Dashed lines represent 25th and 75th percentile, solid line represents 50th") +
geom_hline(yintercept = qv[1], linetype = "dashed") +
geom_hline(yintercept = qv[2], linetype = "solid", color = "blue") +
geom_hline(yintercept = qv[3], linetype = "dashed")
vec_norm %>%
ggplot(aes(x = cume_dist(values), y = values))  +
geom_line(linewidth = 1.5) +
theme_classic() +
scale_y_continuous(breaks = c(2,3,4,5,6,7,8,9,10)) +
labs(x = "f-value",
y = "Value",
title = "Quantile plot",
subtitle = "Sample of 100,000 values from Normal distribution (mean = 6, sd = 1)",
caption = "Dashed lines represent 25th and 75th percentile, solid line represents 50th") +
geom_hline(yintercept = qv[1], linetype = "dashed") +
geom_hline(yintercept = qv[2], linetype = "solid", color = "blue") +
geom_hline(yintercept = qv[3], linetype = "dashed")
vec_norm %>%
ggplot(aes(x = cume_dist(values), y = values))  +
geom_line(linewidth = 1.5) +
coord_flip() +
theme_classic() +
scale_y_continuous(breaks = c(2,3,4,5,6,7,8,9,10)) +
labs(y = "Value",
x = "Cumulative probability",
title = "Cumulative distribution plot",
subtitle = "Sample of 100,000 values from Normal distribution (mean = 6, sd = 1)",
caption = "Dashed lines represent 25th and 75th percentile, solid line represents 50th") +
geom_hline(yintercept = qv[1], linetype = "dashed") +
geom_hline(yintercept = qv[2], linetype = "solid", color = "blue") +
geom_hline(yintercept = qv[3], linetype = "dashed")
vec_norm %>%
ggplot(aes(x = cume_dist(values), y = values))  +
geom_line(linewidth = 1.5) +
coord_flip() +
theme_classic() +
scale_y_continuous(breaks = c(2,3,4,5,6,7,8,9,10)) +
labs(y = "Value",
x = "Cumulative probability",
title = "Cumulative distribution plot",
subtitle = "Sample of 100,000 values from Normal distribution (mean = 6, sd = 1)",
caption = "Dashed lines represent 25th and 75th percentile, solid line represents 50th") +
geom_hline(yintercept = qv[1], linetype = "dashed") +
geom_hline(yintercept = qv[2], linetype = "solid", color = "blue") +
geom_hline(yintercept = qv[3], linetype = "dashed")
vec_norm %>%
ggplot(aes(y = values)) +
geom_boxplot(fill = "grey") +
theme_classic() +
# theme(axis.text.y = element_blank(),
#       axis.ticks.y = element_blank()) +
scale_y_continuous(breaks = c(2,3,4,5,6,7,8,9,10)) +
labs(y = "Value",
x = "  ",
title = "Box plot",
subtitle = "Sample of 100,000 values from Normal distribution (mean = 6, sd = 1)") +
coord_flip()
vec_norm %>%
ggplot(aes(y = values)) +
geom_boxplot(fill = "grey") +
theme_classic() +
theme(axis.text.y = element_blank(), axis.text.x=element_text(colour="white"),
axis.ticks.y = element_blank()) +
scale_y_continuous(breaks = c(2,3,4,5,6,7,8,9,10)) +
labs(y = "Value",
x = "  ",
title = "Box plot",
subtitle = "Sample of 100,000 values from Normal distribution (mean = 6, sd = 1)") +
coord_flip()
vec_norm %>%
ggplot(aes(y = values)) +
geom_boxplot(fill = "grey") +
theme_classic() +
theme(axis.text.y = element_blank(), axis.text.y=element_text(colour="white"),
axis.ticks.y = element_blank()) +
scale_y_continuous(breaks = c(2,3,4,5,6,7,8,9,10)) +
labs(y = "Value",
x = "  ",
title = "Box plot",
subtitle = "Sample of 100,000 values from Normal distribution (mean = 6, sd = 1)") +
coord_flip()
vec_norm %>%
ggplot(aes(y = values)) +
geom_boxplot(fill = "grey") +
theme_classic() +
theme(axis.text.y=element_text(colour="white"),
axis.ticks.y = element_blank()) +
scale_y_continuous(breaks = c(2,3,4,5,6,7,8,9,10)) +
labs(y = "Value",
x = "  ",
title = "Box plot",
subtitle = "Sample of 100,000 values from Normal distribution (mean = 6, sd = 1)") +
coord_flip()
vec_norm %>%
ggplot(aes(y = values)) +
geom_boxplot(fill = "grey") +
theme_classic() +
theme(axis.text.y=element_text(colour="white"),
axis.ticks.y = element_blank()) +
scale_y_continuous(breaks = c(2,3,4,5,6,7,8,9,10)) +
labs(y = "Value",
x = "  ",
title = "Box plot",
subtitle = "Sample of 100,000 values from Normal distribution (mean = 6, sd = 1)") +
coord_flip()
vec_norm %>%
ggplot(aes(y = values)) +
geom_boxplot(fill = "grey") +
theme_classic() +
theme(axis.text.x=element_text(colour="white"),
axis.ticks.y = element_blank()) +
scale_y_continuous(breaks = c(2,3,4,5,6,7,8,9,10)) +
labs(y = "Value",
x = "  ",
title = "Box plot",
subtitle = "Sample of 100,000 values from Normal distribution (mean = 6, sd = 1)") +
coord_flip()
vec_norm %>%
ggplot(aes(y = values)) +
geom_boxplot(fill = "grey") +
theme_classic() +
theme(axis.text.x=element_text(colour="white"),
axis.ticks.y = element_blank()) +
scale_y_continuous(breaks = c(2,3,4,5,6,7,8,9,10)) +
labs(y = "Value",
x = "  ",
title = "Box plot",
subtitle = "Sample of 100,000 values from Normal distribution (mean = 6, sd = 1)") +
coord_flip()
vec_norm %>%
ggplot(aes(y = values)) +
geom_boxplot(fill = "grey") +
theme_classic() +
theme(axis.text.y=element_text(colour="white"),
axis.ticks.y = element_blank()) +
scale_y_continuous(breaks = c(2,3,4,5,6,7,8,9,10)) +
labs(y = "Value",
x = "  ",
title = "Box plot",
subtitle = "Sample of 100,000 values from Normal distribution (mean = 6, sd = 1)") +
coord_flip()
vec_norm %>%
ggplot(aes(y = values)) +
geom_boxplot(fill = "grey") +
theme_classic() +
theme(axis.text.y=element_text(colour="white"),
axis.ticks.y = element_blank()) +
scale_y_continuous(breaks = c(2,3,4,5,6,7,8,9,10)) +
labs(y = "Value",
x = "  ",
title = "Box plot",
subtitle = "Sample of 100,000 values from Normal distribution (mean = 6, sd = 1)") +
coord_flip()
vec_norm %>%
ggplot(aes(y = 1, x = values)) +
geom_jitter(width = 0, alpha = 0.02) +
theme_classic() +
#theme(axis.text.y = element_blank(),
#      axis.ticks.y = element_blank()) +
theme(axis.text.y=element_text(colour="white"),
axis.ticks.y = element_blank()) +
scale_x_continuous(breaks = c(2,3,4,5,6,7,8,9,10)) +
labs(y = "",
x = "Value",
title = "Jitter plot",
subtitle = "Sample of 100,000 values from Normal distribution (mean = 6, sd = 1)")
vec_norm %>%
ggplot(aes(y = 1, x = values)) +
geom_jitter(width = 0, alpha = 0.02) +
theme_classic() +
#theme(axis.text.y = element_blank(),
#      axis.ticks.y = element_blank()) +
theme(axis.text.y=element_text(colour="white"),
axis.ticks.y = element_blank()) +
scale_x_continuous(breaks = c(2,3,4,5,6,7,8,9,10)) +
labs(y = "",
x = "Value",
title = "Jitter plot",
subtitle = "Sample of 100,000 values from Normal distribution (mean = 6, sd = 1)")
library(tidyverse)
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/NOAA_State_Precip_LabData.csv")
ny_precip <- filter(precip_data, state_cd == "NY")
# Your code here
ny_precip <- ny_precip %>%
mutate(time_period = if_else(Year >= 1950,"Post-1950","Pre-1950"))
quantile(ny_precip$Precip_inches, probs = c(0.05, 0.25, 0.50, 0.75, 0.95))
ny_precip %>%
mutate(frac = round(cume_dist(Precip_inches), 3))
#arrange(Precip_inches) %>%
#mutate(quant = (seq(1,nrow(ny_precip)) - 0.5)/nrow(ny_precip))
var_example <- tibble(A = rnorm(200, 5, 0.10), B = rnorm(200, 5, 0.75)) %>%
gather(`A`,`B`, key = "Group", value = "Measurement")
var_example %>% ggplot(aes(x = Group, y = Measurement, fill = Group)) +
geom_jitter(height = 0, width = 0.2, shape = 21, size = 1.5, color = "grey") +
scale_fill_manual(values = c("red2","blue3")) +
theme_classic() +
theme(axis.text = element_text(size = 8), axis.title = element_text(size = 10))
quantile(ny_precip$Precip_inches, probs = 0.75) - quantile(ny_precip$Precip_inches, probs = 0.25) # using quantile
IQR(ny_precip$Precip_inches) # using IQR function
shape_symm <- tibble(x= rnorm(5*10^5, mean = 0, sd = 1))
shape_symm %>% ggplot(aes(x)) +
geom_density(fill = "gray") +
theme_classic() +
labs(title = "Unimodal distribution",
x = "",
y = ""
)
shape_symm <- tibble(x= c(rnorm(5*10^5, mean = -2, sd = 0.75), rnorm(5*10^5, mean = 2, sd = 0.75)) )
shape_symm %>% ggplot(aes(x)) +
geom_density(fill = "gray") +
theme_classic() +
labs(title = "Bimodal distribution",
x = "",
y = ""
)
shape_symm <- tibble(x= rnorm(5*10^5, mean = 0, sd = 1))
shape_symm %>% ggplot(aes(x)) +
geom_density(fill = "gray") +
theme_classic() +
labs(title = "Symmetric distribution",
x = "",
y = ""
)
shape_right <- tibble(x = rgamma(5*10^5, shape = 2, rate = 10))
shape_right %>% ggplot(aes(x)) +
geom_density(fill = "gray") +
theme_classic() +
labs(title = "Right-skewed",
x = "",
y = ""
)
shape_left <- tibble(x = rgamma(5*10^5, shape = 2, rate = 10))
shape_left %>% ggplot(aes(-x)) +
geom_density(fill = "gray") +
theme_classic() +
labs(title = "Left-skewed",
x = "",
y = ""
)
ny_precip %>%
ggplot(aes(x = state_cd, y = Precip_inches)) +
geom_boxplot(fill = "grey") +
labs(y = "Precip (inches)",
x = ""
) +
theme_classic()
ny_precip %>%
ggplot(aes(x = state_cd, y = Precip_inches)) +
geom_boxplot(fill = "grey") +
geom_jitter(alpha = 0.1, width = 0.15, height = 0) +
labs(y = "Precip (inches)",
x = ""
) +
theme_classic()
ny_precip %>%
ggplot(aes(x = time_period, y = Precip_inches)) +
geom_boxplot(fill = "grey", notch = TRUE) +
labs(y = "Precip (inches)",
x = ""
) +
theme_classic()
library(tidyverse)
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/NOAA_State_Precip_LabData.csv")
ny_precip <- filter(precip_data, state_cd == "NY")
View(ny_precip)
View(ny_precip)
ny_precip %>%
ggplot()
ny_precip %>%
mutate(Month = factor(Month)) %>%
ggplot(aes(x = Month, y = Precip_inches))
ny_precip %>%
mutate(Month = factor(Month)) %>%
ggplot(aes(x = Month, y = Precip_inches)) +
geom_boxplot()
ny_precip %>%
mutate(Month = factor(Month)) %>%
ggplot(aes(x = Month, y = Precip_inches)) +
geom_boxplot() +
theme_classic()
ny_precip %>%
mutate(Month = factor(Month)) %>%
ggplot(aes(x = Month, y = Precip_inches)) +
geom_boxplot(notch = T) +
theme_classic()
ny_precip %>%
mutate(Month = factor(Month)) %>%
ggplot(aes(x = Month, y = Precip_inches)) +
geom_boxplot(notch = T, fill = "lightgrey") +
theme_classic()
precip_data %>%
group_by(state_cd) %>%
summarize(p_25 = quantile(Precip_inches, probs = 0.25))
precip_data %>%
group_by(state_cd) %>%
summarize(p_25 = quantile(Precip_inches, probs = 0.25),
p_50 = quantile(Precip_inches, probs = 0.50),
p_75 = quantile(Precip_inches, probs = 0.75)
)
table_precip_stats <- precip_data %>%
group_by(state_cd) %>%
summarize(p_25 = quantile(Precip_inches, probs = 0.25),
p_50 = quantile(Precip_inches, probs = 0.50),
p_75 = quantile(Precip_inches, probs = 0.75)
)
table_precip_stats
table_precip_stats %>%
ggplot() +
geom_point(aes(y = state_cd))
table_precip_stats %>%
ggplot() +
geom_point(aes(y = state_cd, x = p_50))
table_precip_stats %>%
ggplot() +
geom_point(aes(y = reorder(state_cd, p_50), x = p_50))
table_precip_stats %>%
ggplot() +
geom_point(aes(y = reorder(state_cd, p_50), x = p_50)) +
geom_point(aes(y = state_cd, x = p_25))
table_precip_stats %>%
ggplot() +
geom_point(aes(y = reorder(state_cd, p_50), x = p_50), size = 2) +
geom_point(aes(y = state_cd, x = p_25),
shape = 21, fill = "red", size = 2)
table_precip_stats %>%
ggplot() +
geom_point(aes(y = reorder(state_cd, p_50), x = p_50), size = 2) +
geom_point(aes(y = state_cd, x = p_25),
shape = 21, fill = "red", size = 2) +
geom_point(aes(y = state_cd, x = p_75),
shape = 21, fill = "blue", size = 2)
table_precip_stats %>%
ggplot() +
geom_point(aes(y = reorder(state_cd, p_50), x = p_50), size = 2) +
geom_point(aes(y = state_cd, x = p_25),
shape = 21, fill = "red", size = 2) +
geom_point(aes(y = state_cd, x = p_75),
shape = 21, fill = "blue", size = 2) +
theme_classic()
table_precip_stats %>%
ggplot() +
geom_point(aes(y = reorder(state_cd, p_50), x = p_50), size = 2) +
geom_point(aes(y = state_cd, x = p_25),
shape = 21, fill = "red", size = 2) +
geom_point(aes(y = state_cd, x = p_75),
shape = 21, fill = "blue", size = 2) +
theme_classic() +
xlim(0,7)
table_precip_stats %>%
ggplot() +
geom_point(aes(y = reorder(state_cd, p_50), x = p_50), size = 2) +
geom_point(aes(y = state_cd, x = p_25),
shape = 21, fill = "red", size = 2) +
geom_point(aes(y = state_cd, x = p_75),
shape = 21, fill = "blue", size = 2) +
theme_classic() +
xlim(0,7) +
labs(title = "Monthly Precipitation Quantile",
subtitle = "US States",
y = "",
x = "Monthly precipitation (inches)"
)
table_precip_stats %>%
ggplot() +
geom_point(aes(y = reorder(state_cd, p_50), x = p_50), size = 2) +
geom_point(aes(y = state_cd, x = p_25),
shape = 21, fill = "red", size = 2) +
geom_point(aes(y = state_cd, x = p_75),
shape = 21, fill = "blue", size = 2) +
theme_classic() +
xlim(0,7) +
labs(title = "Monthly Precipitation Quantile",
subtitle = "US States",
y = "",
x = "Monthly precipitation (inches)",
caption = "25th (red), 50th (black), 75th (blue)"
)
table_precip_stats %>%
ggplot() +
geom_point(aes(y = reorder(state_cd, p_50), x = p_50), size = 2) +
geom_point(aes(y = state_cd, x = p_25),
shape = 21, fill = "red", size = 2) +
geom_point(aes(y = state_cd, x = p_75),
shape = 21, fill = "blue", size = 2) +
theme_classic() +
xlim(0,7) +
labs(title = "Monthly Precipitation Quantile",
subtitle = "US States",
y = "",
x = "Monthly precipitation (inches)",
caption = "25th (red), 50th (black), 75th (blue)"
)
table_precip_stats %>%
ggplot() +
geom_point(aes(y = reorder(state_cd, p_50), x = p_50), size = 2) +
geom_point(aes(y = state_cd, x = p_25),
shape = 21, fill = "red", size = 2) +
geom_point(aes(y = state_cd, x = p_75),
shape = 21, fill = "blue", size = 2) +
theme_classic() +
xlim(0,7) +
labs(title = "Monthly Precipitation Quantile",
subtitle = "US States",
y = "",
x = "Monthly precipitation (inches)",
caption = "25th (red), 50th (black), 75th (blue)"
)
library(tidyverse)
library(ggridges)
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_state_precipitation.csv")
df_names <- tibble(STATE = state.name, state_cd = state.abb)
precip_data <- precip_data %>%
left_join(df_names) %>%
rename(Year = YEAR,
Month = MONTH,
Precip_inches = Value
)
precip_data <- precip_data %>%
mutate(time_period = if_else(Year >= 1950,"Post-1950","Pre-1950"))
ny_precip <- precip_data %>%
filter(state_cd == "NY")
ny_precip %>%
ggplot(aes(Precip_inches)) +
geom_histogram() +
theme_classic()
ny_precip %>%
ggplot(aes(Precip_inches)) +
geom_histogram(bins = 5) +
theme_classic()
ny_precip %>%
ggplot(aes(Precip_inches)) +
geom_histogram(bins = 50) +
theme_classic()
ny_precip %>%
ggplot(aes(Precip_inches)) +
geom_histogram(bins = 200) +
theme_classic()
ny_precip %>%
ggplot(aes(Precip_inches)) +
geom_histogram(bins = 50) +
theme_classic()
ny_precip %>%
ggplot(aes(Precip_inches)) +
geom_histogram(binwidth = 0.1) +
theme_classic()
ny_precip %>%
ggplot(aes(Precip_inches)) +
geom_histogram(bins = 30) +
theme_classic()
