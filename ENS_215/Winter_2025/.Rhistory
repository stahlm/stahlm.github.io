dyOptions(drawGrid = FALSE)
library(gganimate)
library(gifski)
fig_mauna_loa <- mauna_loa %>%
filter(Year >= 1980) %>%
ggplot(aes(x = Month, y = CO2_ppm, group = Year, color = Year)) +
geom_line() +
scale_color_gradient(low = "blue", high = "red") +
theme_classic() +
labs(title = "Atmospheric CO2",
subtitle = "Year: {frame_along}",
x = "Month",
y = "CO2 (ppm)",
caption = "Data source: NOAA/ESRL") +
scale_x_continuous(breaks = seq(1:12))
fig_mauna_loa
fig_mauna_loa + transition_reveal(Year)
View(mauna_loa)
fig_mauna_loa + transition_reveal(decimal_date)
mauna_loa %>%
filter(Year >= 1958) %>%
mutate(Year = round(Year,2)) %>%  # round the years to the 2nd decimal place (makes dynamic plot title nicer)
ggplot(aes(x = Month, y = CO2_ppm, group = Year, color = Year)) +
geom_line() +
scale_color_gradient(low = "blue", high = "red") +
theme_classic() +
labs(title = "Atmospheric CO2",
subtitle = "Year: {frame_along}",
x = "Month",
y = "CO2 (ppm)",
caption = "Data source: NOAA/ESRL") +
scale_x_continuous(breaks = seq(1:12)) +
transition_reveal(Year) # create the animation
anim_save("./Mauna_Loa_seasonal.gif") # save the animation to your current directory
fig_mauna_loa_ts <- mauna_loa %>%
ggplot(aes(x = make_date(Year, Month, 15), y = CO2_ppm)) +
geom_line(size = 1) +
theme_bw() +
labs(title = expression("Atmospheric CO"[2]),
subtitle = "Measured at Mauna Loa, Hawaii",
x = "",
y = expression("CO"[2]* " (ppm)"),
caption = "Data source: NOAA/ESRL")
fig_mauna_loa_ts
fig_mauna_loa_ts + transition_reveal(make_date(Year, Month, 15)) # create the animation
anim_save("./Mauna_Loa_ts.gif") # save the animation to your current directory
## Interactive tables
library(DT)
state_temps %>%
filter(state_cd == "NY") %>%
datatable()
state_temps %>%
filter(STATE == "New York") %>%
datatable()
state_temps %>%
filter(STATE %in% c("Massachusetts","New York")) %>%
datatable(rownames = FALSE, filter = "top")
AOI::geocode(location = "Saddleback Mountain")
aoi2use <- OI::geocode(location = "Saddleback Mountain")
aoi2use <- AOI::geocode(location = "Saddleback Mountain")
r_elev <- elevatr::get_elev_raster(locations = aoi2use, z = 12, expand = 2500, clip = T)
View(aoi2use)
library(tmap)
library(tidyverse)
library(sf)
View(aoi2use)
aoi2use <- st_as_sf(aoi2use, coords = c("lon", "lat"))
r_elev <- elevatr::get_elev_raster(locations = aoi2use, z = 12, expand = 2500, clip = T)
r_elev <- elevatr::get_elev_raster(locations = aoi2use, z = 12, expand = 2500, clip = "bbox")
r_elev <- elevatr::get_elev_raster(locations = aoi2use, z = 12, expand = 2500)
aoi2use <- st_as_sf(aoi2use, coords = c("lon", "lat"), crs = 4326)
r_elev <- elevatr::get_elev_raster(locations = aoi2use, z = 12, expand = 2500,  clip = "bbox")
aoi2use <- AOI::geocode(location = "Saddleback Mountain")
aoi2use <- st_as_sf(aoi2use, coords = c("lon", "lat"), crs = 4326)
r_elev <- elevatr::get_elev_raster(locations = aoi2use, z = 12, expand = 2500,  clip = "bbox")
View(aoi2use)
r_elev <- elevatr::get_elev_raster(locations = aoi2use, z = 12,  clip = "bbox")
terra::plot(r_elev)
r_elev
terra::plot(r_elev)
r_elev <- elevatr::get_elev_raster(locations = aoi2use, z = 12,  clip = "bbox", expand = 0.25)
r_elev
terra::plot(r_elev)
r_elev <- elevatr::get_elev_raster(locations = aoi2use, z = 12,  clip = "bbox", expand = 0.10)
r_elev
terra::plot(r_elev)
r_contours <- terra::contour(r_elev)
r_contours <- terra::as.contour(r_elev)
r_contours <- terra::as.contour(r_elev$file59081251e2b)
r_elev <- terra::rast(r_elev)
r_contours <- terra::as.contour(r_elev)
tm_shape(r_contours) +
tm_iso()
tm_shape(r_elev) +
tm_iso()
tm_shape(r_contours) +
tm_lines()
r_contours <- st_as_sf(terra::as.contour(r_elev))
tm_shape(r_contours) +
tm_lines()
tm_shape(r_contours) +
tm_iso()
View(r_contours)
r_contours <- st_as_sf(terra::as.contour(r_elev, 10))
tm_shape(r_contours) +
tm_iso()
View(r_contours)
r_contours <- st_as_sf(terra::as.contour(r_elev, breaks = c(200,500,100)))
terra::as.contour(r_elev, levels = c(100,200,500))
r_contours <- terra::as.contour(r_elev, levels = c(100,200,500,1000))
r_contours <- terra::as.contour(r_elev, levels = c(100,200,500,1000))
r_contours <- terra::as.contour(r_elev, levels = c(100,200,500,1000))
r_contours
r_contours <- st_as_sf(r_contours)
tm_shape(r_contours) +
tm_iso()
breaks2use <- c(250,500,750,1000,1250,1500)
r_contours <- terra::as.contour(r_elev, levels = breaks2use)
r_contours
breaks2use <- c(250,500,750,1000,1250,1500)
r_contours <- terra::as.contour(r_elev, levels = breaks2use)
r_contours <- st_as_sf(r_contours)
tm_shape(r_contours) +
tm_iso()
tm_shape(r_elev) +
tm_raster()
tm_shape(r_elev) +
tm_raster(style = "cont") +
tm_shape(r_elev) +
tm_raster(style = "cont")
tm_shape(r_elev) +
tm_raster(style = "cont") +
tm_shape(r_contours) +
tm_iso()
breaks2use <- seq(200,1800, by = 100)
r_contours <- terra::as.contour(r_elev, levels = breaks2use)
r_contours <- st_as_sf(r_contours)
tm_shape(r_elev) +
tm_raster(style = "cont") +
tm_shape(r_contours) +
tm_iso()
tmap_mode("view")
tm_shape(r_elev) +
tm_raster(style = "cont") +
tm_shape(r_contours) +
tm_iso()
tmap_mode("view")
tm_shape(r_elev) +
tm_raster(style = "cont") +
tm_shape(r_contours) +
tm_iso()
tm_shape(r_elev) +
tm_raster(style = "cont", title = "Elev (m)") +
tm_shape(r_contours) +
tm_iso()
tmap_mode("plot")
tm_shape(r_elev) +
tm_raster(style = "cont", title = "Elev (m)") +
tm_shape(r_contours) +
tm_iso()
aoi2use <- AOI::geocode(location = "Mount Washington, NH")
aoi2use <- st_as_sf(aoi2use, coords = c("lon", "lat"), crs = 4326)
r_elev <- elevatr::get_elev_raster(locations = aoi2use, z = 12,  clip = "bbox", expand = 0.10)
r_elev
terra::plot(r_elev)
r_elev <- terra::rast(r_elev)
breaks2use <- seq(200,2000, by = 100)
r_contours <- terra::as.contour(r_elev, levels = breaks2use)
r_contours <- st_as_sf(r_contours)
tmap_mode("plot")
tm_shape(r_elev) +
tm_raster(style = "cont", title = "Elev (m)") +
tm_shape(r_contours) +
tm_iso()
a <- terra::terrain(x = r_elev, "slope", unit = "radians")
a <- a$slope
a <- terra::rast(a)
b <- terra::terrain(x = r_elev, "aspect", unit = "radians")
b <- b$aspect
b <- terra::rast(b)
c <- terra::shade(slope = a,aspect = b, 40, 270)
tm_shape(c) +
tm_raster()
r_elev
terra::plot(c, col=grey(0:100/100), legend=FALSE, mar=c(2,2,1,4))
terra::plot(c, col=grey(0:100/100), legend=FALSE, mar=c(2,2,1,4))
a
b
r_elev_mod <- r_elev
r_elev_mod[r_elev_mod < 0] <- NA
a <- terra::terrain(x = r_elev_mod, "slope", unit = "radians")
a <- a$slope
a <- terra::rast(a)
b <- terra::terrain(x = r_elev_mod, "aspect", unit = "radians")
b <- b$aspect
b <- terra::rast(b)
c <- terra::shade(slope = a,aspect = b, 40, 270)
tm_shape(c) +
tm_raster()
terra::plot(c)
c
r_elev
library(rnaturalearth)
library(tidyverse)
library(sf)
library(rnaturalearth)
rnaturalearth::check_data_exist()
rnaturalearth::check_data_exist(category = "physical")
rivers50 <- ne_download(
scale = 50,
type = "rivers_lake_centerlines",
category = "physical",
returnclass = "sf"
)
tm_shape(rivers50) +
tm_lines()
rivers10 <- ne_download(
scale = 10,
type = "rivers_lake_centerlines",
category = "physical",
returnclass = "sf"
)
tm_shape(rivers10) +
tm_lines()
tm_shape(rivers10) +
tm_lines() +
tm_shape(lakes10) +
tm_polygons(col = "blue")
lakes10 <- ne_download(
scale = 10,
type = "lakes",
category = "physical",
returnclass = "sf"
)
tm_shape(rivers10) +
tm_lines() +
tm_shape(lakes10) +
tm_polygons(col = "blue")
tmap_options(check.and.fix = TRUE)
tm_shape(rivers10) +
tm_lines() +
tm_shape(lakes10) +
tm_polygons(col = "blue")
View(lakes10)
sf_borders_0 <- gb_adm0("Cambodia") # Level 0 (country border)
library(rgeoboundaries)
sf_borders_0 <- gb_adm0("Cambodia") # Level 0 (country border)
tmap_options(check.and.fix = TRUE)
tm_shape(sf_borders_0) +
tm_borders() +
tm_shape(rivers10) +
tm_lines() +
tm_shape(lakes10) +
tm_polygons(col = "blue")
tmap_options(check.and.fix = TRUE)
tm_shape(sf_borders_0) +
tm_borders() +
tm_shape(rivers10) +
tm_lines(col = "blue") +
tm_shape(lakes10) +
tm_polygons(col = "blue")
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_state_precipitation.csv")
precip_data <- precip_data %>%
rename(precip_inches = Value)
precip_data <- precip_data %>%
rename(Precip_inches = Value)
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_state_precipitation.csv")
precip_data <- precip_data %>%
rename(Precip_inches = Value)
precip_data %>%
filter(Year >= 1980,
state_cd == "CA") %>%
mutate(date = ymd(paste(Year,Month,15)) ) %>%
ggplot(aes(x = date, y = Precip_inches)) +
geom_line() +
geom_point() +
theme_classic() +
labs(x = "Year",
y = "Precip (inches)")
precip_data %>%
filter(Year >= 1980,
state_cd == "CA") %>%
mutate(date = ymd(paste(YEAR, MONTH, 15)) ) %>%
ggplot(aes(x = date, y = Precip_inches)) +
geom_line() +
geom_point() +
theme_classic() +
labs(x = "Year",
y = "Precip (inches)")
precip_data %>%
filter(Year >= 1980,
STATE == "California") %>%
mutate(date = ymd(paste(YEAR, MONTH, 15)) ) %>%
ggplot(aes(x = date, y = Precip_inches)) +
geom_line() +
geom_point() +
theme_classic() +
labs(x = "Year",
y = "Precip (inches)")
precip_data %>%
filter(YEAR >= 1980,
STATE == "California") %>%
mutate(date = ymd(paste(YEAR, MONTH, 15)) ) %>%
ggplot(aes(x = date, y = Precip_inches)) +
geom_line() +
geom_point() +
theme_classic() +
labs(x = "Year",
y = "Precip (inches)")
precip_data %>%
filter(YEAR >= 1980,
STATE == "California") %>%
ggplot(aes(x = YEAR, y = Precip_inches)) +
geom_point() +
geom_smooth(se = F, method = "lm") +
facet_wrap(~ MONTH, ncol = 12) +
theme_classic() +
theme(axis.text.x = element_blank()) +
labs(x = "",
y = "Precip (inches)",
title = "California Monthly Precipitation",
subtitle = "1980-2017",
caption = "Data source: NOAA")
flow <- read_csv("https://stahlm.github.io/ENS_215/Data/USGS_streamflow_01351500.csv") %>%
drop_na() %>%
filter(Year >= 1940 & Year < 2025) %>%  # select years 1940 through 2024
mutate(Date = make_date(Year, Month, Day)) # create a Date column that has the dates as an R date object
flow %>%
filter(Year >= 1980) %>%
group_by(Year, Month) %>%
summarize(mean_flow_cfs = mean(flow_cfs, na.rm = T)) %>%
ggplot(aes(x = Year, y = mean_flow_cfs)) +
geom_point() +
geom_smooth(se = F, method = "lm") +
facet_wrap(~ Month, ncol = 12) +
theme_classic() +
theme(axis.text.x = element_blank()) +
labs(x = "",
y = "Flow (cfs)")
flow %>%
filter(Year >= 1980) %>%
group_by(Year, Month) %>%
summarize(mean_flow_cfs = mean(flow_cfs, na.rm = T)) %>%
ggplot(aes(x = Year, y = mean_flow_cfs)) +
geom_point() +
geom_smooth(se = F, method = "lm") +
facet_wrap(~ Month, ncol = 12) +
theme_classic() +
theme(axis.text.x = element_blank()) +
labs(x = "",
y = "Flow (cfs)")
View(flow)
View(precip_data)
library(tidyverse)
precip_mv <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_mohawk_valley_precipitation.csv")
flow <- read_csv("https://stahlm.github.io/ENS_215/Data/USGS_streamflow_01351500.csv") %>%
drop_na() %>%
filter(Year >= 1940 & Year < 2025) %>%  # select years 1940 through 2024
mutate(Date = make_date(Year, Month, Day)) # create a Date column that has the dates as an R date object
precip_mv <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_mohawk_valley_precipitation.csv")
precip_mv <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_mohawk_valley_precipitation.csv")
precip_mv <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_division_mohawk_valley_precipitation.csv")
precip_mv <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_division_mohawk_valley_precipitation.csv", skip = 4)
View(precip_mv)
precip_mv <- precip_mv %>%
filter(YEAR >= 1940, YEAR < 2025)
precip_mv <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_division_mohawk_valley_precipitation.csv", skip = 4)
precip_mv <- precip_mv %>%
rename(Year = YEAR, Month = MONTH) %>%
filter(Year >= 1940, Year < 2025)
flow <- read_csv("https://stahlm.github.io/ENS_215/Data/USGS_streamflow_01351500.csv") %>%
drop_na() %>%
filter(Year >= 1940 & Year < 2025) %>%  # select years 1940 through 2024
mutate(Date = make_date(Year, Month, Day)) # create a Date column that has the dates as an R date object
flow_monthly <- flow %>%
group_by(Year, Month) %>%
summarize(flow_cfs = mean(flow_cfs, na.rm = T),
n_obs = n()
)
View(flow_monthly)
df_precip_flow <- precip_mv %>%
left_join(flow_monthly)
precip_mv <- precip_mv %>%
rename(Year = YEAR, Month = MONTH) %>%
filter(Year >= 1940, Year < 2025) %>%
mutate(Month = as.numeric(Month))
library(tidyverse)
precip_mv <- read_csv("https://stahlm.github.io/ENS_215/Data/noaa_cag_division_mohawk_valley_precipitation.csv", skip = 4)
precip_mv <- precip_mv %>%
rename(Year = YEAR, Month = MONTH) %>%
filter(Year >= 1940, Year < 2025) %>%
mutate(Month = as.numeric(Month))
df_precip_flow <- precip_mv %>%
left_join(flow_monthly)
View(df_precip_flow)
df_precip_flow %>%
ggplot(aes(x = Precip_inches, y = flow_cfs)) +
geom_point()
df_precip_flow %>%
ggplot(aes(x = Precip_inches, y = flow_cfs)) +
geom_point() +
facet_wrap(~Month)
df_precip_flow %>%
ggplot(aes(x = Precip_inches, y = flow_cfs)) +
geom_point() +
scale_y_log10() +
facet_wrap(~Month)
df_precip_flow %>%
ggplot(aes(x = Precip_inches, y = flow_cfs)) +
geom_point() +
scale_y_log10()
df_precip_flow %>%
ggplot(aes(x = Precip_inches, y = flow_cfs)) +
geom_point() +
#scale_y_log10() +
facet_wrap(~Month)
df_precip_flow %>%
ggplot(aes(x = Precip_inches, y = flow_cfs)) +
geom_point() +
geom_smooth(method = "lm")
#scale_y_log10() +
facet_wrap(~Month)
df_precip_flow %>%
ggplot(aes(x = Precip_inches, y = flow_cfs)) +
geom_point() +
geom_smooth(method = "lm") +
#scale_y_log10() +
facet_wrap(~Month)
df_precip_flow %>%
filter(Month == 5) %>%
ggplot(aes(x = Precip_inches, y = flow_cfs)) +
geom_point() +
geom_smooth(method = "lm") +
#scale_y_log10() +
facet_wrap(~Month)
flow_monthly <- flow %>%
mutate(flow_inches = (flow_cfs/((5280^2)*886))*(365*24*60) ) %>%
group_by(Year, Month) %>%
summarize(flow_cfs = mean(flow_cfs, na.rm = T),
flow_inches = mean(flow_inches, na.rm = T),
n_obs = n()
)
flow_monthly <- flow %>%
mutate(flow_inches = (flow_cfs/((5280^2)*886))*(365*24*60*60) ) %>%
group_by(Year, Month) %>%
summarize(flow_cfs = mean(flow_cfs, na.rm = T),
flow_inches = mean(flow_inches, na.rm = T),
n_obs = n()
)
df_precip_flow <- precip_mv %>%
left_join(flow_monthly)
df_precip_flow %>%
filter(Month == 5) %>%
ggplot(aes(x = Precip_inches, y = flow_inches)) +
geom_point() +
geom_smooth(method = "lm") +
#scale_y_log10() +
facet_wrap(~Month)
df_precip_flow %>%
#filter(Month == 5) %>%
ggplot(aes(x = Precip_inches, y = flow_inches)) +
geom_point() +
geom_smooth(method = "lm") +
#scale_y_log10() +
facet_wrap(~Month)
flow_monthly <- flow %>%
mutate(flow_inches = flow_cfs/((5280^2)*886)*(365*24*60*60) ) %>%
group_by(Year, Month) %>%
summarize(flow_cfs = mean(flow_cfs, na.rm = T),
flow_inches = mean(flow_inches, na.rm = T),
n_obs = n()
)
df_precip_flow <- precip_mv %>%
left_join(flow_monthly)
df_precip_flow %>%
#filter(Month == 5) %>%
ggplot(aes(x = Precip_inches, y = flow_inches)) +
geom_point() +
geom_smooth(method = "lm") +
#scale_y_log10() +
facet_wrap(~Month)
flow_monthly <- flow %>%
mutate(flow_inches = flow_cfs/((5280^2)*886)*(365*24*60*60/12)*12 ) %>%
group_by(Year, Month) %>%
summarize(flow_cfs = mean(flow_cfs, na.rm = T),
flow_inches = mean(flow_inches, na.rm = T),
n_obs = n()
)
df_precip_flow %>%
#filter(Month == 5) %>%
ggplot(aes(x = Precip_inches, y = flow_inches)) +
geom_point() +
geom_smooth(method = "lm") +
geom_abline(slope = 1, intercept = 0, color = "red") +
#scale_y_log10() +
facet_wrap(~Month)
library(tidyverse)
library(moderndive)
lm_flow_precip <- lm(flow_inches ~ Precip_inches, data = df_precip_flow)
lm_flow_precip
get_regression_table(lm_mauna_loa, digits = 5)
get_regression_table(lm_flow_precip, digits = 5)
models <- df_precip_flow %>%
group_by(Month) %>%
do(model = lm(flow_inches ~ Precip_inches, data = .))
models
get_regression_table(models)
get_regression_table(models$model)
get_regression_table(models$model[1])
models$model
get_regression_table(models$model[[1]])
get_regression_table(models$model[[4]])
