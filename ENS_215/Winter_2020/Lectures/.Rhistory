y = "Precip (inches)")
precip_data %>%
filter(Year >= 1990,
state_cd == "CA") %>%
group_by(Year, Month) %>%
summarize(mean_precip = mean(Precip_inches, na.rm = T)) %>%
ggplot(aes(x = Year, y = mean_precip)) +
geom_point() +
geom_smooth(se = F, method = "lm") +
facet_wrap(~ Month, ncol = 12) +
theme_classic() +
theme(axis.text.x = element_blank()) +
labs(x = "",
y = "Precip (inches)")
precip_data %>%
filter(Year >= 1990,
state_cd == "FL") %>%
group_by(Year, Month) %>%
summarize(mean_precip = mean(Precip_inches, na.rm = T)) %>%
ggplot(aes(x = Year, y = mean_precip)) +
geom_point() +
geom_smooth(se = F, method = "lm") +
facet_wrap(~ Month, ncol = 12) +
theme_classic() +
theme(axis.text.x = element_blank()) +
labs(x = "",
y = "Precip (inches)")
precip_data %>%
filter(Year >= 1990,
state_cd == "MA") %>%
group_by(Year, Month) %>%
summarize(mean_precip = mean(Precip_inches, na.rm = T)) %>%
ggplot(aes(x = Year, y = mean_precip)) +
geom_point() +
geom_smooth(se = F, method = "lm") +
facet_wrap(~ Month, ncol = 12) +
theme_classic() +
theme(axis.text.x = element_blank()) +
labs(x = "",
y = "Precip (inches)")
precip_data %>%
filter(Year >= 1980,
state_cd == "FL") %>%
group_by(Year, Month) %>%
summarize(mean_precip = mean(Precip_inches, na.rm = T)) %>%
ggplot(aes(x = Year, y = mean_precip)) +
geom_point() +
geom_smooth(se = F, method = "lm") +
facet_wrap(~ Month, ncol = 12) +
theme_classic() +
theme(axis.text.x = element_blank()) +
labs(x = "",
y = "Precip (inches)")
precip_data %>%
filter(Year >= 1980,
state_cd == "CA") %>%
group_by(Year, Month) %>%
summarize(mean_precip = mean(Precip_inches, na.rm = T)) %>%
ggplot(aes(x = Year, y = mean_precip)) +
geom_point() +
geom_smooth(se = F, method = "lm") +
facet_wrap(~ Month, ncol = 12) +
theme_classic() +
theme(axis.text.x = element_blank()) +
labs(x = "",
y = "Precip (inches)")
precip_data %>%
filter(Year >= 1980,
state_cd == "CA") %>%
group_by(Year, Month) %>%
summarize(mean_precip = mean(Precip_inches, na.rm = T)) %>%
ggplot(aes(x = Year, y = mean_precip)) +
geom_point() +
geom_smooth(se = F, method = "lm") +
facet_wrap(~ Month, ncol = 12) +
theme_classic() +
theme(axis.text.x = element_blank()) +
labs(x = "",
y = "Precip (inches)")
flow %>%
filter(Year >= 1980) %>%
group_by(Year, Month) %>%
summarize(mean_flow_cfs = mean(flow_cfs, na.rm = T)) %>%
ggplot(aes(x = Year, y = mean_flow_cfs)) +
geom_point() +
geom_smooth(se = F, method = "lm") +
facet_wrap(~ Month, ncol = 12) +
theme_classic() +
theme(axis.text.x = element_blank()) +
labs(x = "",
y = "Flow (cfs)")
precip_data %>%
filter(Year >= 1980,
state_cd == "CA") %>%
ggplot(aes(x = Year, y = Precip_inches)) +
geom_point() +
geom_smooth(se = F, method = "lm") +
facet_wrap(~ Month, ncol = 12) +
theme_classic() +
theme(axis.text.x = element_blank()) +
labs(x = "",
y = "Precip (inches)")
precip_data %>%
filter(Year >= 1980,
state_cd == "CA") %>%
ggplot(aes(x = Year, y = Precip_inches)) +
geom_line() +
geom_point() +
theme_classic() +
labs(x = "Year",
y = "Precip (inches)")
precip_data %>%
filter(Year >= 1980,
state_cd == "CA") %>%
mutate(date = ymd(paste(Year,Month,15)) ) %>%
ggplot(aes(x = date, y = Precip_inches)) +
geom_line() +
geom_point() +
theme_classic() +
labs(x = "Year",
y = "Precip (inches)")
precip_data %>%
filter(Year >= 1980,
state_cd == "CA") %>%
mutate(date = ymd(paste(Year,Month,15)) ) %>%
ggplot(aes(x = date, y = Precip_inches)) +
geom_line() +
geom_point() +
theme_classic() +
labs(x = "Year",
y = "Precip (inches)")
View(precip_data)
flow %>%
filter(Year >= 1980) %>%
group_by(Year, Month) %>%
summarize(mean_flow_cfs = mean(flow_cfs, na.rm = T)) %>%
ggplot(aes(x = Year, y = mean_flow_cfs)) +
geom_point() +
geom_smooth(se = F, method = "lm") +
facet_wrap(~ Month, ncol = 12) +
theme_classic() +
theme(axis.text.x = element_blank()) +
labs(x = "",
y = "Flow (cfs)")
precip_data %>%
filter(Year >= 1980,
state_cd == "CA") %>%
ggplot(aes(x = Year, y = Precip_inches)) +
geom_point() +
geom_smooth(se = F, method = "lm") +
facet_wrap(~ Month, ncol = 12) +
theme_classic() +
theme(axis.text.x = element_blank()) +
labs(x = "",
y = "Precip (inches)",
title = "California Monthly Precipitation",
subtitle = "1980-2017")
precip_data %>%
filter(Year >= 1980,
state_cd == "CA") %>%
ggplot(aes(x = Year, y = Precip_inches)) +
geom_point() +
geom_smooth(se = F, method = "lm") +
facet_wrap(~ Month, ncol = 12) +
theme_classic() +
theme(axis.text.x = element_blank()) +
labs(x = "",
y = "Precip (inches)",
title = "California Monthly Precipitation",
subtitle = "1980-2017",
caption = "Data source: NOAA")
library(tidyverse)
library(patchwork)
library(readxl)
COVID_data <- read_xlsx(path = "https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Data/COVID-19_data_2020_02_27.xlsx")
earthquakes <- read_csv("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Data/4.5_month_earthquakes_USGS_2020.csv")
head(earthquakes)
COVID_data <- read_xlsx(path = "https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Data/COVID-19_data_2020_02_27.xlsx")
COVID_data <- read_xlsx(path = "https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Data/COVID-19_data_2020_02_27.xlsx")
COVID_data <- read_xlsx(path = "https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Data/COVID-19_data_2020_02_27.xlsx")
COVID_data <- read_xlsx("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Data/COVID-19_data_2020_02_27.xlsx")
COVID_data <- read_xlsx("https://stahlm.github.io/ENS_215/Data/COVID-19_data_2020_02_27.xlsx")
COVID_data <- read_csv("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Data/COVID-19_data_2020_02_27.csv", skip = 2)
View(COVID_data)
COVID_data <- read_csv("https://stahlm.github.io/ENS_215/Data/COVID-19_data_2020_02_27.csv", skip = 2)
COVID_data <- read_csv("https://stahlm.github.io/ENS_215/Data/COVID-19_data_2020_02_27.xlsx", skip = 2)
COVID_data <- read_xlsx("https://stahlm.github.io/ENS_215/Data/COVID-19_data_2020_02_27.xlsx")
COVID_data <- read_csv("https://stahlm.github.io/ENS_215/Data/COVID-19_data_2020_02_27.csv", skip = 2)
COVID_data <- read_csv("https://stahlm.github.io/ENS_215/Data/COVID-19_data_2020_02_27.csv", skip = 2) %>%
select(Country, Cases, Deaths)
View(COVID_data)
library(tidyverse)
library(patchwork)
library(readxl)
map_data_usa <- map_data("state") # load in US states map data from the maps package and convert it to a compatible format for plotting in with ggplot()
head(map_data_usa) # take a look at the first few rows of map_data_usa
map_us <- map_data_usa %>%
ggplot() +
geom_polygon(aes(long, lat, group = group), color = "black", fill = "gray")
map_us
map_us + coord_quickmap()
map_us_bonne <- map_us +
coord_map(projection = "bonne", lat0 = 50) +
theme_bw() +
labs(title = "Bonne projection")
map_us_conic <- map_us +
coord_map(projection = "conic", lat0 = 30) +
theme_bw() +
labs(title = "Conic projection")
map_us_bonne + map_us_conic  # making use of the patchwork package to nicely arrange the two maps
state_cap_locs <- read_csv("https://stahlm.github.io/ENS_215/Data/us_capitals_locs.csv", skip = 2)
state_cap_locs <- state_cap_locs %>%
filter(state_cd %in% state.abb) %>% # remove locations that aren't US state list (e.g. Puerto Rico, Guam, ...)
filter(state_cd != "AK", state_cd != "HI") # remove capitals of Alaska and Hawaii (our basemap only has the lower 48 states)
map_us +
geom_point(data = state_cap_locs, aes(x = long_deg, y = lat_deg), color = "blue") +
coord_map(projection = "bonne", lat0 = 50) +
theme_minimal()
map_data_usa <- map_data("state") # get data frame with the spatial data for borders of lower 48 states
head(map_data_usa)
map_data_ne <- map_data_usa %>%
filter(region %in% c("massachusetts", "new york", "connecticut", "rhode island", "maine",
"vermont","new hampshire"))
map_data_ne %>%
ggplot() +
geom_polygon(aes(long, lat, group = group), color = "black", fill = "gray") +
coord_map(projection = "bonne", lat0 = 50) +
theme_minimal()
state_temps <- read_csv("https://stahlm.github.io/ENS_215/Data/NOAA_State_Temp_Lab_Data.csv")
state_mean_temps <- state_temps %>%
group_by(state_cd) %>%
summarize(mean_temp = mean(Avg_Temp_F))
state_mean_temps
state_name_table = tibble(state_name = tolower(state.name),
state_cd = state.abb, us_region = state.region)
state_mean_temps <- left_join(state_mean_temps, state_name_table)
head(state_mean_temps)
state_mean_temps <- state_mean_temps %>%
rename(region = state_name)
map_data_usa_temps <- left_join(map_data_usa, state_mean_temps)
head(map_data_usa_temps)
map_data_usa_temps %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = mean_temp), color = "black") +
scale_fill_gradient(low = "blue", high = "red") +
coord_map(projection = "bonne", lat0 = 50) +
theme_void()
map_data_usa_temps %>%
drop_na(us_region) %>% # there are some NA rows that we will drop
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = mean_temp), color = "black") +
scale_fill_gradient(low = "blue", high = "red") +
coord_quickmap() +
theme_void() +
facet_wrap(~ us_region, scales = "free")
earthquakes <- read_csv("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Data/4.5_month_earthquakes_USGS_2020.csv")
head(earthquakes)
map_world_data <- map_data("world")
earthquake_map <- map_world_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group), fill = "lightgray", color = "black") +
geom_point(data = earthquakes, aes(longitude, latitude, size = mag, color = mag),
shape = 21, fill = "NA", stroke = 1.5) +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Earthquakes > 4.5 magnitude in the past 30 days",
subtitle = "Date window: 28-Jan to 27-Feb-2020",
caption = "Data source: USGS") +
theme_void() +
coord_quickmap()
earthquake_map
readxl::read_xlsx()
View(map_world_data)
COVID_map_data <- left_join(map_world_data, COVID_data)
COVID_data <- read_csv("https://stahlm.github.io/ENS_215/Data/COVID-19_data_2020_02_27.csv", skip = 2) %>%
select(Country, Cases, Deaths) %>%
rename(region = Country)
COVID_map_data <- left_join(map_world_data, COVID_data)
View(COVID_map_data)
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = Cases), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Earthquakes > 4.5 magnitude in the past 30 days",
subtitle = "Date window: 28-Jan to 27-Feb-2020",
caption = "Data source: USGS") +
theme_void() +
coord_quickmap()
earthquake_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = Cases), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Earthquakes > 4.5 magnitude in the past 30 days",
subtitle = "Date window: 28-Jan to 27-Feb-2020",
caption = "Data source: USGS") +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = Cases), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "As of 27-Feb-2020") +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = Cases), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = Cases), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red") +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = Cases), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red", breaks = c(25, 50, 100, 250, 500, 1000, 5000)) +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = Cases), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_continuous(type = "gradient",
breaks = c(25, 50, 100, 250, 500, 1000, 5000)) +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = Cases), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_continuous(type = "gradient") +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Cases)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_continuous(type = "gradient") +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Cases)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red") +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Cases)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,12,16),
labels = 2^c(0,4,8,12,16)) +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Cases)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,12,16),
labels = 2^c(0,4,8,12,16)) +
theme_void() +
labs(fill = "Cases") +
coord_quickmap()
covid_map
covid_map_cases <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Cases)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,12,16),
labels = 2^c(0,4,8,12,16)) +
theme_void() +
labs(fill = "Cases") +
coord_quickmap()
covid_map_cases
covid_map_deaths <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Deaths)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Deaths",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,12,16),
labels = 2^c(0,4,8,12,16)) +
theme_void() +
labs(fill = "Deaths") +
coord_quickmap()
covid_map_deaths
covid_map_cases / covid_map_deaths
covid_map_cases / covid_map_deaths
covid_map_cases <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Cases)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,12,16),
labels = 2^c(0,4,8,12,16)) +
theme_void() +
labs(fill = "Cases") +
coord_quickmap()
covid_map_cases
covid_map_deaths <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Deaths)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Deaths",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,12,16),
labels = 2^c(0,4,8,12,16)) +
theme_void() +
labs(fill = "Deaths") +
coord_quickmap()
covid_map_deaths
2^8
2^12
covid_map_cases <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Cases)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,12,16),
labels = 2^c(0,4,8,12,16)) +
theme_void() +
labs(fill = "Cases") +
coord_quickmap()
covid_map_cases
covid_map_deaths <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Deaths)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Deaths",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,12),
labels = 2^c(0,4,8,12)) +
theme_void() +
labs(fill = "Deaths") +
coord_quickmap()
covid_map_deaths
View(COVID_data)
2^10
covid_map_cases <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Cases)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,12,16),
labels = 2^c(0,4,8,12,16)) +
theme_void() +
labs(fill = "Cases") +
coord_quickmap()
covid_map_cases
covid_map_deaths <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Deaths)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Deaths",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,10,12),
labels = 2^c(0,4,8,10,12)) +
theme_void() +
labs(fill = "Deaths") +
coord_quickmap()
covid_map_deaths
