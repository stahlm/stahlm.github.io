source("get_usgs_elevation_data.R")
source("define_image_size.R")
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("./Spatial_data", "schenectady-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster(elev_file)
elev_img <- raster::raster(elev_file)
elev_img <- raster::raster(elev_file)
elev_img <- raster::raster(elev_file)
# download elevation data
elev_file <- file.path("./Spatial_data", "schenectady-elevation.TIFF")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster(elev_file)
elev_img %>%
tm_shape() +
tm_raster(palette = terrain.colors(10), n = 10)
source("get_usgs_elevation_data.R")
source("define_image_size.R")
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("./Spatial_data", "schenectady-elevation.TIFF")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster(elev_file)
elev_img <- raster::raster(elev_file)
elev_img <- raster::raster(elev_file)
elev_file
elev_img <- raster::raster("./Spatial_data/schenectady-elevation.TIFF")
source("get_usgs_elevation_data.R")
source("define_image_size.R")
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
library(tidyverse)
library(tmap)
library(sf)
source("get_usgs_elevation_data.R")
source("define_image_size.R")
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("./Spatial_data", "schenectady-elevation.TIFF")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster("./Spatial_data/schenectady-elevation.TIFF")
elev_img %>%
tm_shape() +
tm_raster(palette = terrain.colors(10), n = 10)
elev_img <- raster::raster("./Spatial_data/schenectady-elevation.TIFF")
elev_img <- raster::raster("./Spatial_data/schenectady-elevation.TIFF")
library(tidyverse)
library(tmap)
library(sf)
source("get_usgs_elevation_data.R")
source("define_image_size.R")
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("./Spatial_data", "schenectady-elevation.TIFF")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster("./Spatial_data/schenectady-elevation.TIFF")
elev_img %>%
tm_shape() +
tm_raster(palette = terrain.colors(10), n = 10) +
tm_layout(legend.outside = T)
elev_img %>%
tm_shape() +
tm_raster() +
tm_layout(legend.outside = T)
elev_img %>%
tm_shape() +
tm_raster(style = "cont") +
tm_layout(legend.outside = T)
elev_img %>%
tm_shape() +
tm_raster(style = "cont", palette = terrain.colors()) +
tm_layout(legend.outside = T)
elev_img %>%
tm_shape() +
tm_raster(style = "cont", palette = terrain.colors(10)) +
tm_layout(legend.outside = T)
source("get_usgs_elevation_data.R")
source("define_image_size.R")
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("./Spatial_data", "schenectady-elevation.TIFF")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster("./Spatial_data/schenectady-elevation.TIFF")
elev_img %>%
tm_shape() +
tm_raster(style = "cont", palette = terrain.colors(10)) +
tm_layout(legend.outside = T)
elev_img %>%
tm_shape() +
tm_raster(style = "cont", palette = terrain.colors(10)) +
tm_layout(legend.outside = T)
elev_img %>%
tm_shape() +
tm_raster(style = "cont", palette = terrain.colors(10)) +
tm_layout(legend.outside = T,
title = "Schenectady elevation data")
elev_img %>%
tm_shape() +
tm_raster(style = "cont", palette = terrain.colors(10)) +
tm_layout(legend.outside = T,
main.title = "Schenectady elevation data",)
elev_img %>%
tm_shape() +
tm_raster(style = "cont", palette = terrain.colors(10)) +
tm_layout(legend.outside = T,
main.title = "Schenectady elevation data")
elev_img %>%
tm_shape() +
tm_raster(style = "cont", palette = terrain.colors(10)) +
tm_layout(legend.outside = T,
main.title = "Schenectady elevation map")
library(tidyverse)
library(tmap)
library(sf)
library(raster)
library(tidyverse)
library(tmap)
library(sf)
library(raster)
raster_world_elev <- raster("./Spatial_data/Elevation.TIFF")
raster::plot(raster_world_elev)
raster_world_elev <- raster("./Spatial_data/World_elev.tif")
raster::plot(raster_world_elev)
maxValue(raster_world_elev)
raster::maxValue(raster_world_elev)
View(raster_world_elev)
raster_world_elev
raster_world_elev <- raster("./Spatial_data/World_elev.tif")
raster_world_elev[raster_world_elev > 12000] <- NA
raster::plot(raster_world_elev)
raster::plot(raster_world_elev)
raster_world_elev <- raster::raster("./Spatial_data/World_elev.tif")
raster::plot(raster_world_elev)
raster::maxValue(raster_world_elev)
raster::maxValue(raster_world_elev, na.rm = T)
raster::minValue(raster_world_elev, na.rm = T)
raster::minValue(raster_world_elev)
hist(raster_world_elev)
max(raster_world_elev)
cellStats(raster_world_elev)
cellStats(raster_world_elev,stat = max())
cellStats(raster_world_elev,stat = max)
cellStats(raster_world_elev,
stat = max)
cellStats(raster_world_elev,
stat = max)
cellStats(raster_world_elev,
stat = min)
raster_world_elev <- raster::raster("./Spatial_data/World_elev.tif")
raster_world_elev[raster_world_elev == 99999] <- 0
raster::plot(raster_world_elev)
library(tidyverse)
library(tmap)
library(sf)
library(raster) # You will probably need to install this package
source("get_usgs_elevation_data.R")
source("define_image_size.R")
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("./Spatial_data", "schenectady-elevation.TIFF")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster("./Spatial_data/schenectady-elevation.TIFF")
raster_world_elev_with_ocean <- raster::raster("./Spatial_data/World_elev.tif")
raster_world_elev_with_ocean <- raster_world_elev_with_ocean[raster_world_elev_with_ocean == 99999] <- 0
raster_world_elev_with_ocean <- raster::raster("./Spatial_data/World_elev.tif")
raster_world_elev_with_ocean <- raster_world_elev_with_ocean[raster_world_elev_with_ocean == 99999] <- 0
raster::plot(raster_world_elev_with_ocean)
raster_world_elev_with_ocean <- raster::raster("./Spatial_data/World_elev.tif")
raster_world_elev_with_ocean[raster_world_elev_with_ocean == 99999] <- 0
raster::plot(raster_world_elev_with_ocean)
library(tidyverse)
library(tmap)
library(sf)
library(raster) # You will probably need to install this package
source("get_usgs_elevation_data.R")
source("define_image_size.R")
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("./Spatial_data", "schenectady-elevation.TIFF")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster("./Spatial_data/schenectady-elevation.TIFF")
raster_world_elev_with_ocean <- raster::raster("./Spatial_data/World_elev.tif")
raster_world_elev_with_ocean[raster_world_elev_with_ocean == 99999] <- 0
raster::plot(raster_world_elev_with_ocean)
raster::plot(raster_world_elev)
raster_world_elev[raster_world_elev == 99999] <- NA
raster::plot(raster_world_elev)
raster::cellStats(raster_world_elev_with_ocean, stat = max)
raster::cellStats(raster_world_elev_with_ocean, stat = mean)
library(tidyverse)
library(tmap)
library(sf)
library(raster) # You will probably need to install this package
source("get_usgs_elevation_data.R")
source("define_image_size.R")
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("./Spatial_data", "schenectady-elevation.TIFF")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster("./Spatial_data/schenectady-elevation.TIFF")
raster_world_elev
raster_world_elev__ft <- raster_world_elev * 3.28084
raster_world_elev__ft <- raster_world_elev * 3.28084
raster::cellStats(raster_world_elev__ft)
raster::cellStats(raster_world_elev__ft, stat = mean)
raster::cellStats(raster_world_elev__ft, stat = mean)
raster::plot(raster_world_elev__ft)
raster_atmos_pressure <- coeff_p0 * exp( -(coeff_g * raster_world_elev * coeff_M)/(coeff_T0 * coeff_R0) )
coeff_p0 <- 1 # Sea level standard atmospheric pressure (Atmospheres)
#coeff_L <- 	0.00976 # Temperature lapse rate, = g/cp for dry air (K/m)
#coeff_cp <- 1004.68506  # Constant-pressure specific heat (J/(kg·K))
coeff_T0 <- 288.16 # Sea level standard temperature(K)
coeff_g <- 9.80665 # 	Earth-surface gravitational acceleration (m/s^2)
coeff_M <- 0.02896968 # Molar mass of dry air (kg/mol)
coeff_R0 <- 8.314462618 #	Universal gas constant (J/(mol*K))
raster_atmos_pressure <- coeff_p0 * exp( -(coeff_g * raster_world_elev * coeff_M)/(coeff_T0 * coeff_R0) )
raster::plot(raster_atmos_pressure)
raster_day_temps <- raster::raster("./Spatial_data/Day_temp_2001_march.tif")
plot(raster_day_temps)
raster_day_temps
cellStats(raster_day_temps, stat = max)
raster_day_temps <- raster::raster("./Spatial_data/Day_temp_2001_march.tif")
raster_day_temps[raster_day_temps == 99999] <- NA
raster_night_temps <- raster::raster("./Spatial_data/Night_temp_2001_march.tif")
raster_day_temps <- raster::raster("./Spatial_data/Day_temp_2001_march.tif")
raster_day_temps[raster_day_temps == 99999] <- NA
raster_night_temps <- raster::raster("./Spatial_data/Night_temp_2001_march.TIFF")
raster_night_temps[raster_night_temps == 99999] <- NA
plot(raster_day_temps)
plot(raster_night_temps)
raster_temps_diff <- raster_day_temps - raster_night_temps
raster::plot(raster_temps_diff)
raster::hist(raster_temps_diff)
raster::hist(raster_temps_diff)
raster::hist(raster_temps_diff)
raster::hist(raster_temps_diff)
raster::hist(raster_temps_diff)
raster::hist(raster_temps_diff)
reclass_df <- c(-Inf, 2, 1,
2, 5, 2,
5, 15, 3,
15, Inf, 4)
reclass_df <- c(-Inf, 2, 1,
2, 5, 2,
5, 15, 3,
15, Inf, 4)
reclass_m <- matrix(reclass_df,
ncol = 3,
byrow = TRUE)
reclass_df <- c(-Inf, 2, 1,
2, 5, 2,
5, 15, 3,
15, Inf, 4)
reclass_m <- matrix(reclass_df,
ncol = 3,
byrow = TRUE)
reclass_m
raster_temps_diff_reclass <- raster::reclassify(raster_temps_diff,
reclass_df)
raster::plot(raster_temps_diff_reclass)
raster::plot(raster_temps_diff_reclass,
col = heat.colors(4))
raster::plot(raster_temps_diff_reclass,
col = topo.colors(4))
raster::plot(raster_temps_diff_reclass,
col = terrain.colors(4))
reclass_df <- c(-Inf, 3, 1,
3, 6, 2,
6, 15, 3,
15, Inf, 4)
reclass_m <- matrix(reclass_df,
ncol = 3,
byrow = TRUE)
reclass_m
raster_temps_diff_reclass <- raster::reclassify(raster_temps_diff,
reclass_df)
raster::plot(raster_temps_diff_reclass,
col = terrain.colors(4))
borders_us_states <-  spData::us_states
View(borders_us_states)
a <-spData::world
View(a)
borders_us_states <-  spData::world %>%
filter(name_long == "United States")
borders_us <-  spData::world %>%
filter(name_long == "United States")
borders_us %>%
tm_shape() +
tm_borders()
borders_data <-  spData::world %>%
filter(name_long == "Australia")
borders_data %>%
tm_shape() +
tm_borders()
borders_data %>%
tm_shape() +
tm_borders()
raster_elev_cropped <- raster::crop(raster_world_elev,
borders_data)
raster::plot(raster_elev_cropped)
raster_elev_aus <- raster::mask(raster_world_elev,
borders_data)
raster::plot(raster_elev_aus)
borders_data <-  spData::world %>%
filter(name_long == "Saudi Arabia")
borders_data %>%
tm_shape() +
tm_borders()
borders_data <-  spData::world %>%
filter(name_long == "India")
borders_data <-  spData::world %>%
filter(name_long == "South Africa")
borders_data %>%
tm_shape() +
tm_borders()
raster_elev_southaf <- raster::mask(raster_world_elev,
borders_data)
raster::plot(raster_elev_southaf)
raster::plot(raster_elev_southaf)
raster::plot(raster_elev_southaf)
raster::plot(raster_elev_southaf)
raster_elev_southaf <- raster::crop(raster_elev_southaf,
borders_data)
raster::plot(raster_elev_southaf)
raster_world_elev <- raster::raster("./Spatial_data/World_elev.TIFF")
# Data was obtained from: https://neo.sci.gsfc.nasa.gov/view.php?datasetId=SRTM_RAMP2_TOPO
raster_world_elev
raster::plot(raster_world_elev)
cellStats(raster_world_elev,
stat = max)
raster_world_elev[raster_world_elev == 99999] <- NA
raster::plot(raster_world_elev)
raster_world_elev_with_ocean <- raster::raster("./Spatial_data/World_elev.tif")
raster_world_elev_with_ocean <- raster::raster("./Spatial_data/World_elev.TIFF")
raster_world_elev_with_ocean[raster_world_elev_with_ocean == 99999] <- 0
raster::plot(raster_world_elev_with_ocean)
raster::cellStats(raster_world_elev_with_ocean, stat = max)
raster::cellStats(raster_world_elev_with_ocean, stat = mean)
raster_world_elev__ft <- raster_world_elev * 3.28084
raster::cellStats(raster_world_elev__ft, stat = mean)
raster::plot(raster_world_elev__ft)
raster::plot(raster_atmos_pressure)
raster_atmos_pressure <- coeff_p0 * exp( -(coeff_g * raster_world_elev * coeff_M)/(coeff_T0 * coeff_R0) )
raster::plot(raster_atmos_pressure)
raster_elev_southaf <- raster::mask(raster_world_elev,
borders_data)
raster::plot(raster_elev_southaf)
raster_elev_southaf <- raster::crop(raster_elev_southaf,
borders_data)
raster::plot(raster_elev_southaf)
raster_elev_southaf <- raster::mask(raster_world_elev,
borders_data_southaf)
borders_data <-  spData::world # borders of all countries
# Get just South Africa's borders
borders_data_southaf <- borders_data %>%
filter(name_long == "South Africa")
borders_data_southaf %>%
tm_shape() +
tm_borders()
raster_elev_southaf <- raster::mask(raster_world_elev,
borders_data_southaf)
raster::plot(raster_elev_southaf)
raster_elev_southaf <- raster::crop(raster_elev_southaf,
borders_data_southaf)
raster::plot(raster_elev_southaf)
tm_shape(raster_world_elev) +
tm_raster() +
tm_shape(borders_data) +
tm_borders()
tm_shape(raster_world_elev) +
tm_raster() +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "BOTTOM"))
tm_shape(raster_world_elev) +
tm_raster() +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "CENTER"))
tm_shape(raster_world_elev) +
tm_raster() +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
tm_shape(raster_world_elev) +
tm_raster(style = "cont") +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
raster_low_elev <- raster_world_elev
raster_low_elev[raster_low_elev > 50] <- NA
tm_shape(raster_low_elev) +
tm_raster(style = "cont") +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
raster_low_elev <- raster_world_elev
raster_low_elev[raster_low_elev > 100] <- NA
tm_shape(raster_low_elev) +
tm_raster(style = "cont") +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
raster_low_elev <- raster_world_elev
raster_low_elev[raster_low_elev < 4000] <- NA
tm_shape(raster_low_elev) +
tm_raster(style = "cont") +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
raster_low_elev <- raster_world_elev
raster_low_elev[raster_low_elev < 2000] <- NA
tm_shape(raster_low_elev) +
tm_raster(style = "cont") +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
raster_low_elev <- raster_world_elev
raster_low_elev[raster_low_elev < 1500] <- NA
tm_shape(raster_low_elev) +
tm_raster(style = "cont") +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
raster_high_elev <- raster_world_elev
raster_high_elev[raster_high_elev < 1500] <- NA
raster_high_elev[raster_high_elev >= 1500] <- 1
tm_shape(raster_low_elev) +
tm_raster(style = "cont") +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
tm_shape(raster_high_elev) +
tm_raster(style = "cont") +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
tm_shape(raster_high_elev) +
tm_raster() +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
tm_shape(raster_high_elev) +
tm_raster(col = "darkgreen") +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
tm_shape(raster_high_elev) +
tm_raster(palette = "darkgreen") +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"))
tm_shape(raster_high_elev) +
tm_raster(palette = "darkgreen") +
tm_shape(borders_data) +
tm_borders() +
tm_layout(legend.position = c("LEFT", "center"),
main.title = "High elevation (>1500 m) regions of the world")
