streamflows_wide <- streamflows %>%
pivot_wider(names_from = site_no, values_from = flow_cfs)
View(streamflows)
streamflows %>%
filter(site_no == "01357500") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T))
streamflows %>%
filter(site_no == "01357500") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T)) %>%
mutate(Year = Year - min(Year))
streamflows %>%
filter(site_no == "01357500") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = Year - min(Year))
streamflows %>%
filter(site_no == "01357500") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year))
streamflows %>%
filter(site_no == "01357500") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = mean_flow)) %>%
geom_point() +
facet_wrap(~ Month)
streamflows %>%
filter(site_no == "01357500") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_point() +
facet_wrap(~ Month)
streamflows %>%
filter(site_no == "01357500") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_point() +
theme_classic() +
facet_wrap(~ Month, nrow = 1)
streamflows %>%
filter(site_no == "01357500") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_point() +
theme_bw() +
facet_wrap(~ Month, nrow = 1)
streamflows %>%
filter(site_no == "01357500") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_point() +
theme_bw() +
facet_wrap(~ Month, nrow = 1)
streamflows %>%
filter(site_no == "01357500") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_point() +
theme_bw() +
facet_wrap(~ Month, nrow = 1)
streamflows %>%
filter(site_no == "01357500") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_point() +
theme_bw() +
facet_wrap(~ Month, nrow = 1)
streamflows %>%
filter(site_no == "01357500") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_point() +
theme_bw() +
facet_wrap(~ Month, nrow = 1)
streamflows %>%
filter(site_no == "01357500") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_point() +
geom_smooth(method = "lm") +
theme_bw() +
facet_wrap(~ Month, nrow = 1)
streamflows %>%
filter(site_no == "01335754") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_point() +
geom_smooth(method = "lm") +
theme_bw() +
facet_wrap(~ Month, nrow = 1)
streamflows <- read_csv("https://stahlm.github.io/ENS_215/Data/Hud_Mow_streamflow_data.csv") %>%
filter(flow_cfs >= 0,
lubridate::year(dateTime) >= 1980) %>%
mutate(Month = lubridate::month(dateTime),
Year = lubridate::year(dateTime)) %>%
select(dateTime, Year, Month, site_no, flow_cfs)
streamflows %>%
filter(site_no == "01335754") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_point() +
geom_smooth(method = "lm") +
theme_bw() +
facet_wrap(~ Month, nrow = 1)
streamflows <- read_csv("https://stahlm.github.io/ENS_215/Data/Hud_Mow_streamflow_data.csv") %>%
filter(flow_cfs >= 0,
lubridate::year(dateTime) >= 1950) %>%
mutate(Month = lubridate::month(dateTime),
Year = lubridate::year(dateTime)) %>%
select(dateTime, Year, Month, site_no, flow_cfs)
streamflows %>%
filter(site_no == "01335754") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_point() +
geom_smooth(method = "lm") +
theme_bw() +
facet_wrap(~ Month, nrow = 1)
streamflows <- read_csv("https://stahlm.github.io/ENS_215/Data/Hud_Mow_streamflow_data.csv") %>%
filter(flow_cfs >= 0,
lubridate::year(dateTime) >= 1950) %>%
mutate(Month = lubridate::month(dateTime),
Year = lubridate::year(dateTime)) %>%
select(dateTime, Year, Month, site_no, flow_cfs)
streamflows %>%
filter(site_no == "01335754") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_point() +
geom_smooth(method = "lm") +
theme_bw() +
facet_wrap(~ Month)
streamflows <- read_csv("https://stahlm.github.io/ENS_215/Data/Hud_Mow_streamflow_data.csv") %>%
filter(flow_cfs >= 0,
lubridate::year(dateTime) >= 1950) %>%
mutate(Month = lubridate::month(dateTime),
Year = lubridate::year(dateTime)) %>%
select(dateTime, Year, Month, site_no, flow_cfs)
streamflows %>%
filter(site_no == "01335754") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_point() +
geom_smooth(method = "lm") +
theme_bw() +
facet_wrap(~ Month)
streamflows <- read_csv("https://stahlm.github.io/ENS_215/Data/Hud_Mow_streamflow_data.csv") %>%
filter(flow_cfs >= 0,
lubridate::year(dateTime) >= 1950) %>%
mutate(Month = lubridate::month(dateTime),
Year = lubridate::year(dateTime)) %>%
select(dateTime, Year, Month, site_no, flow_cfs)
streamflows %>%
filter(site_no == "01335754") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_point() +
geom_smooth(method = "lm") +
theme_bw() +
facet_wrap(~ Month, scales = "free_y")
streamflows <- read_csv("https://stahlm.github.io/ENS_215/Data/Hud_Mow_streamflow_data.csv") %>%
filter(flow_cfs >= 0,
lubridate::year(dateTime) >= 1950) %>%
mutate(Month = lubridate::month(dateTime),
Year = lubridate::year(dateTime)) %>%
select(dateTime, Year, Month, site_no, flow_cfs)
streamflows %>%
filter(site_no == "01357500") %>%
group_by(Year, Month) %>%
summarize(mean_flow = mean(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_point() +
geom_smooth(method = "lm") +
theme_bw() +
facet_wrap(~ Month, scales = "free_y")
streamflows <- read_csv("https://stahlm.github.io/ENS_215/Data/Hud_Mow_streamflow_data.csv") %>%
filter(flow_cfs >= 0,
lubridate::year(dateTime) >= 1950) %>%
mutate(Month = lubridate::month(dateTime),
Year = lubridate::year(dateTime)) %>%
select(dateTime, Year, Month, site_no, flow_cfs)
streamflows %>%
filter(site_no == "01357500") %>%
group_by(Year, Month) %>%
summarize(flow_stat = median(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = flow_stat)) +
geom_point() +
geom_smooth(method = "lm") +
theme_bw() +
facet_wrap(~ Month, scales = "free_y")
streamflows <- read_csv("https://stahlm.github.io/ENS_215/Data/Hud_Mow_streamflow_data.csv") %>%
filter(flow_cfs >= 0,
lubridate::year(dateTime) >= 1950) %>%
mutate(Month = lubridate::month(dateTime),
Year = lubridate::year(dateTime)) %>%
select(dateTime, Year, Month, site_no, flow_cfs)
streamflows %>%
filter(site_no == "01357500") %>%
group_by(Year, Month) %>%
summarize(flow_stat = min(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = flow_stat)) +
geom_point() +
geom_smooth(method = "lm") +
theme_bw() +
facet_wrap(~ Month, scales = "free_y")
streamflows <- read_csv("https://stahlm.github.io/ENS_215/Data/Hud_Mow_streamflow_data.csv") %>%
filter(flow_cfs >= 0,
lubridate::year(dateTime) >= 1950) %>%
mutate(Month = lubridate::month(dateTime),
Year = lubridate::year(dateTime)) %>%
select(dateTime, Year, Month, site_no, flow_cfs)
streamflows %>%
filter(site_no == "01357500") %>%
group_by(Year, Month) %>%
summarize(flow_stat = max(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = flow_stat)) +
geom_point() +
geom_smooth(method = "lm") +
theme_bw() +
facet_wrap(~ Month, scales = "free_y")
streamflows <- read_csv("https://stahlm.github.io/ENS_215/Data/Hud_Mow_streamflow_data.csv") %>%
filter(flow_cfs >= 0,
lubridate::year(dateTime) >= 1950) %>%
mutate(Month = lubridate::month(dateTime),
Year = lubridate::year(dateTime)) %>%
select(dateTime, Year, Month, site_no, flow_cfs)
streamflows %>%
filter(site_no == "01357500") %>%
group_by(Year, Month) %>%
summarize(flow_stat = mean(flow_cfs, na.rm = T)) %>%
ungroup() %>%
mutate(Year = 1 + Year - min(Year)) %>%
ggplot(aes(x = Year, y = flow_stat)) +
geom_point() +
geom_smooth(method = "lm") +
theme_bw() +
facet_wrap(~ Month, scales = "free_y")
library(tidyverse)
precip_MA <- read_csv("https://stahlm.github.io/ENS_215/Data/precip_MA.csv")
precip_NY <- read_csv("https://stahlm.github.io/ENS_215/Data/precip_NY.csv")
precip_combined <- bind_rows(precip_MA, precip_NY)
# Your code here
# Your code here
dates_EPA <- read_csv("https://stahlm.github.io/ENS_215/Data/Sampling_dates_EPA_fish_tissue.csv")
dates_USGS <- read_csv("https://stahlm.github.io/ENS_215/Data/Sampling_dates_USGS_water_quality.csv")
dates_common <- intersect(dates_EPA, dates_USGS)
dates_only_USGS <- setdiff(dates_USGS, dates_EPA)
# Your code here
dates_USGS_EPA <- union(dates_USGS, dates_EPA)
years_USGS <- select(dates_USGS, Year)
months_days_USGS <- select(dates_USGS, Month, Day)
bind_example <- bind_cols(years_USGS, months_days_USGS)
head(bind_example)
temperature_data <- read_csv("https://stahlm.github.io/ENS_215/Data/NOAA_State_Temp_Lab_Data.csv")
temperature_data <- filter(temperature_data, !(Year == 2016 & state_cd == "NY")) # remove datas for NY in year 2016
library(kableExtra)
head(precip_combined) %>%
kable() %>%
kable_styling(bootstrap_options = "condensed", position = "center") %>%
column_spec(column = c(1,2,4), background = "yellow") %>%
column_spec(column = c(3), background = "lightgrey")
head(temperature_data) %>%
kable() %>%
kable_styling(bootstrap_options = "condensed", position = "center") %>%
column_spec(column = c(1,2,4), background = "yellow") %>%
column_spec(column = c(3), background = "lightgrey")
climate_data <- inner_join(precip_combined, temperature_data)
head(climate_data)  %>%
kable() %>%
kable_styling(bootstrap_options = "condensed", position = "center")
climate_data <- left_join(precip_combined, temperature_data)
regions_data <- read_csv("https://stahlm.github.io/ENS_215/Data/state_regions.csv")
regions_data <- mutate(regions_data, state_cd = State_abb)
a<- left_join(climate_data, regions_data)
# Your code here
# Your code here
library(gapminder)
my_gap <- gapminder
dams_data <- read_csv("https://stahlm.github.io/ENS_215/Data/Dams_FAO_SelectCols_LabData.csv")
dams_data <- rename(dams_data, country = Country)
my_gap <- filter(my_gap, year == 2007) %>%
select(-lifeExp, -continent, -year)
dams_enhanced <- left_join(dams_data, my_gap)
View(dams_enhanced)
glimpse(dams_data)
library(tidyverse)
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/NOAA_State_Precip_LabData.csv")
ny_precip <- filter(precip_data, state_cd == "NY")
# Your code here
ny_precip <- ny_precip %>%
mutate(time_period = if_else(Year >= 1950,"Post-1950","Pre-1950"))
quantile(ny_precip$Precip_inches, probs = c(0.001, 0.25, 0.50, 0.75, 0.95))
ny_precip %>%
mutate(frac = cume_dist(Precip_inches))
#arrange(Precip_inches) %>%
#mutate(quant = (seq(1,nrow(ny_precip)) - 0.5)/nrow(ny_precip))
var_example <- tibble(A = rnorm(200, 5, 0.10), B = rnorm(200, 5, 0.75)) %>%
gather(`A`,`B`, key = "Group", value = "Measurement")
var_example %>% ggplot(aes(x = Group, y = Measurement, fill = Group)) +
geom_jitter(height = 0, width = 0.2, shape = 21, size = 2) +
theme_classic()
quantile(ny_precip$Precip_inches, probs = 0.75) - quantile(ny_precip$Precip_inches, probs = 0.25) # using quantile
IQR(ny_precip$Precip_inches) # using IQR function
shape_symm <- tibble(x= rnorm(5*10^5, mean = 0, sd = 1))
shape_symm %>% ggplot(aes(x)) +
geom_density(fill = "gray") +
theme_classic() +
labs(title = "Unimodal distribution",
x = "",
y = ""
)
shape_symm <- tibble(x= c(rnorm(5*10^5, mean = -2, sd = 0.75), rnorm(5*10^5, mean = 2, sd = 0.75)) )
shape_symm %>% ggplot(aes(x)) +
geom_density(fill = "gray") +
theme_classic() +
labs(title = "Bimodal distribution",
x = "",
y = ""
)
shape_symm <- tibble(x= rnorm(5*10^5, mean = 0, sd = 1))
shape_symm %>% ggplot(aes(x)) +
geom_density(fill = "gray") +
theme_classic() +
labs(title = "Symmetric distribution",
x = "",
y = ""
)
shape_right <- tibble(x = rgamma(5*10^5, shape = 2, rate = 10))
shape_right %>% ggplot(aes(x)) +
geom_density(fill = "gray") +
theme_classic() +
labs(title = "Right-skewed",
x = "",
y = ""
)
shape_left <- tibble(x = rgamma(5*10^5, shape = 2, rate = 10))
shape_left %>% ggplot(aes(-x)) +
geom_density(fill = "gray") +
theme_classic() +
labs(title = "Left-skewed",
x = "",
y = ""
)
ny_precip %>%
ggplot(aes(group = state_cd, y = Precip_inches)) +
geom_boxplot(fill = "lightblue") +
theme_classic()
ny_precip %>%
ggplot(aes(x = state_cd, y = Precip_inches)) +
geom_boxplot(fill = "lightblue") +
geom_jitter(alpha = 0.25, width = 0.15, height = 0) +
theme_classic()
ny_precip %>%
ggplot(aes(x = time_period, y = Precip_inches)) +
geom_boxplot(fill = "lightblue", notch = TRUE) +
theme_classic()
precip_data %>% group_by(state_cd) %>%
summarize(p_25 = quantile(Precip_inches, probs = 0.25), p_50 = median(Precip_inches),
p_75 = quantile(Precip_inches, probs = 0.75)) %>%
ggplot() +
geom_point(aes(y = reorder(state_cd, p_50), x = p_50 )) +
geom_point(aes(y = state_cd, x = p_25), shape = 21, fill = "red") +
geom_point(aes(y = state_cd, x = p_75), shape = 21, fill = "blue") +
theme_classic() +
labs(title = "US states precipition quartiles",
y = "",
x = "Monthly precipitation (inches)",
caption = "25th (red), 50th (black), 75th (blue)")
precip_data %>% group_by(state_cd) %>%
summarize(p_25 = quantile(Precip_inches, probs = 0.25), p_50 = median(Precip_inches),
p_75 = quantile(Precip_inches, probs = 0.75)) %>%
ggplot() +
geom_point(aes(y = reorder(state_cd, p_50), x = p_50 )) +
geom_point(aes(y = state_cd, x = p_25), shape = 21, fill = "red") +
geom_point(aes(y = state_cd, x = p_75), shape = 21, fill = "blue") +
theme_classic() +
labs(title = "US states precipition quartiles",
y = "",
x = "Monthly precipitation (inches)",
caption = "25th (red), 50th (black), 75th (blue)")
precip_data %>% group_by(state_cd) %>%
summarize(p_25 = quantile(Precip_inches, probs = 0.25), p_50 = median(Precip_inches),
p_75 = quantile(Precip_inches, probs = 0.75)) %>%
ggplot() +
geom_point(aes(y = reorder(state_cd, p_50), x = p_50 )) +
geom_point(aes(y = state_cd, x = p_25), shape = 21, fill = "red") +
geom_point(aes(y = state_cd, x = p_75), shape = 21, fill = "blue") +
theme_classic() +
labs(title = "US states precipition quartiles",
y = "",
x = "Monthly precipitation (inches)",
caption = "25th (red), 50th (black), 75th (blue)")
precip_data %>% group_by(state_cd) %>%
summarize(p_25 = quantile(Precip_inches, probs = 0.25), p_50 = median(Precip_inches),
p_75 = quantile(Precip_inches, probs = 0.75)) %>%
ggplot() +
geom_point(aes(y = reorder(state_cd, p_50), x = p_50 )) +
geom_point(aes(y = state_cd, x = p_25), shape = 21, fill = "red") +
geom_point(aes(y = state_cd, x = p_75), shape = 21, fill = "blue") +
theme_classic() +
labs(title = "US states precipition quartiles",
y = "",
x = "Monthly precipitation (inches)",
caption = "25th (red), 50th (black), 75th (blue)")
precip_data %>% group_by(state_cd) %>%
summarize(p_25 = quantile(Precip_inches, probs = 0.25), p_50 = median(Precip_inches),
p_75 = quantile(Precip_inches, probs = 0.75)) %>%
ggplot() +
geom_point(aes(y = reorder(state_cd, p_50), x = p_50 )) +
geom_point(aes(y = state_cd, x = p_25), shape = 21, fill = "red") +
geom_point(aes(y = state_cd, x = p_75), shape = 21, fill = "blue") +
theme_classic() +
xlim()
precip_data %>% group_by(state_cd) %>%
summarize(p_25 = quantile(Precip_inches, probs = 0.25), p_50 = median(Precip_inches),
p_75 = quantile(Precip_inches, probs = 0.75)) %>%
ggplot() +
geom_point(aes(y = reorder(state_cd, p_50), x = p_50 )) +
geom_point(aes(y = state_cd, x = p_25), shape = 21, fill = "red") +
geom_point(aes(y = state_cd, x = p_75), shape = 21, fill = "blue") +
theme_classic() +
xlim() +
labs(title = "Monthly Precipition Quartiles",
subtitle = "US States",
y = "",
x = "Monthly precipitation (inches)",
caption = "25th (red), 50th (black), 75th (blue)")
precip_data %>% group_by(state_cd) %>%
summarize(p_25 = quantile(Precip_inches, probs = 0.25), p_50 = median(Precip_inches),
p_75 = quantile(Precip_inches, probs = 0.75)) %>%
ggplot() +
geom_point(aes(y = reorder(state_cd, p_50), x = p_50 )) +
geom_point(aes(y = state_cd, x = p_25), shape = 21, fill = "red") +
geom_point(aes(y = state_cd, x = p_75), shape = 21, fill = "blue") +
theme_classic() +
xlim(0,6) +
labs(title = "Monthly Precipition Quartiles",
subtitle = "US States",
y = "",
x = "Monthly precipitation (inches)",
caption = "25th (red), 50th (black), 75th (blue)")
precip_data %>% group_by(state_cd) %>%
summarize(p_25 = quantile(Precip_inches, probs = 0.25), p_50 = median(Precip_inches),
p_75 = quantile(Precip_inches, probs = 0.75)) %>%
ggplot() +
geom_point(aes(y = reorder(state_cd, p_50), x = p_50 )) +
geom_point(aes(y = state_cd, x = p_25), shape = 21, fill = "red") +
geom_point(aes(y = state_cd, x = p_75), shape = 21, fill = "blue") +
theme_classic() +
xlim(0,7) +
labs(title = "Monthly Precipition Quartiles",
subtitle = "US States",
y = "",
x = "Monthly precipitation (inches)",
caption = "25th (red), 50th (black), 75th (blue)")
