theme_void()
map_data_usa_temps %>%
drop_na(us_region) %>% # there are some NA rows that we will drop
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = mean_temp), color = "black") +
scale_fill_gradient(low = "blue", high = "red") +
coord_quickmap() +
theme_void() +
facet_wrap(~ us_region, scales = "free")
earthquakes <- read_csv("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Data/4.5_month_earthquakes_USGS_2020.csv")
head(earthquakes)
map_world_data <- map_data("world")
earthquake_map <- map_world_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group), fill = "lightgray", color = "black") +
geom_point(data = earthquakes, aes(longitude, latitude, size = mag, color = mag),
shape = 21, fill = "NA", stroke = 1.5) +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Earthquakes > 4.5 magnitude in the past 30 days",
subtitle = "Date window: 28-Jan to 27-Feb-2020",
caption = "Data source: USGS") +
theme_void() +
coord_quickmap()
earthquake_map
readxl::read_xlsx()
View(map_world_data)
COVID_map_data <- left_join(map_world_data, COVID_data)
COVID_data <- read_csv("https://stahlm.github.io/ENS_215/Data/COVID-19_data_2020_02_27.csv", skip = 2) %>%
select(Country, Cases, Deaths) %>%
rename(region = Country)
COVID_map_data <- left_join(map_world_data, COVID_data)
View(COVID_map_data)
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = Cases), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Earthquakes > 4.5 magnitude in the past 30 days",
subtitle = "Date window: 28-Jan to 27-Feb-2020",
caption = "Data source: USGS") +
theme_void() +
coord_quickmap()
earthquake_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = Cases), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Earthquakes > 4.5 magnitude in the past 30 days",
subtitle = "Date window: 28-Jan to 27-Feb-2020",
caption = "Data source: USGS") +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = Cases), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "As of 27-Feb-2020") +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = Cases), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = Cases), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red") +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = Cases), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red", breaks = c(25, 50, 100, 250, 500, 1000, 5000)) +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = Cases), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_continuous(type = "gradient",
breaks = c(25, 50, 100, 250, 500, 1000, 5000)) +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = Cases), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_continuous(type = "gradient") +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Cases)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_continuous(type = "gradient") +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Cases)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red") +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Cases)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,12,16),
labels = 2^c(0,4,8,12,16)) +
theme_void() +
coord_quickmap()
covid_map
covid_map <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Cases)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,12,16),
labels = 2^c(0,4,8,12,16)) +
theme_void() +
labs(fill = "Cases") +
coord_quickmap()
covid_map
covid_map_cases <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Cases)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,12,16),
labels = 2^c(0,4,8,12,16)) +
theme_void() +
labs(fill = "Cases") +
coord_quickmap()
covid_map_cases
covid_map_deaths <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Deaths)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Deaths",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,12,16),
labels = 2^c(0,4,8,12,16)) +
theme_void() +
labs(fill = "Deaths") +
coord_quickmap()
covid_map_deaths
covid_map_cases / covid_map_deaths
covid_map_cases / covid_map_deaths
covid_map_cases <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Cases)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,12,16),
labels = 2^c(0,4,8,12,16)) +
theme_void() +
labs(fill = "Cases") +
coord_quickmap()
covid_map_cases
covid_map_deaths <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Deaths)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Deaths",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,12,16),
labels = 2^c(0,4,8,12,16)) +
theme_void() +
labs(fill = "Deaths") +
coord_quickmap()
covid_map_deaths
2^8
2^12
covid_map_cases <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Cases)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,12,16),
labels = 2^c(0,4,8,12,16)) +
theme_void() +
labs(fill = "Cases") +
coord_quickmap()
covid_map_cases
covid_map_deaths <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Deaths)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Deaths",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,12),
labels = 2^c(0,4,8,12)) +
theme_void() +
labs(fill = "Deaths") +
coord_quickmap()
covid_map_deaths
View(COVID_data)
2^10
covid_map_cases <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Cases)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Cases",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,12,16),
labels = 2^c(0,4,8,12,16)) +
theme_void() +
labs(fill = "Cases") +
coord_quickmap()
covid_map_cases
covid_map_deaths <- COVID_map_data %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = log2(Deaths)), color = "black") +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "COVID-19 Deaths",
subtitle = "Data up to 27-Feb-2020") +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(0,4,8,10,12),
labels = 2^c(0,4,8,10,12)) +
theme_void() +
labs(fill = "Deaths") +
coord_quickmap()
covid_map_deaths
a <- tigris::counties(state = "NY", cb = TRUE)
plot(a)
library(tidyverse)
plot(a)
a <- sf::st_as_sf(a)
plot(a)
View(a)
a <- tigris::counties(state = "NY", cb = TRUE)
b <- tigris::roads(state = "NY", county = "Albany")
plot(b)
plot(sf::st_as_sf(b))
b <- tigris::roads(state = "NY", county = "Albany")
b <- tigris::roads(state = "NY", county = "Albany")
b <- tigris::roads(state = "NY", county = "Erie")
plot(sf::st_as_sf(b))
b <- sf::st_as_sf(b)
View(b)
library(tmap)
tm_shape(b) + tm_lines(col = "grey")
b <- tigris::roads(state = "NY", county = "Seneca")
b <- sf::st_as_sf(b)
tm_shape(b) + tm_lines(col = "grey")
water <- tigris::linear_water(state = "NY", county = "Schenectady")
tm_shape(water) + tm_lines(col = "blue")
counties_NY <- tigris::counties(state = "NY", cb = TRUE)
counties_NY <- st_as_sf(counties_NY)
tm_shape(counties_NY) + tm_polygons() + tm_shape(water) + tm_lines(col = "blue")
tm_shape(counties_NY) + tm_polygons() + tm_shape(water) + tm_lines(col = "blue") + tmap_mode("view")
water_2 <- tigris::area_water(state = "NY", county = "Schenectady")
tm_shape(counties_NY) + tm_polygons() + tm_shape(water_2) + tm_lines(col = "blue") + tmap_mode("view")
water_2 <- st_as_sf(water_2)
tm_shape(counties_NY) + tm_polygons() + tm_shape(water_2) + tm_lines(col = "blue") + tmap_mode("view")
tm_shape(counties_NY) + tm_polygons() + tm_shape(water_2) + tm_polygons(col = "blue") + tmap_mode("view")
View(water_2)
spData::world
library(tigris)
library(tigris)
NY_counties <- counties(state = "NY")
NY_counties <- counties(state = "NY")
NY_counties <- counties(state = "NY", cb = FALSE)
NY_counties <- counties(state = "NY", cb = TRUE)
library(tigris)
library(sf)
NY_counties <- st_as_sf(NY_counties)
NY_counties
typeof(NY_counties)
map_world_data <- map_data("world")
View(map_world_data)
ggplot(NY_counties) + geom_sf()
View(NY_counties)
NY_counties %>%
tm_shape() +
tm_borders()
tmap_mode("plot")
NY_counties %>%
tm_shape() +
tm_borders() +
tm_scale_bar(breaks = c(0, 250, 500), size = 1)     # add a scale bar
NY_counties %>%
tm_shape() +
tm_borders() +
tm_scale_bar(breaks = c(0, 50, 100), size = 1)     # add a scale bar
NY_counties %>%
tm_shape() +
tm_borders() +
tm_scale_bar(breaks = c(0, 50, 100), size = 1, position = c("BOTTOM", "LEFT"))     # add a scale bar
NY_counties %>%
tm_shape() +
tm_borders() +
tm_scale_bar(breaks = c(0, 50, 100), size = 1, position = c("LEFT", "BOTTOM"))     # add a scale bar
NY_counties %>%
tm_shape() +
tm_borders(fill = "lightgrey") +
tm_scale_bar(breaks = c(0, 50, 100), size = 1, position = c("LEFT", "BOTTOM"))     # add a scale bar
NY_counties %>%
tm_shape() +
tm_borders(color = "lightgrey") +
tm_scale_bar(breaks = c(0, 50, 100), size = 1, position = c("LEFT", "BOTTOM"))     # add a scale bar
NY_counties %>%
tm_shape() +
tm_borders(col = "lightgrey") +
tm_scale_bar(breaks = c(0, 50, 100), size = 1, position = c("LEFT", "BOTTOM"))     # add a scale bar
NY_counties %>%
tm_shape() +
tm_polygons(col = "lightgrey") +
tm_scale_bar(breaks = c(0, 50, 100), size = 1, position = c("LEFT", "BOTTOM"))     # add a scale bar
NY_counties %>%
tm_shape() +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_scale_bar(breaks = c(0, 50, 100), size = 1, position = c("LEFT", "BOTTOM"))     # add a scale bar
NY_urbanarea <- tigris::urban_areas()
NY_water <- area_water(state = "NY")
NY_water <- area_water(state = "NY", county = c("Schenectady", "Erie"))
NY_water <- area_water(state = "NY", county = "Schenectady")
Water_Schenectady <- area_water(state = "NY", county = "Schenectady")  # download the data
Water_Schenectady <- st_as_sf(Water_Schenectady) # convert to an sf object
NY_map <- NY_counties %>%
tm_shape() +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_scale_bar(breaks = c(0, 50, 100), size = 1, position = c("LEFT", "BOTTOM"))     # add a scale bar
NY_map <- NY_counties %>%
tm_shape() +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_scale_bar(breaks = c(0, 50, 100), size = 1, position = c("LEFT", "BOTTOM"))     # add a scale bar
NY_map
NY_map <- NY_counties %>%
tm_shape() +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_scale_bar(breaks = c(0, 50, 100), size = 1, position = c("LEFT", "BOTTOM"))     # add a scale bar
NY_map
NY_map <- NY_counties %>%
tm_shape() +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_scale_bar(breaks = c(0, 50, 100), size = 1, position = c("LEFT", "BOTTOM"))     # add a scale bar
NY_map
NY_map +
tm_shape(Water_Schenectady) +
tm_polygons(col = "blue")
NY_map +
tm_shape(Water_Schenectady) +
tm_polygons(fill = "blue")
NY_map +
tm_shape(Water_Schenectady) +
tm_polygons(color = "blue", border.col = NA)
NY_map +
tm_shape(Water_Schenectady) +
tm_polygons(color = "blue", border.col = "none")
NY_map <- NY_counties %>%
tm_shape() +
tm_fill(col = "lightgrey", border.col = "black") +
tm_scale_bar(breaks = c(0, 50, 100), size = 1, position = c("LEFT", "BOTTOM"))     # add a scale bar
NY_map
NY_map <- NY_counties %>%
tm_shape() +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_scale_bar(breaks = c(0, 50, 100), size = 1, position = c("LEFT", "BOTTOM"))     # add a scale bar
NY_map
NY_map <- NY_counties %>%
tm_shape() +
tm_polygons(col = "blue", border.col = "black") +
tm_scale_bar(breaks = c(0, 50, 100), size = 1, position = c("LEFT", "BOTTOM"))     # add a scale bar
NY_map
NY_map <- NY_counties %>%
tm_shape() +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_scale_bar(breaks = c(0, 50, 100), size = 1, position = c("LEFT", "BOTTOM"))     # add a scale bar
NY_map
NY_map +
tm_shape(Water_Schenectady) +
tm_polygons(color = "blue", border.alpha = 0)
NY_map +
tm_shape(Water_Schenectady) +
tm_polygons(col = "blue", border.alpha = 0)
Water_Schenectady <- area_water(state = "NY", county = "Erie")  # download the data
Water_Schenectady <- st_as_sf(Water_Schenectady) # convert to an sf object
NY_map +
tm_shape(Water_Schenectady) +
tm_polygons(col = "blue", border.alpha = 0)
View(NY_counties)
Schenectady_map <- NY_counties %>%
filter(NAME == "Schenectady") %>%
tm_shape() +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_scale_bar(breaks = c(0, 50, 100), size = 1, position = c("LEFT", "BOTTOM"))     # add a scale bar
Schenectady_map <- NY_counties %>%
filter(NAME == "Schenectady") %>%
tm_shape() +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_scale_bar(breaks = c(0, 50, 100), size = 1, position = c("LEFT", "BOTTOM"))     # add a scale bar
Schenectady_map
Schenectady_map <- NY_counties %>%
filter(NAME == "Schenectady") %>%
tm_shape() +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_scale_bar(breaks = c(0, 50, 100), size = 1, position = c("LEFT", "BOTTOM"))     # add a scale bar
Schenectady_map
Schenectady_map <- NY_counties %>%
filter(NAME == "Schenectady") %>%
tm_shape() +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_scale_bar(breaks = c(0, 2.5, 5), size = 1, position = c("LEFT", "BOTTOM"))     # add a scale bar
Schenectady_map
Schenectady_map <- NY_counties %>%
filter(NAME == "Schenectady") %>%
tm_shape() +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_scale_bar(breaks = c(0, 2.5, 5), size = 1, position = c("RIGHT", "BOTTOM"))     # add a scale bar
Schenectady_map
Schenectady_map +
tm_shape(Water_Schenectady) +
tm_polygons(col = "blue", border.alpha = 0)
Water_Schenectady <- area_water(state = "NY", county = "Schenectady")  # download the data
Water_Schenectady <- st_as_sf(Water_Schenectady) # convert to an sf object
Schenectady_map +
tm_shape(Water_Schenectady) +
tm_polygons(col = "blue", border.alpha = 0)
Schenectady_map <- Schenectady_map +
tm_shape(Water_Schenectady) +
tm_polygons(col = "blue", border.alpha = 0)
Schenectady_map
Linear_water_Schenectady <- linear_water(state = "NY", county = "Schenectady")  # download the data
Linear_water_Schenectady <- st_as_sf(Linear_water_Schenectady) # convert to an sf object
Schenectady_map +
tm_shape(Linear_water_Schenectady) +
tm_lines(col = "blue")
Schenectady_map +
tm_shape(Linear_water_Schenectady) +
tm_lines(col = "blue") +
tm_layout(title = "Schenectady")
Schenectady_map +
tm_shape(Linear_water_Schenectady) +
tm_lines(col = "blue") +
tm_layout(title = "Schenectady hydrography")
Schenectady_map +
tm_shape(Linear_water_Schenectady) +
tm_lines(col = "blue") +
tm_layout(title = "Schenectady hydrography",
frame = F)
Schenectady_map <- NY_counties %>%
filter(NAME == "Schenectady") %>%
tm_shape() +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_scale_bar(breaks = c(0, 5, 10), size = 1, position = c("RIGHT", "BOTTOM"))     # add a scale bar
Schenectady_map
Schenectady_map <- Schenectady_map +
tm_shape(Water_Schenectady) +
tm_polygons(col = "blue", border.alpha = 0)
Schenectady_map
Schenectady_map +
tm_shape(Linear_water_Schenectady) +
tm_lines(col = "blue") +
tm_layout(title = "Schenectady hydrography",
frame = F)
Schenectady_map +
tm_shape(Linear_water_Schenectady) +
tm_lines(col = "blue") +
tm_compass(position = c("left", "top")) +  # add a compass
tm_layout(title = "Schenectady hydrography",
frame = F)
Schenectady_map +
tm_shape(Linear_water_Schenectady) +
tm_lines(col = "blue") +
tm_compass(position = c("right", "top")) +  # add a compass
tm_layout(title = "Schenectady hydrography",
frame = F)
round(19.1)
