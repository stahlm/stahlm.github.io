theme_classic()
fig_monthly <- climate_data %>%
mutate(Month = as.factor(Month)) %>%
ggplot(aes(x = Month, y = Avg_Temp_F)) +
geom_boxplot() +
labs(title = paste("Monthly temperatures:",state_abbrev),
x = "",
y = "Annual Mean Temp (F)",
caption = "Data source: NOAA") +
theme_classic()
map_data_state <- map_data("state") %>%
filter(region == state_abbrev)
fig_map <- map_data_state %>%
ggplot() +
geom_polygon(aes(long, lat, group = group), color = "black", fill = "gray") +
coord_map(projection = "bonne", lat0 = 50) +
theme_void()
combined_fig <- fig_map + (fig_monthly / fig_annual)
combined_fig
fig_map
View(map_data_state)
state_climate_summary_map <- function(climate_data, state_abbrev){
table_months <- climate_data %>%
filter(state_cd == state_abbrev) %>%
group_by(Month) %>%
summarise(month_mean = mean(Avg_Temp_F), month_max = max(Avg_Temp_F), month_min = min(Avg_Temp_F) )
table_annual <- climate_data %>%
filter(state_cd == state_abbrev) %>%
group_by(Year) %>%
summarise(annual_mean = mean(Avg_Temp_F))
fig_annual <- table_annual %>%
ggplot(aes(x = Year, y = annual_mean)) +
geom_line() +
geom_point() +
geom_smooth(method = "lm") +
labs(title = paste("Annual mean temperature:",state_abbrev),
x = "",
y = "Annual Mean Temp (F)",
caption = "Data source: NOAA") +
theme_classic()
fig_monthly <- climate_data %>%
mutate(Month = as.factor(Month)) %>%
ggplot(aes(x = Month, y = Avg_Temp_F)) +
geom_boxplot() +
labs(title = paste("Monthly temperatures:",state_abbrev),
x = "",
y = "Annual Mean Temp (F)",
caption = "Data source: NOAA") +
theme_classic()
map_data_state <- map_data("state") %>%
filter(region == state_cd)
fig_map <- map_data_state %>%
ggplot() +
geom_polygon(aes(long, lat, group = group), color = "black", fill = "gray") +
coord_map(projection = "bonne", lat0 = 50) +
theme_void()
combined_fig <- fig_map + (fig_monthly / fig_annual)
return(combined_fig)
#list(table_months, table_annual, fig_annual)
}
state_climate_summary_map(state_temps, "MA")
state.abb
state.name
spData::us_states
a<-spData::us_states
View(a)
View(state_temps)
state_names_table <- tibble(state_name = state.name, state_abb = state.abb)
View(state_names_table)
state_names_table <- tibble(state_name = tolower(state.name), state_abb = state.abb)
View(map_data_state)
state_climate_summary_map <- function(climate_data, state_abbrev){
state_names_table <- tibble(state_name = tolower(state.name), state_abb = state.abb)
state_names_table <- state_names_table %>%
filter(state_abb == state_abbrev)
state_name_current <- state_names_table$state_name
table_months <- climate_data %>%
filter(state_cd == state_abbrev) %>%
group_by(Month) %>%
summarise(month_mean = mean(Avg_Temp_F), month_max = max(Avg_Temp_F), month_min = min(Avg_Temp_F) )
table_annual <- climate_data %>%
filter(state_cd == state_abbrev) %>%
group_by(Year) %>%
summarise(annual_mean = mean(Avg_Temp_F))
fig_annual <- table_annual %>%
ggplot(aes(x = Year, y = annual_mean)) +
geom_line() +
geom_point() +
geom_smooth(method = "lm") +
labs(title = paste("Annual mean temperature:",state_abbrev),
x = "",
y = "Annual Mean Temp (F)",
caption = "Data source: NOAA") +
theme_classic()
fig_monthly <- climate_data %>%
mutate(Month = as.factor(Month)) %>%
ggplot(aes(x = Month, y = Avg_Temp_F)) +
geom_boxplot() +
labs(title = paste("Monthly temperatures:",state_abbrev),
x = "",
y = "Annual Mean Temp (F)",
caption = "Data source: NOAA") +
theme_classic()
map_data_state <- map_data("state") %>%
filter(region == state_name_current)
fig_map <- map_data_state %>%
ggplot() +
geom_polygon(aes(long, lat, group = group), color = "black", fill = "gray") +
coord_map(projection = "bonne", lat0 = 50) +
theme_void()
combined_fig <- fig_map + (fig_monthly / fig_annual)
return(combined_fig)
#list(table_months, table_annual, fig_annual)
}
state_climate_summary_map(state_temps, "MA")
state_climate_summary_map <- function(climate_data, state_abbrev){
state_names_table <- tibble(state_name = tolower(state.name), state_abb = state.abb)
state_names_table <- state_names_table %>%
filter(state_abb == state_abbrev)
state_name_current <- state_names_table$state_name
table_months <- climate_data %>%
filter(state_cd == state_abbrev) %>%
group_by(Month) %>%
summarise(month_mean = mean(Avg_Temp_F), month_max = max(Avg_Temp_F), month_min = min(Avg_Temp_F) )
table_annual <- climate_data %>%
filter(state_cd == state_abbrev) %>%
group_by(Year) %>%
summarise(annual_mean = mean(Avg_Temp_F))
fig_annual <- table_annual %>%
ggplot(aes(x = Year, y = annual_mean)) +
geom_line() +
geom_point() +
geom_smooth(method = "lm") +
labs(title = paste("Annual mean temperature:",state_abbrev),
x = "",
y = "Annual Mean Temp (F)",
caption = "Data source: NOAA") +
theme_classic()
fig_monthly <- climate_data %>%
mutate(Month = as.factor(Month)) %>%
ggplot(aes(x = Month, y = Avg_Temp_F)) +
geom_boxplot() +
labs(title = paste("Monthly temperatures:",state_abbrev),
x = "",
y = "Annual Mean Temp (F)",
caption = "Data source: NOAA") +
theme_classic()
map_data_state <- map_data("state") %>%
filter(region == state_name_current)
fig_map <- map_data_state %>%
ggplot() +
geom_polygon(aes(long, lat, group = group), color = "black", fill = "gray") +
coord_map(projection = "bonne", lat0 = 50) +
theme_void()
combined_fig <- fig_map / (fig_monthly + fig_annual)
return(combined_fig)
#list(table_months, table_annual, fig_annual)
}
state_climate_summary_map(state_temps, "MA")
state_climate_summary_map <- function(climate_data, state_abbrev){
state_names_table <- tibble(state_name = tolower(state.name), state_abb = state.abb)
state_names_table <- state_names_table %>%
filter(state_abb == state_abbrev)
state_name_current <- state_names_table$state_name
table_months <- climate_data %>%
filter(state_cd == state_abbrev) %>%
group_by(Month) %>%
summarise(month_mean = mean(Avg_Temp_F), month_max = max(Avg_Temp_F), month_min = min(Avg_Temp_F) )
table_annual <- climate_data %>%
filter(state_cd == state_abbrev) %>%
group_by(Year) %>%
summarise(annual_mean = mean(Avg_Temp_F))
fig_annual <- table_annual %>%
ggplot(aes(x = Year, y = annual_mean)) +
geom_line() +
geom_point() +
geom_smooth(method = "lm") +
labs(title = paste("Annual mean temperature:",state_abbrev),
x = "",
y = "Annual Mean Temp (F)",
caption = "Data source: NOAA") +
theme_classic()
fig_monthly <- climate_data %>%
mutate(Month = as.factor(Month)) %>%
ggplot(aes(x = Month, y = Avg_Temp_F)) +
geom_boxplot() +
labs(title = paste("Monthly temperatures:",state_abbrev),
x = "",
y = "Annual Mean Temp (F)",
caption = "Data source: NOAA") +
theme_classic()
map_data_state <- map_data("state") %>%
filter(region == state_name_current)
fig_map <- map_data_state %>%
ggplot() +
geom_polygon(aes(long, lat, group = group), color = "black", fill = "gray") +
coord_map(projection = "bonne", lat0 = 50) +
theme_void()
combined_fig <- fig_map / (fig_monthly / fig_annual)
return(combined_fig)
#list(table_months, table_annual, fig_annual)
}
state_climate_summary_map(state_temps, "MA")
state_climate_summary_map(state_temps, "MA")
state_climate_summary_map <- function(climate_data, state_abbrev){
state_names_table <- tibble(state_name = tolower(state.name), state_abb = state.abb)
state_names_table <- state_names_table %>%
filter(state_abb == state_abbrev)
state_name_current <- state_names_table$state_name
table_months <- climate_data %>%
filter(state_cd == state_abbrev) %>%
group_by(Month) %>%
summarise(month_mean = mean(Avg_Temp_F), month_max = max(Avg_Temp_F), month_min = min(Avg_Temp_F) )
table_annual <- climate_data %>%
filter(state_cd == state_abbrev) %>%
group_by(Year) %>%
summarise(annual_mean = mean(Avg_Temp_F))
fig_annual <- table_annual %>%
ggplot(aes(x = Year, y = annual_mean)) +
geom_line() +
geom_point() +
geom_smooth(method = "lm") +
labs(title = paste("Annual mean temperature:",state_abbrev),
x = "",
y = "Annual Mean Temp (F)",
caption = "Data source: NOAA") +
theme_classic()
fig_monthly <- climate_data %>%
mutate(Month = as.factor(Month)) %>%
ggplot(aes(x = Month, y = Avg_Temp_F)) +
geom_boxplot() +
labs(title = paste("Monthly temperatures:",state_abbrev),
x = "",
y = "Temp (F)",
caption = "Data source: NOAA") +
theme_classic()
map_data_state <- map_data("state") %>%
filter(region == state_name_current)
fig_map <- map_data_state %>%
ggplot() +
geom_polygon(aes(long, lat, group = group), color = "black", fill = "gray") +
coord_map(projection = "bonne", lat0 = 50) +
theme_void()
combined_fig <- fig_map / (fig_monthly / fig_annual)
return(combined_fig)
#list(table_months, table_annual, fig_annual)
}
state_climate_summary_map(state_temps, "MA")
library(rayshader)
source("get_usgs_elevation_data.R")
source("define_image_size.R")
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("data", "sf-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster(elev_file)
elev_img <- raster::raster(elev_file)
# download elevation data
elev_file <- file.path("data", "sf-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster(elev_file)
library(rayshader)
source("get_usgs_elevation_data.R")
source("define_image_size.R")
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("data", "sf-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
# download elevation data
elev_file <- file.path("sf-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster(elev_file)
# download elevation data
elev_file <- file.path("Data", "sf-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster(elev_file)
raster::plot(elev_img)
elmat <- matrix(
raster::extract(elev_img, raster::extent(elev_img), buffer = 1000),
nrow = ncol(elev_img), ncol = nrow(elev_img)
)
elmat %>%
sphere_shade(sunangle = 45, texture = "imhof1") %>%
plot_map()
elmat %>%
sphere_shade(sunangle = 45, texture = "imhof2") %>%
plot_map()
elmat %>%
sphere_shade(sunangle = 45, texture = "imhof3") %>%
plot_map()
elmat %>%
sphere_shade(sunangle = 90, texture = "imhof3") %>%
plot_map()
elmat %>%
sphere_shade(sunangle = 30, texture = "imhof3") %>%
plot_map()
elmat %>%
sphere_shade(sunangle = 315, texture = "imhof3") %>%
plot_map()
elmat %>%
sphere_shade(sunangle = 145, texture = "imhof3") %>%
plot_map()
elmat %>%
sphere_shade(sunangle = 315, texture = "imhof3") %>%
plot_map()
elmat %>%
sphere_shade(texture = "desert") %>%
add_water(detect_water(elmat), color = "imhof1") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 1, fov = 0, theta = 100, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "imhof1") %>%
add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 1, fov = 0, theta = 100, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "imhof1") %>%
add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 2, fov = 0, theta = 100, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture="imhof1") %>%
plot_3d(elmat, zscale=50, water = TRUE, watercolor="imhof1",
waterlinecolor="white", waterlinealpha=0.5)
render_movie(filename = filename_movie)
install.packages("av")
elmat %>%
sphere_shade(texture="imhof1") %>%
plot_3d(elmat, zscale=50, water = TRUE, watercolor="imhof1",
waterlinecolor="white", waterlinealpha=0.5)
render_movie(filename = filename_movie)
filename_movie = tempfile()
elmat %>%
sphere_shade(texture="imhof1") %>%
plot_3d(elmat, zscale=50, water = TRUE, watercolor="imhof1",
waterlinecolor="white", waterlinealpha=0.5)
render_movie(filename = filename_movie)
filename_movie = tempfile()
elmat %>%
sphere_shade(texture="imhof1") %>%
plot_3d(elmat, zscale=3, water = TRUE, watercolor="imhof1",
waterlinecolor="white", waterlinealpha=0.5)
render_movie(filename = filename_movie)
filename_movie = tempfile()
elmat %>%
sphere_shade(texture="imhof1") %>%
plot_3d(elmat, zscale=3, water = TRUE, watercolor="blue",
waterlinecolor="white", waterlinealpha=0.5)
render_movie(filename = filename_movie)
filename_movie = tempfile()
elmat %>%
sphere_shade(texture="imhof1") %>%
add_water(detect_water(elmat), color = "blue") %>%
plot_3d(elmat, zscale=3, waterlinecolor="white", waterlinealpha=0.5)
render_movie(filename = filename_movie)
filename_movie = tempfile()
elmat %>%
sphere_shade(texture="imhof1") %>%
add_water(detect_water(elmat), color = "blue") %>%
plot_3d(elmat, zscale=3, waterlinecolor="white", waterlinealpha=0.5)
render_movie(filename = filename_movie)
elmat %>%
sphere_shade(texture = "imhof1") %>%
add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 2, fov = 0, theta = 100, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "imhof1") %>%
add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 1, fov = 0, theta = 45, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "imhof1") %>%
add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 5), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 5, fov = 0, theta = 45, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "imhof1") %>%
add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 3, fov = 0, theta = 45, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(sunangle = 315, texture = "imhof3") %>%
plot_map()
elmat %>%
sphere_shade(sunangle = 315, texture = "imhof4") %>%
plot_map()
elmat %>%
sphere_shade(sunangle = 315, texture = "bw") %>%
plot_map()
elmat %>%
sphere_shade(sunangle = 315, texture = "unicorn") %>%
plot_map()
elmat %>%
sphere_shade(sunangle = 315, texture = "bw") %>%
plot_map()
elmat %>%
sphere_shade(texture = "bw") %>%
add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 3, fov = 0, theta = 45, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "bw") %>%
add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 3, fov = 0, theta = 0, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "bw") %>%
add_water(detect_water(elmat,cutoff = 0.9), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 3, fov = 0, theta = 0, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "bw") %>%
add_water(detect_water(elmat,cutoff = 0.98), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 3, fov = 0, theta = 0, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "bw") %>%
add_water(detect_water(elmat,cutoff = 0.985), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 3, fov = 0, theta = 0, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "bw") %>%
add_water(detect_water(elmat,cutoff = 0.988), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 3, fov = 0, theta = 0, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "bw") %>%
add_water(detect_water(elmat,cutoff = 0.995), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 3, fov = 0, theta = 0, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "bw") %>%
add_water(detect_water(elmat,cutoff = 0.997), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 3, fov = 0, theta = 0, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "bw") %>%
add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 3, fov = 0, theta = 0, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "bw") %>%
#add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 3, fov = 0, theta = 0, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
