#add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 1.5, fov = 0, theta = 0, zoom = 0.75, phi = 65, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
filename_movie = tempfile()
elmat %>%
sphere_shade(texture="imhof1") %>%
add_water(detect_water(elmat), color = "blue") %>%
plot_3d(elmat, zscale=1.5, waterlinecolor="white", waterlinealpha=0.5)
render_movie(filename = filename_movie)
elmat %>%
sphere_shade(texture = "imhof1") %>%
#add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 0.5, fov = 0, theta = 0, zoom = 0.75, phi = 65, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "imhof1") %>%
#add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 1, fov = 0, theta = 0, zoom = 0.75, phi = 65, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "desert") %>%
#add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 1, fov = 0, theta = 0, zoom = 0.75, phi = 65, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "desert") %>%
#add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 1, fov = 0, theta = 0, zoom = 0.5, phi = 65, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "desert") %>%
#add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 1, fov = 0, theta = 0, zoom = 0.5, phi = 65, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
data(gss)
library(infer)
data(gss)
install.packages("FedData")
library(FedData)
library(magrittr)
# Extract data for the Village Ecodynamics Project "VEPIIN" study area:
# http://veparchaeology.org
vepPolygon <- polygon_from_extent(raster::extent(672800, 740000, 4102000, 4170000),
proj4string = "+proj=utm +datum=NAD83 +zone=12")
# Get the NED (USA ONLY)
# Returns a raster
NED <- get_ned(template = vepPolygon,
label = "VEPIIN")
# Plot with raster::plot
raster::plot(NED)
library(rayshader)
source("get_usgs_elevation_data.R")
source("define_image_size.R")
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("Data", "sf-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_file
elev_img <- raster::raster(elev_file)
elev_img
library(FedData)
library(magrittr)
# Extract data for the Village Ecodynamics Project "VEPIIN" study area:
# http://veparchaeology.org
vepPolygon <- polygon_from_extent(raster::extent(-73.997889, -73.873456, 42.768403, 42.862791),
proj4string = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 ")
# Get the NED (USA ONLY)
# Returns a raster
NED <- get_ned(template = vepPolygon,
label = "VEPIIN")
# Plot with raster::plot
raster::plot(NED)
library(FedData)
library(magrittr)
# Extract data for the Village Ecodynamics Project "VEPIIN" study area:
# http://veparchaeology.org
vepPolygon <- polygon_from_extent(raster::extent(-73.997889, -73.873456, 42.768403, 42.862791),
proj4string = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 ")
# Get the NED (USA ONLY)
# Returns a raster
NED <- get_ned(template = vepPolygon,
label = "VEPIIN")
# Plot with raster::plot
raster::plot(NED)
#elev_file <- "C:/Users/stahlm/Documents/Research_Projects/Groundwater_Isotopes/Output/RF_model/RF_model_GW_isotopes_H.gri"
elev_img <- raster::raster(elev_file)
raster::plot(elev_img)
library(FedData)
library(magrittr)
# Extract data for the Village Ecodynamics Project "VEPIIN" study area:
# http://veparchaeology.org
vepPolygon <- polygon_from_extent(raster::extent(-73.997889, -73.873456, 42.768403, 42.862791),
proj4string = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 ")
library(FedData)
library(magrittr)
# Extract data for the Village Ecodynamics Project "VEPIIN" study area:
# http://veparchaeology.org
vepPolygon <- polygon_from_extent(raster::extent(-73.997889, -73.873456, 42.768403, 42.862791),
proj4string = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 ")
# Get the NED (USA ONLY)
# Returns a raster
NED <- get_ned(template = vepPolygon,
label = "VEPIIN")
# Plot with raster::plot
raster::plot(NED)
library(FedData)
library(magrittr)
# Extract data for the Village Ecodynamics Project "VEPIIN" study area:
# http://veparchaeology.org
vepPolygon <- polygon_from_extent(raster::extent(-73.997889, -73.873456, 42.768403, 42.862791),
proj4string = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 ")
# Get the NED (USA ONLY)
# Returns a raster
NED <- get_ned(template = vepPolygon,
label = "VEPIIN")
# Plot with raster::plot
raster::plot(NED)
vepPolygon <- polygon_from_extent(raster::extent(662800,740000,4102000,4170000),
proj4string='+proj=utm +datum=NAD83 +zone=12')
# Get the NED (USA ONLY)
# Returns a raster
NED <- get_ned(template = vepPolygon,
label = "VEPIIN")
# Plot with raster::plot
raster::plot(NED)
vepPolygon <- polygon_from_extent(raster::extent(662800,740000,4100000,4170000),
proj4string='+proj=utm +datum=NAD83 +zone=12')
# Get the NED (USA ONLY)
# Returns a raster
NED <- get_ned(template = vepPolygon,
label = "VEPIIN")
# Plot with raster::plot
raster::plot(NED)
vepPolygon <- polygon_from_extent(raster::extent(662800,740000,4100000,4170000),
proj4string='+proj=utm +datum=NAD83 +zone=11')
# Get the NED (USA ONLY)
# Returns a raster
NED <- get_ned(template = vepPolygon,
label = "VEPIIN")
# Plot with raster::plot
raster::plot(NED)
library(FedData)
library(magrittr)
# Extract data for the Village Ecodynamics Project "VEPIIN" study area:
# http://veparchaeology.org
vepPolygon <- polygon_from_extent(raster::extent(-73.997889, -73.873456, 42.768403, 42.862791),
proj4string = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 ")
# Get the NED (USA ONLY)
# Returns a raster
NED <- get_ned(template = vepPolygon,
label = "VEPIIN")
# Plot with raster::plot
raster::plot(NED)
# Get the NED (USA ONLY)
# Returns a raster
NED1 <- get_ned(template = vepPolygon,
label = "VEPIIN")
# Plot with raster::plot
raster::plot(NED1)
library(tidyverse)
library(tigris)
library(tmap)
source("get_usgs_elevation_data.R")
source("define_image_size.R")
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
# download elevation data
elev_file <- file.path("Data", "sf-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("Data", "sf-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster(elev_file)
elev_img <- raster::raster(elev_file)
library(tidyverse)
library(tigris)
library(tmap)
source("get_usgs_elevation_data.R")
source("define_image_size.R")
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("Data", "sf-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster(elev_file)
raster::plot(elev_img)
library(tidyverse)
library(tigris)
library(tmap)
library(sf)
source("get_usgs_elevation_data.R")
source("define_image_size.R")
NY_counties <- counties(state = "NY", cb = TRUE) # cb = TRUE specifies to download a lower resolution file (faster download)
NY_counties <- st_as_sf(NY_counties) # convert to an sf object
Schenect <- NY_counties %>%
filter(NAME == "Schenectady") %>%
NY_counties <- st_as_sf(NY_counties) # convert to an sf object
Schenect <- NY_counties %>%
filter(NAME == "Schenectady")
Schenect
bbox <- st_bbox(Schenect)
image_size <- define_image_size(bbox, major_dim = 600)
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
bbox <- st_bbox(Schenect)
bbox
bbox[1]
bbox[[1]]
bbox[[3]]
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = bbox[[1]], lat = bbox[[2]]), # bottom-left
p2 = list(long = bbox[[3]], lat = bbox[[4]])   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("Data", "sf-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster(elev_file)
elev_img <- raster::raster(elev_file)
# download elevation data
elev_file <- file.path("Data", "sf-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster(elev_file)
library(tidyverse)
library(tigris)
library(tmap)
library(sf)
source("get_usgs_elevation_data.R")
source("define_image_size.R")
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
NY_counties <- counties(state = "NY", cb = TRUE) # cb = TRUE specifies to download a lower resolution file (faster download)
NY_counties <- st_as_sf(NY_counties) # convert to an sf object
Schenect <- NY_counties %>%
filter(NAME == "Schenectady")
Schenect
bbox <- st_bbox(Schenect)
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = bbox[[1]], lat = bbox[[2]]), # bottom-left
p2 = list(long = bbox[[3]], lat = bbox[[4]])   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("Data", "sf-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster(elev_file)
elev_img <- raster::raster(elev_file)
elev_img <- raster::raster(elev_file)
bbox
bbox <- st_bbox(Schenect)
bbox
bbox <- st_bbox(Schenect)
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = bbox[[1]], lat = bbox[[2]]), # bottom-left
p2 = list(long = bbox[[3]], lat = bbox[[4]])   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("Data", "sf-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster(elev_file)
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("Data", "sf-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster(elev_file)
elev_img <- raster::raster(elev_file)
elev_img <- raster::raster(elev_file)
library(rayshader)
source("get_usgs_elevation_data.R")
source("define_image_size.R")
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("Data", "sf-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
#elev_file <- "C:/Users/stahlm/Documents/Research_Projects/Groundwater_Isotopes/Output/RF_model/RF_model_GW_isotopes_H.gri"
elev_img <- raster::raster(elev_file)
#elev_file <- "C:/Users/stahlm/Documents/Research_Projects/Groundwater_Isotopes/Output/RF_model/RF_model_GW_isotopes_H.gri"
elev_img <- raster::raster(elev_file)
library(rayshader)
source("get_usgs_elevation_data.R")
source("define_image_size.R")
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("Data", "sf-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
#elev_file <- "C:/Users/stahlm/Documents/Research_Projects/Groundwater_Isotopes/Output/RF_model/RF_model_GW_isotopes_H.gri"
elev_img <- raster::raster(elev_file)
# download elevation data
elev_file <- file.path("./Data", "sf-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
#elev_file <- "C:/Users/stahlm/Documents/Research_Projects/Groundwater_Isotopes/Output/RF_model/RF_model_GW_isotopes_H.gri"
elev_img <- raster::raster(elev_file)
#elev_file <- "C:/Users/stahlm/Documents/Research_Projects/Groundwater_Isotopes/Output/RF_model/RF_model_GW_isotopes_H.gri"
elev_img <- raster::raster(elev_file)
library(rayshader)
source("get_usgs_elevation_data.R")
source("define_image_size.R")
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = -73.997889, lat = 42.768403), # bottom-left
p2 = list(long = -73.873456, lat = 42.862791)   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("./Data", "sf-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
#elev_file <- "C:/Users/stahlm/Documents/Research_Projects/Groundwater_Isotopes/Output/RF_model/RF_model_GW_isotopes_H.gri"
elev_img <- raster::raster(elev_file)
raster::plot(elev_img)
#elev_file <- "C:/Users/stahlm/Documents/Research_Projects/Groundwater_Isotopes/Output/RF_model/RF_model_GW_isotopes_H.gri"
elev_img <- raster::raster(elev_file)
library(tidyverse)
library(tigris)
library(tmap)
library(sf)
source("get_usgs_elevation_data.R")
source("define_image_size.R")
NY_counties <- counties(state = "NY", cb = TRUE) # cb = TRUE specifies to download a lower resolution file (faster download)
NY_counties <- st_as_sf(NY_counties) # convert to an sf object
Schenect <- NY_counties %>%
filter(NAME == "Schenectady")
bbox <- st_bbox(Schenect)
# define bounding box with longitude/latitude coordinates
bbox <- list(
p1 = list(long = bbox[[1]], lat = bbox[[2]]), # bottom-left
p2 = list(long = bbox[[3]], lat = bbox[[4]])   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("./Data", "schndy-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
elev_img <- raster::raster(elev_file)
elev_img <- raster::raster(elev_file)
ggplot(elev_img) + geom_contour()
raster::contour(elev_img)
bbox <- list(
p1 = list(long = -71.529806, lat = 44.161809), # bottom-left
p2 = list(long = -71.105251, lat = 44.381610)   # top-right
)
image_size <- define_image_size(bbox, major_dim = 600)
# download elevation data
elev_file <- file.path("./Data", "sf-elevation.tif")
get_usgs_elevation_data(bbox, size = image_size$size, file = elev_file,
sr_bbox = 4326, sr_image = 4326)
#elev_file <- "C:/Users/stahlm/Documents/Research_Projects/Groundwater_Isotopes/Output/RF_model/RF_model_GW_isotopes_H.gri"
elev_img <- raster::raster(elev_file)
raster::plot(elev_img)
raster::contour(elev_img)
elmat <- matrix(
raster::extract(elev_img, raster::extent(elev_img), buffer = 1000),
nrow = ncol(elev_img), ncol = nrow(elev_img)
)
elmat %>%
sphere_shade(sunangle = 315, texture = "bw") %>%
plot_map()
elmat %>%
sphere_shade(texture = "desert") %>%
#add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 1, fov = 0, theta = 0, zoom = 0.5, phi = 65, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "desert") %>%
#add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 10, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
filename_movie = tempfile()
elmat %>%
sphere_shade(texture="imhof1") %>%
add_water(detect_water(elmat), color = "blue") %>%
plot_3d(elmat, zscale=10, waterlinecolor="white", waterlinealpha=0.5)
render_movie(filename = filename_movie)
filename_movie = tempfile()
elmat %>%
sphere_shade(texture="desert") %>%
add_water(detect_water(elmat), color = "blue") %>%
plot_3d(elmat, zscale=10, waterlinecolor="white", waterlinealpha=0.5)
render_movie(filename = filename_movie)
filename_movie = tempfile()
elmat %>%
sphere_shade(texture="desert") %>%
add_water(detect_water(elmat), color = "blue") %>%
plot_3d(elmat, zscale=10, waterlinecolor="white", waterlinealpha=0.5)
render_movie(filename = filename_movie)
elmat %>%
sphere_shade(sunangle = 315, texture = "bw") %>%
plot_map()
elmat %>%
sphere_shade(texture = "desert") %>%
#add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 10, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "desert") %>%
#add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 10, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "desert") %>%
#add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 10, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_depth(focus = 0.6, focallength = 200, clear = TRUE)
#render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "desert") %>%
#add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 10, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_depth(focus = 0.6, focallength = 1, clear = TRUE)
#render_snapshot(clear=TRUE)
elmat %>%
sphere_shade(texture = "desert") %>%
#add_water(detect_water(elmat), color = "blue") %>%
add_shadow(ray_shade(elmat, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(elmat), 0) %>%
plot_3d(elmat, zscale = 10, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_depth(focus = 0.6, focallength = 10, clear = TRUE)
#render_snapshot(clear=TRUE)
filename_movie = tempfile()
elmat %>%
sphere_shade(texture="desert") %>%
add_water(detect_water(elmat), color = "blue") %>%
plot_3d(elmat, zscale=10, waterlinecolor="white", waterlinealpha=0.5)
render_movie(filename = filename_movie)
