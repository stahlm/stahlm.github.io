knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(readxl)
library(ggthemes)
Heard_of <- read_xlsx("../../Data/Class_survey.xlsx", sheet = "Heard_of")
getwd()
Heard_of <- read_xlsx("../../Data/Class_survey_2020.xlsx", sheet = "Heard_of")
cars
carData::Anscombe
data <- carData::Anscombe
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(data)
source('~/.active-rstudio-document')
data %>% ggplot(aes(x = education, y = income)) +
geom_point()
source('~/.active-rstudio-document')
source('~/Teaching_UnionCollege/Environmental_Data_Analysis/stahlm.github.io/ENS_215/Winter_2020/Lectures/test.R')
source('~/Teaching_UnionCollege/Environmental_Data_Analysis/stahlm.github.io/ENS_215/Winter_2020/Lectures/test.R', echo=TRUE)
library(tidyverse)
library(lubridate)
## Load in data
met_data <- read_csv('http://stahlm.github.io/ENS_215/Data/Blue_Hills_MA_Precip_Temp_Data_1.csv')
met_data <- mutate(met_data,DATE = parse_date_time(DATE,"mdy")) # convert date into computable format
met_data <- select(met_data,-c(TOBS)) # remove the TOBS column, since we won't use it
# install.packages("tidyverse")
# install.packages("plotly")
library(tidyverse)
library(lubridate)
## Load in data
met_data <- read_csv('http://stahlm.github.io/ENS_215/Data/Blue_Hills_MA_Precip_Temp_Data_1.csv')
met_data <- mutate(met_data,DATE = parse_date_time(DATE,"mdy")) # convert date into computable format
met_data <- select(met_data,-c(TOBS)) # remove the TOBS column, since we won't use it
head(met_data) # shows us the first few rows and provides info about data types
tail(met_data) # shows us the last few rows and provides info about data types
summary(met_data)
ggplot(met_data) + geom_line(aes(x = DATE, y = PRCP),color = "blue")
met_data <- mutate(met_data,year_val = year(DATE), month_val = month(DATE), day_val = day(DATE)) # add columns for year, month, and day
annual_precip <- group_by(met_data,year_val) # group the data by year
annual_precip<- summarise(annual_precip,tot_precip = sum(PRCP,na.rm = TRUE)) # create a new data frame that has the total annual precipitation (inches)
ggplot(annual_precip) + geom_line(aes(x = year_val, y = tot_precip),color = "blue") + geom_point(aes(x = year_val, y = tot_precip),color = "black")
met_data_2000_2010 <- filter(met_data, year_val >= 2000, year_val <= 2010)
ggplot(met_data_2000_2010) + geom_line(aes(x = DATE, y = PRCP),color = "blue") + facet_wrap(~year_val)
bday <- dmy("14/10/1979")
month(bday)
day(bday)
yday(bday)
ggplot(met_data_2000_2010) + geom_line(aes(x = yday(DATE), y = PRCP),color = "blue") + facet_wrap(~year_val)
met_data_2000_2010 <- filter(met_data, year_val >= 2000, year_val <= 2010) # new data frame
ggplot(met_data_2000_2010) + geom_line(aes(x = yday(DATE), y = PRCP),color = "blue") +
facet_wrap(~year_val) # plot the data
met_data_2000_2010 <- filter(met_data, year_val >= 2000, year_val <= 2010) # new data frame
ggplot(met_data_2000_2010) + geom_line(aes(x = yday(DATE), y = PRCP),color = "blue") +
facet_wrap(~year_val) # plot the data
met_data_2000_2010 <- filter(met_data, year(DATE) >= 2000, year(DATE) <= 2010) # new data frame
ggplot(met_data_2000_2010) + geom_line(aes(x = yday(DATE), y = PRCP),color = "blue") +
facet_wrap(~year(DATE)) # plot the data
2+2
2 +
library(tidyverse)
library(tidyverse)
# install.packages("tidyverse")
# install.packages("plotly")
library(tidyverse)
library(lubridate)
## Load in data
met_data <- read_csv('http://stahlm.github.io/ENS_215/Data/Blue_Hills_MA_Precip_Temp_Data_1.csv')
met_data <- mutate(met_data,DATE = parse_date_time(DATE,"mdy")) # convert date into computable format
met_data <- select(met_data,-c(TOBS)) # remove the TOBS column, since we won't use it
met_data <- read_csv('http://stahlm.github.io/ENS_215/Data/Blue_Hills_MA_Precip_Temp_Data_1.csv')
my_var <- 100
my_var <- 100
my_var
new_var
month.name
my_vec <- c(1,2,3,4)
vec_numeric <- c(1,2,3,4,5,6,7,8)
vec_strings <- c("pine","oak","maple","birch","fir")
vec_logic <- c(TRUE, TRUE, FALSE, TRUE)
my_list <- c(vec_numeric, vec_strings, vec_logic)
vec_numeric <- c(1,2,3,4,5,6,7,8)
vec_strings <- c("pine","oak","maple","birch","fir")
vec_logic <- c(TRUE, TRUE, FALSE, TRUE)
class(vec_numeric)
class(vec_numeric)
class(vec_strings)
class(vec_logic)
my_list <- c(vec_numeric, vec_strings, vec_logic)
class(my_list)
my_list
my_list <- list(vec_numeric, vec_strings, vec_logic)
my_list
class(my_list)
numbers <- c(1:26, NA)
lettersNew <- c(NA, letters) #letters is a special object available from base R
logical <- c(rep(TRUE, 13), NA, rep(FALSE, 13))
examp_df <- data.frame(lettersNew, numbers, logical, stringsAsFactors = FALSE)
View(examp_df)
examp_df[,1]
examp_df[1,2]
examp_df[1,3]
a <- mpg
library(tidyverse)
a <- mpg
View(a)
?mpg
1 > 2 | 2>1
1 > 2 & 2>1
library(tidyverse)
library(gapminder)
my_gap <- gapminder
library(tidyverse)
library(gapminder)
my_gap <- gapminder
test <- filter(my_gap, year == 2007)
View(test)
library(tidyverse)
library(gapminder)
my_gap <- gapminder # assign the gapminder data to our own data object called my_gap
ggplot(data = my_gap, mapping = aes(x = gdpPercap, y = lifeExp)) + geom_point()
ggplot(data = my_gap, mapping = aes(x = gdpPercap, y = lifeExp, color = continent)) + geom_point()
ggplot(data = my_gap, mapping = aes(x = gdpPercap, y = lifeExp)) + geom_point(color = "blue")
my_gap %>%
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point(color = "blue")
china_data <- filter(my_gap,
country == "China") # filter rows with data for China
china_data %>%
ggplot(aes(x = year, y = gdpPercap)) + geom_line()
my_gap %>%
filter(country == "China") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line()
euro_data <- filter(my_gap,
continent == "Europe")  # get data just for Europe
euro_data %>%
ggplot(aes(x = continent, y = lifeExp)) +
geom_boxplot()
my_gap %>%
ggplot(aes(x = continent, y = lifeExp)) +
geom_boxplot()
my_gap %>%
ggplot(aes(x = continent, y = lifeExp)) +
geom_violin()
my_gap %>% ggplot(aes(x = lifeExp)) +
geom_histogram()
my_gap %>% ggplot(aes(x = year, y = lifeExp)) +
geom_jitter()
my_gap %>% ggplot(aes(x = year, y = lifeExp)) +
geom_jitter(y = 0)
my_gap %>% ggplot(aes(x = year, y = lifeExp)) +
geom_jitter(height = 0)
china_data %>% ggplot(aes(x = year, y = gdpPercap)) +
geom_line()
china_data %>% ggplot(aes(x = year, y = gdpPercap)) +
geom_line() +
geom_point()
data_2007 %>%
ggplot(aes(x = gdpPercap, y = lifeExp, size = pop)) +
geom_point()
library(tidyverse)
library(gapminder)
my_gap <- gapminder # assign the gapminder data to our own data object called my_gap
ggplot(data = my_gap, mapping = aes(x = gdpPercap, y = lifeExp)) + geom_point()
ggplot(data = my_gap, mapping = aes(x = gdpPercap, y = lifeExp, color = continent)) + geom_point()
ggplot(data = my_gap, mapping = aes(x = gdpPercap, y = lifeExp)) + geom_point(color = "blue")
my_gap %>%
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point(color = "blue")
china_data <- filter(my_gap,
country == "China") # filter rows with data for China
china_data %>%
ggplot(aes(x = year, y = gdpPercap)) + geom_line()
my_gap %>%
filter(country == "China") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line()
euro_data <- filter(my_gap,
continent == "Europe")  # get data just for Europe
euro_data %>%
ggplot(aes(x = continent, y = lifeExp)) +
geom_boxplot()
my_gap %>%
ggplot(aes(x = continent, y = lifeExp)) +
geom_boxplot()
my_gap %>%
ggplot(aes(x = continent, y = lifeExp)) +
geom_violin()
my_gap %>% ggplot(aes(x = lifeExp)) +
geom_histogram()
data_2007 <- filter(my_gap,
year == 2007) # get data for year 2007
data_2007 %>%
ggplot(aes(continent)) +
geom_bar()
my_gap %>%
ggplot(aes(x = year, y = lifeExp)) +
geom_point()
my_gap %>% ggplot(aes(x = year, y = lifeExp)) +
geom_jitter(height = 0)
china_data %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line()
china_data %>% ggplot(aes(x = year, y = gdpPercap)) +
geom_line() +
geom_point()
data_2007 %>%
ggplot(aes(x = gdpPercap, y = lifeExp, size = pop)) +
geom_point()
data_2007 %>%
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point(size = 2.5)
data_2007 %>%
ggplot(aes(x = gdpPercap, y = lifeExp, alpha = continent)) +
geom_point()
my_gap %>% ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point(alpha = 0.2)
my_gap %>%
ggplot(aes(x = gdpPercap, y = lifeExp, shape = continent)) +
geom_point()
my_gap %>%
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point(shape = 24)
my_gap %>%
ggplot(aes(x = gdpPercap, y = lifeExp, fill = continent)) +
geom_point(shape = 24)
my_gap %>%
ggplot(, aes(x = gdpPercap, y = lifeExp, fill = continent)) +
geom_point(shape = 24, color = "gray")
my_gap %>%
ggplot(aes(x = gdpPercap, y = lifeExp, fill = continent)) +
geom_point(shape = 24, color = "gray")
my_gap %>%
ggplot(aes(x = gdpPercap, y = lifeExp, fill = pop)) +
geom_point(shape = 24)
my_gap %>%
ggplot(aes(x = gdpPercap, y = lifeExp, fill = percent_rank(pop))) +
geom_point(shape = 24)
knitr::opts_chunk$set(comment=NA, fig.width=6, fig.height=6))
knitr::opts_chunk$set(comment=NA, fig.width=6, fig.height=6)
