group_by(Month) %>%
summarise(month_mean = mean(Flow))
ggplot(Hudson_flow, aes(x = factor(Month), y = Flow)) +
geom_jitter(alpha = 0.3, width = 0.25) +
geom_point(data = hudson_summary,
aes(x = factor(Month), y = month_mean), fill = "blue", shape = 22, size = 3) +
labs(x = "",
y = "Flow (cfs)",
title = "Hudson River flow above Lock 1",
subtitle = "Daily data for years 2013-2016",
caption = "USGS Gage 01335754"
) +
theme_classic() +
scale_y_continuous(labels = comma_format()) +
scale_x_discrete(breaks = 1:12,
labels = month.abb)
fig_hudson
ggsave(filename = "./Fig_Hudson.png", plot = fig_hudson)
hudson_summary <- Hudson_flow %>%
group_by(Month) %>%
summarise(month_mean = mean(Flow))
fig_hudson <- ggplot(Hudson_flow, aes(x = factor(Month), y = Flow)) +
geom_jitter(alpha = 0.3, width = 0.25) +
geom_point(data = hudson_summary,
aes(x = factor(Month), y = month_mean), fill = "blue", shape = 22, size = 3) +
labs(x = "",
y = "Flow (cfs)",
title = "Hudson River flow above Lock 1",
subtitle = "Daily data for years 2013-2016",
caption = "USGS Gage 01335754"
) +
theme_classic() +
scale_y_continuous(labels = comma_format()) +
scale_x_discrete(breaks = 1:12,
labels = month.abb)
fig_hudson
ggsave(filename = "./Fig_Hudson.png", plot = fig_hudson)
hudson_summary <- Hudson_flow %>%
group_by(Month) %>%
summarise(month_mean = mean(Flow))
fig_hudson <- ggplot(Hudson_flow, aes(x = factor(Month), y = Flow)) +
geom_jitter(alpha = 0.3, width = 0.25) +
geom_point(data = hudson_summary,
aes(x = factor(Month), y = month_mean), fill = "blue", shape = 22, size = 3) +
labs(x = "",
y = "Flow (cfs)",
title = "Hudson River flow above Lock 1",
subtitle = "Daily data for years 2013-2016",
caption = "USGS Gage 01335754"
) +
theme_classic() +
scale_y_continuous(labels = comma_format()) +
scale_x_discrete(breaks = 1:12,
labels = month.abb)
fig_hudson
fig_hudson + scale_y_log10()
ggsave(filename = "./Fig_Hudson.png", plot = fig_hudson)
hudson_summary <- Hudson_flow %>%
group_by(Month) %>%
summarise(month_mean = mean(Flow))
fig_hudson <- ggplot(Hudson_flow, aes(x = factor(Month), y = Flow)) +
geom_jitter(alpha = 0.3, width = 0.25) +
geom_point(data = hudson_summary,
aes(x = factor(Month), y = month_mean), fill = "blue", shape = 22, size = 3) +
labs(x = "",
y = "Flow (cfs)",
title = "Hudson River flow above Lock 1",
subtitle = "Daily data for years 2013-2016",
caption = "USGS Gage 01335754"
) +
theme_classic() +
scale_y_continuous(labels = comma_format()) +
scale_x_discrete(breaks = 1:12,
labels = month.abb)
fig_hudson
fig_hudson + scale_y_log10(breaks = c(1000,2000,5000,10000,30000))
ggsave(filename = "./Fig_Hudson.png", plot = fig_hudson)
library(lubridate)
Hudson_flow <- read_csv("https://stahlm.github.io/ENS_215/Data/Hudson_River_Streamflow.csv")
View(Hudson_flow)
library(lubridate)
Hudson_flow <- read_csv("https://stahlm.github.io/ENS_215/Data/Hudson_River_Streamflow.csv")
unique(Hudson_flow$site_no)
library(lubridate)
Hudson_flow <- read_csv("https://stahlm.github.io/ENS_215/Data/Hudson_River_Streamflow.csv") %>%
filter(site_no == "01335754")
library(lubridate)
Hudson_flow <- read_csv("https://stahlm.github.io/ENS_215/Data/Hudson_River_Streamflow.csv") %>%
filter(site_no == "01335754") %>%
rename(flow_cfs = X_00060_00003)
library(tidyverse)
earthquake_data <- read_csv("https://stahlm.github.io/ENS_215/Data/Rocky_Mtn_Arsenal_Earthquakes.csv", skip = 2)
Hudson_flow <- read_csv("https://stahlm.github.io/ENS_215/Data/Hudson_01335754_review_class.csv")
# Your code here
max_flow <- max(Hudson_flow$Flow)
current_flow <- Hudson_flow$Flow[1]
current_row <- 1
while(current_flow < max_flow){
current_row <- current_row + 1
current_flow <- Hudson_flow$Flow[current_row]
}
print(paste("Max flow occurs on ", Hudson_flow$Year[current_row],"-", Hudson_flow$Month[current_row], "-", Hudson_flow$Day[current_row], sep = ""))
counter_var <- 1
for (i_obs in Hudson_flow$Flow) {
if (counter_var == 1) {
minimum_flow <- i_obs
} else if(i_obs < minimum_flow) {
minimum_flow <- i_obs
} else {
minimum_flow <- minimum_flow
}
counter_var <- counter_var + 1
}
library(scales)
library(lubridate)
Hudson_flow <- read_csv("https://stahlm.github.io/ENS_215/Data/Hudson_River_Streamflow.csv") %>%
filter(site_no == "01335754") %>%
rename(flow_cfs = X_00060_00003)
# 1
Hudson_flow <- Hudson_flow %>% mutate(Year = year(dateTime),
Month = month(dateTime), Day = day(dateTime)) %>%
filter(Hudson_flow, site_no == "01335754") %>%
select(site_no, Year, Month, Day, Flow = X_00060_00003)
library(lubridate)
Hudson_flow <- read_csv("https://stahlm.github.io/ENS_215/Data/Hudson_River_Streamflow.csv") %>%
filter(site_no == "01335754") %>%
rename(flow_cfs = X_00060_00003)
library(lubridate)
Hudson_flow <- read_csv("https://stahlm.github.io/ENS_215/Data/Hudson_River_Streamflow.csv") %>%
filter(site_no == "01335754") %>%
rename(flow_cfs = X_00060_00003)
# 1
Hudson_flow <- Hudson_flow %>% mutate(Year = year(dateTime),
Month = month(dateTime), Day = day(dateTime)) %>%
select(site_no, Year, Month, Day, Flow = X_00060_00003)
# 1
Hudson_flow <- Hudson_flow %>% mutate(Year = year(dateTime),
Month = month(dateTime), Day = day(dateTime)) %>%
select(site_no, Year, Month, Day, flow_cfs)
library(lubridate)
Hudson_flow <- read_csv("https://stahlm.github.io/ENS_215/Data/Hudson_River_Streamflow.csv") %>%
filter(site_no == "01335754") %>%
rename(flow_cfs = X_00060_00003)
# 1
Hudson_flow <- Hudson_flow %>% mutate(Year = year(dateTime),
Month = month(dateTime), Day = day(dateTime)) %>%
select(site_no, Year, Month, Day, flow_cfs)
Hudson_flow %>%
group_by(Year) %>%
summarize(flow_mean = mean(flow_cfs),
flow_median = median(flow_cfs))
Hudson_flow %>%
group_by(Year) %>%
summarize(flow_mean = mean(flow_cfs, na.rm = T),
flow_median = median(flow_cfs, na.rm = T))
Hudson_flow %>%
group_by(Year) %>%
summarize(flow_mean = mean(flow_cfs, na.rm = T),
flow_median = median(flow_cfs, na.rm = T)) %>%
ggplot(aes(x = Year, y = flow_mean)) +
geom_point()
Hudson_table <- Hudson_flow %>%
group_by(Year) %>%
summarize(flow_mean = mean(flow_cfs, na.rm = T),
flow_median = median(flow_cfs, na.rm = T))
Hudson_table %>%
ggplot(aes(x = Year, y = flow_mean)) +
geom_point() +
geom_smooth(method = "lm")
Hudson_table <- Hudson_flow %>%
group_by(Year) %>%
summarize(flow_mean = mean(flow_cfs, na.rm = T),
flow_median = median(flow_cfs, na.rm = T))
Hudson_table %>%
ggplot(aes(x = Year, y = flow_mean)) +
geom_point() +
geom_smooth(method = "lm") +
theme_classic()
Hudson_table <- Hudson_flow %>%
group_by(Year) %>%
summarize(flow_mean = mean(flow_cfs, na.rm = T),
flow_median = median(flow_cfs, na.rm = T))
Hudson_table %>%
ggplot(aes(x = Year, y = flow_mean)) +
geom_point() +
geom_smooth(method = "lm") +
theme_classic()
Hudson_table %>%
ggplot(aes(x = Year, y = flow_median)) +
geom_point() +
geom_smooth(method = "lm") +
theme_classic()
# Part 2
Hudson_flow %>%
group_by(Year) %>%
summarize(flow_max = max(flow_cfs)) %>%
top_n(flow_max, 10)
# Part 2
Hudson_flow %>%
group_by(Year) %>%
summarize(flow_max = max(flow_cfs)) %>%
top_n(flow_max, 10) %>%
arrange(flow_max)
# Part 2
Hudson_flow %>%
group_by(Year) %>%
summarize(flow_max = max(flow_cfs)) %>%
top_n(flow_max, 10) %>%
arrange(-flow_max)
# Part 2
Hudson_flow %>%
group_by(Year) %>%
summarize(flow_max = max(flow_cfs)) %>%
top_n(flow_max, n = 10) %>%
arrange(-flow_max)
# Part 2
Hudson_flow %>%
group_by(Year) %>%
summarize(flow_max = max(flow_cfs)) %>%
top_n(flow_max, n = 10) %>%
arrange(-flow_max)
# Part 2
Hudson_flow %>%
group_by(Year) %>%
summarize(flow_max = max(flow_cfs)) %>%
top_n(x = flow_max, n = 10) %>%
arrange(-flow_max)
# Part 2
Hudson_flow %>%
group_by(Year) %>%
summarize(flow_max = max(flow_cfs)) %>%
top_n(n = 10) %>%
arrange(-flow_max)
# Part 2
Hudson_flow %>%
group_by(Year) %>%
summarize(flow_max = max(flow_cfs)) %>%
top_n(n = 10, wt = flow_max) %>%
arrange(-flow_max)
# Part 2
Hudson_flow %>%
group_by(Year) %>%
summarize(flow_max = max(flow_cfs)) %>%
top_n(n = 10, wt = "flow_max") %>%
arrange(-flow_max)
library(tidyverse)
earthquake_data <- read_csv("https://stahlm.github.io/ENS_215/Data/Rocky_Mtn_Arsenal_Earthquakes.csv", skip = 2)
Hudson_flow <- read_csv("https://stahlm.github.io/ENS_215/Data/Hudson_01335754_review_class.csv")
# Your code here
max_flow <- max(Hudson_flow$Flow)
current_flow <- Hudson_flow$Flow[1]
current_row <- 1
while(current_flow < max_flow){
current_row <- current_row + 1
current_flow <- Hudson_flow$Flow[current_row]
}
print(paste("Max flow occurs on ", Hudson_flow$Year[current_row],"-", Hudson_flow$Month[current_row], "-", Hudson_flow$Day[current_row], sep = ""))
counter_var <- 1
for (i_obs in Hudson_flow$Flow) {
if (counter_var == 1) {
minimum_flow <- i_obs
} else if(i_obs < minimum_flow) {
minimum_flow <- i_obs
} else {
minimum_flow <- minimum_flow
}
counter_var <- counter_var + 1
}
library(scales)
library(lubridate)
Hudson_flow <- read_csv("https://stahlm.github.io/ENS_215/Data/Hudson_River_Streamflow.csv") %>%
filter(site_no == "01335754") %>%
rename(flow_cfs = X_00060_00003)
# 1
Hudson_flow <- Hudson_flow %>% mutate(Year = year(dateTime),
Month = month(dateTime), Day = day(dateTime)) %>%
select(site_no, Year, Month, Day, flow_cfs)
# Part 1
Hudson_table <- Hudson_flow %>%
group_by(Year) %>%
summarize(flow_mean = mean(flow_cfs, na.rm = T),
flow_median = median(flow_cfs, na.rm = T))
Hudson_table %>%
ggplot(aes(x = Year, y = flow_mean)) +
geom_point() +
geom_smooth(method = "lm") +
theme_classic()
Hudson_table %>%
ggplot(aes(x = Year, y = flow_median)) +
geom_point() +
geom_smooth(method = "lm") +
theme_classic()
# Part 2
Hudson_flow %>%
group_by(Year) %>%
summarize(flow_max = max(flow_cfs)) %>%
top_n(n = 10, wt = flow_max) %>%
arrange(-flow_max)
# Part 2
Hudson_flow %>%
group_by(Year) %>%
summarize(flow_max = max(flow_cfs)) %>%
top_n(n = 10, wt = flow_max) %>%
arrange(-flow_max)
# Part 3
Hudson_flow %>%
group_by(Year, Month) %>%
summarize(flow_mean = mean(flow_cfs)) %>%
ggplot(aes(x = Year, y = flow_cfs)) +
geom_point() +
facet_wrap(~ Month)
# Part 3
Hudson_flow %>%
group_by(Year, Month) %>%
summarize(flow_mean = mean(flow_cfs, na.rm = T)) %>%
ggplot(aes(x = Year, y = flow_mean)) +
geom_point() +
facet_wrap(~ Month)
# Part 3
Hudson_flow %>%
filter(Year >= 1990) %>%
group_by(Year, Month) %>%
summarize(flow_mean = mean(flow_cfs, na.rm = T)) %>%
ggplot(aes(x = Year, y = flow_mean)) +
geom_point() +
facet_wrap(~ Month)
# Part 3
Hudson_flow %>%
filter(Year >= 1990) %>%
group_by(Year, Month) %>%
summarize(flow_mean = median(flow_cfs, na.rm = T)) %>%
ggplot(aes(x = Year, y = flow_mean)) +
geom_point() +
facet_wrap(~ Month)
# Part 3
Hudson_flow %>%
filter(Year >= 1990) %>%
group_by(Year, Month) %>%
summarize(flow_mean = mean(flow_cfs, na.rm = T)) %>%
ggplot(aes(x = Year, y = flow_mean)) +
geom_point() +
facet_wrap(~ Month)
# Part 3
Hudson_flow %>%
filter(Year >= 1990) %>%
group_by(Year, Month) %>%
summarize(flow_mean = mean(flow_cfs, na.rm = T)) %>%
ggplot(aes(x = Year, y = flow_mean)) +
geom_point() +
facet_wrap(~ Month, scales = "free-y")
# Part 3
Hudson_flow %>%
filter(Year >= 1990) %>%
group_by(Year, Month) %>%
summarize(flow_mean = mean(flow_cfs, na.rm = T)) %>%
ggplot(aes(x = Year, y = flow_mean)) +
geom_point() +
facet_wrap(~ Month, scales = "free_y")
# Part 3
Hudson_flow %>%
filter(Year >= 1990) %>%
group_by(Year, Month) %>%
summarize(flow_mean = mean(flow_cfs, na.rm = T)) %>%
ggplot(aes(x = Year, y = flow_mean)) +
geom_point() +
theme_classic() +
facet_wrap(~ Month)
# Part 3
Hudson_flow %>%
filter(Year >= 1990) %>%
group_by(Year, Month) %>%
summarize(flow_mean = mean(flow_cfs, na.rm = T)) %>%
ggplot(aes(x = Year, y = flow_mean)) +
geom_point() +
theme_bw() +
facet_wrap(~ Month)
# Part 3
Hudson_flow %>%
filter(Year >= 1990) %>%
group_by(Year, Month) %>%
summarize(flow_mean = mean(flow_cfs, na.rm = T)) %>%
ggplot(aes(x = Year, y = flow_mean)) +
geom_point() +
scale_y_log10() +
theme_bw() +
facet_wrap(~ Month)
# Part 3
Hudson_flow %>%
filter(Year >= 1990) %>%
group_by(Year, Month) %>%
summarize(flow_mean = max(flow_cfs, na.rm = T)) %>%
ggplot(aes(x = Year, y = flow_mean)) +
geom_point() +
scale_y_log10() +
theme_bw() +
facet_wrap(~ Month)
# Part 3
Hudson_flow %>%
filter(Year >= 1990) %>%
group_by(Year, Month) %>%
summarize(flow_mean = min(flow_cfs, na.rm = T)) %>%
ggplot(aes(x = Year, y = flow_mean)) +
geom_point() +
scale_y_log10() +
theme_bw() +
facet_wrap(~ Month)
# Part 3
Hudson_flow %>%
filter(Year >= 1980) %>%
group_by(Year, Month) %>%
summarize(flow_mean = mean(flow_cfs, na.rm = T)) %>%
ggplot(aes(x = Year, y = flow_mean)) +
geom_point() +
scale_y_log10() +
theme_bw() +
facet_wrap(~ Month)
# Part 3
Hudson_flow %>%
filter(Year >= 1970) %>%
group_by(Year, Month) %>%
summarize(flow_mean = mean(flow_cfs, na.rm = T)) %>%
ggplot(aes(x = Year, y = flow_mean)) +
geom_point() +
scale_y_log10() +
theme_bw() +
facet_wrap(~ Month)
# Part 2
Hudson_flow %>%
group_by(Year) %>%
summarize(flow_max = max(flow_cfs)) %>%
top_n(n = 15, wt = flow_max) %>%
arrange(-flow_max)
# Part 2
Hudson_flow %>%
group_by(Year) %>%
summarize(flow_max = max(flow_cfs, na.rm = T)) %>%
top_n(n = 15, wt = flow_max) %>%
arrange(-flow_max)
# Part 2
Hudson_flow %>%
group_by(Year) %>%
summarize(flow_max = max(flow_cfs, na.rm = T)) %>%
top_n(n = 15, wt = flow_max) %>%
arrange(-flow_max)
library(tidyverse)
earthquake_data <- read_csv("https://stahlm.github.io/ENS_215/Data/Rocky_Mtn_Arsenal_Earthquakes.csv", skip = 2)
Hudson_flow <- read_csv("https://stahlm.github.io/ENS_215/Data/Hudson_01335754_review_class.csv")
# Your code here
max_flow <- max(Hudson_flow$Flow)
current_flow <- Hudson_flow$Flow[1]
current_row <- 1
while(current_flow < max_flow){
current_row <- current_row + 1
current_flow <- Hudson_flow$Flow[current_row]
}
print(paste("Max flow occurs on ", Hudson_flow$Year[current_row],"-", Hudson_flow$Month[current_row], "-", Hudson_flow$Day[current_row], sep = ""))
counter_var <- 1
for (i_obs in Hudson_flow$Flow) {
if (counter_var == 1) {
minimum_flow <- i_obs
} else if(i_obs < minimum_flow) {
minimum_flow <- i_obs
} else {
minimum_flow <- minimum_flow
}
counter_var <- counter_var + 1
}
library(scales)
library(lubridate)
Hudson_flow <- read_csv("https://stahlm.github.io/ENS_215/Data/Hudson_River_Streamflow.csv") %>%
filter(site_no == "01335754") %>%
rename(flow_cfs = X_00060_00003)
# 1
Hudson_flow <- Hudson_flow %>% mutate(Year = year(dateTime),
Month = month(dateTime), Day = day(dateTime)) %>%
select(site_no, Year, Month, Day, flow_cfs)
# Part 1
Hudson_table <- Hudson_flow %>%
group_by(Year) %>%
summarize(flow_mean = mean(flow_cfs, na.rm = T),
flow_median = median(flow_cfs, na.rm = T))
Hudson_table %>%
ggplot(aes(x = Year, y = flow_mean)) +
geom_point() +
geom_smooth(method = "lm") +
theme_classic()
Hudson_table %>%
ggplot(aes(x = Year, y = flow_median)) +
geom_point() +
geom_smooth(method = "lm") +
theme_classic()
# Part 2
Hudson_flow %>%
group_by(Year) %>%
summarize(flow_max = max(flow_cfs, na.rm = T)) %>%
top_n(n = 15, wt = flow_max) %>%
arrange(-flow_max)
# Part 2
Hudson_flow %>%
group_by(Year) %>%
summarize(flow_max = max(flow_cfs, na.rm = T)) %>%
top_n(n = 10, wt = flow_max) %>%
arrange(-flow_max)
library(lubridate)
Hudson_flow <- read_csv("https://stahlm.github.io/ENS_215/Data/Hudson_River_Streamflow.csv") %>%
filter(site_no == "01335754") %>%
rename(flow_cfs = X_00060_00003)
temperature_data <- read_csv("https://stahlm.github.io/ENS_215/Data/NOAA_State_Temp_Lab_Data.csv")
temperature_data <- readr::read_csv("https://stahlm.github.io/ENS_215/Data/NOAA_State_Temp_Lab_Data.csv")
View(temperature_data)
0.75^2
0.1^2
