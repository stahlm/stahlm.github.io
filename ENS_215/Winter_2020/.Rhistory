theme_classic()
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
theme_bw()
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
theme_bw()
2+2
test_var <- 400
test_var <- 400
a <- "hi"
b <- "hello"
a+b
c(a,b)
?paste
paste(a,b)
a <- c("1","2","3")
b <- c("a","b","c")
paste(a,b)
c <- c(a,b)
c
paste(a,b, sep = ",")
paste(a,b, sep = ", ")
a <- T
a
a == T
a ==
a == F
a <- 1:5
rep(a,2)
?rep
rep(a,each = 2)
rep(a,times = 2,each = 2)
rep(a,times = 2,each = 10)
a <- mpg
library(tidyverse)
a <- mpg
View(a)
library(tidyverse)
library(gapminder)
gapminder
summary(gapminder)
gap_data <- gapminder
filter(gap_data, gdpPercap > 5000)
filter(gap_data, gdpPercap > 5000, year == 2007)
data_2007_highGDP <- filter(gap_data, gdpPercap > 5000, year == 2007)
filter(gap_data, gdpPercap > 5000, continent == "Asia")
# Your code here
filter(gap_data, country == "Canada" | country == "China")
filter(gap_data, country %in% c("Canada", "China"))
# Your code here
gap_data[gap_data$year == 2007 & gap_data$gdpPercap > 5000, ] # the old way in base R
filter(gap_data, year == 2007, gdpPercap > 5000) # with dplyr
gap_sorted <- arrange(gap_data, gdpPercap)
gap_sorted <- arrange(gap_data, desc(gdpPercap))
View(gap_sorted)
library(tidyverse)
dams_data <- read_csv("https://stahlm.github.io/ENS_215/Data/Dams_FAO_SelectCols_LabData.csv")
View(dams_data)
library(tidyverse)
library(gapminder)
my_gap <- gapminder
my_gap %>% percent_rank(lifeExp)
my_gap %>% mutate(life_rank = percent_rank(lifeExp))
my_gap %>% mutate(life_rank = percent_rank(lifeExp)) %>% arrange(life_rank)
my_gap %>% mutate(life_rank = percent_rank(lifeExp)) %>% arrange(desc(life_rank))
library(tidyverse)
dams_data <- read_csv("https://stahlm.github.io/ENS_215/Data/Dams_FAO_SelectCols_LabData.csv")
View(dams_data)
dams_data %>% group_by(Continent) %>% summarise(mean(Dam_height_m))
dams_data %>% group_by(Continent) %>% summarise(mean(Dam_height_m, na.rm = T))
dams_data %>% group_by(Continent) %>% summarise(mean(Dam_height_m, na.rm = T), ndam = n())
library(tidyverse)
library(readr) # we'll use this package later in the lecture to load in files from our class website
library(gapminder)
my_gap <- gapminder
my_gap_2007 <- filter(my_gap, year == 2007)
summarize(my_gap_2007, avg_life = mean(lifeExp), avg_gdp_per_cap = mean(gdpPercap) )
# Your code here
my_gap_2007 <- group_by(my_gap_2007, continent) # group the data by continent
summarize(my_gap_2007, min_life = min(lifeExp), mean(lifeExp), max(lifeExp))
my_gap <- group_by(my_gap, continent, year) # group by continent then year
summarize(my_gap, min_life = min(lifeExp), mean(lifeExp), max(lifeExp))
my_gap <- ungroup(my_gap) # ungroup the my_gap data
my_gap %>%
group_by(year) %>%
top_n(3, gdpPercap)
my_gap %>%
group_by(year) %>%
top_n(3, gdpPercap) %>%
arrange(year)
# Your code here
# Your code here
# Your code here
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/NOAA_State_Precip_LabData.csv")
# Your code here
# Your code here
# Your code here
# Your code here
# Your code here
# Your code here
# Your code here
View(precip_data)
state_data %>% group_by(Month) %>%
summarize(m_avg = mean(Precip_inches),
m_min = min(Precip_inches),
m_max = max(Precip_inches))
state_2_get <- "CA" # Abbreviation code for state I want to select
state_data <- filter(precip_data, state_cd == state_2_get)
state_data %>% group_by(Month) %>%
summarize(m_avg = mean(Precip_inches),
m_min = min(Precip_inches),
m_max = max(Precip_inches))
state_data %>%
group_by(Year) %>%
summarize(tot_ann_precip = sum(Precip_inches))
t3 <- precip_data %>%
group_by(state_cd, Year) %>%
summarize(annual_precip = sum(Precip_inches))
t3 %>%
group_by(Year) %>%
top_n(1, annual_precip) %>%
arrange(Year)
t5 <- precip_data %>%
group_by(state_cd, Year) %>%
summarize(tot_annual_precip = sum(Precip_inches)) %>%
group_by(state_cd) %>%
summarize(mean_precip = mean(tot_annual_precip)) %>%
arrange(desc(mean_precip))
View(t5)
View(t3)
t5 <- precip_data %>%
group_by(state_cd, Year) %>%
summarize(tot_annual_precip = sum(Precip_inches)) %>%
group_by(state_cd) %>%
summarize(mean_precip = mean(tot_annual_precip),
min_precip = min(tot_annual_precip),
max_precip = max(tot_annual_precip)) %>%
arrange(desc(mean_precip))
state_data <- mutate(state_data, season = if_else(Month %in% c(3,4,5,6), "season-1", "season-2"))
t6 <-  state_data %>%
group_by(Year, season) %>%
summarize(precip_seasonal = sum(Precip_inches)) %>%
group_by(Year) %>%
summarize(precip_ratio = first(precip_seasonal)/sum(precip_seasonal) )
View(t6)
devtools::install_github("thomasp85/patchwork")
library(patchwork)
devtools::install_github("thomasp85/patchwork")
library(patchwork)
library("patchwork")
install.packages("tidyverse")
library("tmap", lib.loc="~/R/win-library/3.5")
install.packages(c("geojson", "geojsonio", "geojsonlint", "geojsonR", "sf", "tmap"))
getwd()
getwd()
getwd()
minard_table <- read_csv("./Images/minard_table.csv")
library(tidyverse)
library(gapminder)
library(kableExtra)
library(scales)
my_gap <- gapminder
minard_table <- read_csv("./Images/minard_table.csv")
minard_table <- read_csv("./Images/minard_table.csv")
minard_table <- read_csv("../Images/minard_table.csv")
minard_table %>% kable() %>% kable_styling(bootstrap_options = c("striped", "hover"), full_width = FALSE)
library(tidyverse)
library(gapminder)
my_gap <- gapminder # assign the gapminder data to our own data object called my_gap
my_gap %>%
ggplot(aes(x = year, y = lifeExp)) +
geom_line()
my_gap %>%
ggplot(aes(x = year, y = lifeExp, color = country)) +
geom_line() +
theme(legend.position = "none") # turning off the legend since
my_gap %>%
ggplot(aes(x = year, y = lifeExp, group = country)) +
geom_line()
my_gap %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = continent)) +
geom_line()
my_gap %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = continent)) +
geom_line(alpha = 0.4) +
geom_smooth(aes(group = continent))
my_gap %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = continent)) +
geom_line(alpha = 0.4) +
geom_smooth(aes(group = continent)) +
theme_bw()
my_gap %>%
filter(continent == "Americas", year == 2007) %>%
ggplot(aes(x = lifeExp, y = country)) +
geom_point()
my_gap %>%
filter(continent == "Americas", year == 2007) %>%
ggplot(aes(x = lifeExp, y = country)) +
geom_point() +
theme_classic()
my_gap %>%
filter(continent == "Americas", year == 2007) %>%
ggplot(aes(x = lifeExp, y = country)) +
geom_point() +
theme_bw()
my_gap %>%
filter(continent == "Americas", year == 2007) %>%
ggplot(aes(x = lifeExp, y = reorder(country,lifeExp) )) +
geom_point()
my_gap %>%
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point()
my_gap %>%
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
theme_bw()
my_gap %>% ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
theme_bw() +
facet_wrap(~ continent)
my_gap %>% filter(year%in% c(1952, 1972, 1992, 2002)) %>%
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
facet_grid(continent ~ year)
my_gap %>%
filter(year%in% c(1952, 1972, 1992, 2002)) %>%
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
theme_bw() +
facet_grid(continent ~ year)
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/NOAA_State_Precip_LabData.csv")
precip_mean_annual <- precip_data %>%
group_by(state_cd,Year) %>%
summarize(annual_tot_precip = sum(Precip_inches))
precip_mean_annual <- precip_data %>%
group_by(state_cd,Year) %>%
summarize(annual_tot_precip = sum(Precip_inches))
precip_mean_annual
precip_data %>%
ggplot(aes(x = Year, y = Precip_inches, group = state_cd)) +
geom_point() +
facet_wrap(~Month)
precip_data %>%
ggplot(aes(x = Year, y = Precip_inches, group = state_cd)) +
geom_line() +
facet_wrap(~Month)
precip_data %>%
filter(state_cd %in% c("MA", "NY")) %>%
ggplot(aes(x = Year, y = Precip_inches, group = state_cd)) +
geom_line() +
facet_wrap(~Month)
precip_data %>%
filter(state_cd %in% c("MA", "NY")) %>%
ggplot(aes(x = Year, y = Precip_inches, color = state_cd)) +
geom_line() +
facet_wrap(~Month)
precip_mean_annual %>%
filter(state_cd %in% c("MA", "NY", "CA", "FL")) %>%
ggplot(aes(x = Year, y = annual_tot_precip)) +
geom_line() +
facet_wrap(~state_cd)
precip_mean_annual %>%
filter(state_cd %in% c("MA", "NY", "CA", "FL")) %>%
ggplot(aes(x = Year, y = annual_tot_precip)) +
geom_line() +
geom_point() +
facet_wrap(~state_cd)
# Look just at the Americas to simply make the graphic less "crowded" with data
gap_americas <- my_gap %>%
filter(continent == "Americas")
gap_americas %>%
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
geom_vline(xintercept = 10000, color = "blue")
fig_americas <- gap_americas %>%
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
geom_vline(xintercept = 10000, color = "blue")
fig_americas
fig_americas +
geom_hline(yintercept = 65, color = "red")
life_exp_table <- my_gap %>%
filter(year %in% c(1952,2007)) %>%
group_by(country) %>%
arrange(country, year) %>%
summarize(continent = first(continent), life_1952 = first(lifeExp), life_2007 = last(lifeExp))
life_exp_table
life_exp_table %>%
ggplot(aes(x = life_1952, y = life_2007)) +
geom_point()
library(tidyverse)
library(gapminder)
my_gap <- gapminder # assign the gapminder data to our own data object called my_gap
my_gap %>%
ggplot(aes(x = year, y = lifeExp)) +
geom_line()
my_gap %>%
ggplot(aes(x = year, y = lifeExp, color = country)) +
geom_line() +
theme(legend.position = "none") # turning off the legend
my_gap %>%
ggplot(aes(x = year, y = lifeExp, group = country)) +
geom_line()
my_gap %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = continent)) +
geom_line()
my_gap %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = continent)) +
geom_line(alpha = 0.4) +
geom_smooth(aes(group = continent)) +
theme_bw()
my_gap %>%
filter(continent == "Americas", year == 2007) %>%
ggplot(aes(x = lifeExp, y = country)) +
geom_point() +
theme_bw()
my_gap %>%
filter(continent == "Americas", year == 2007) %>%
ggplot(aes(x = lifeExp, y = reorder(country,lifeExp) )) +
geom_point()
my_gap %>%
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
theme_bw()
my_gap %>% ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
theme_bw() +
facet_wrap(~ continent)
my_gap %>%
filter(year%in% c(1952, 1972, 1992, 2002)) %>%
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
theme_bw() +
facet_grid(continent ~ year)
precip_data <- read_csv("https://stahlm.github.io/ENS_215/Data/NOAA_State_Precip_LabData.csv")
precip_mean_annual <- precip_data %>%
group_by(state_cd,Year, Month) %>%
summarize(montl = sum(Precip_inches))
precip_mean_annual
precip_mean_annual %>%
filter(state_cd %in% c("MA", "NY", "CA", "FL")) %>%
ggplot(aes(x = Year, y = annual_tot_precip)) +
geom_line() +
geom_point() +
facet_wrap(~state_cd)
life_exp_table %>%
ggplot(aes(x = life_1952, y = life_2007)) +
geom_point()
life_exp_table <- my_gap %>%
filter(year %in% c(1952,2007)) %>%
group_by(country) %>%
arrange(country, year) %>%
summarize(continent = first(continent), life_1952 = first(lifeExp), life_2007 = last(lifeExp))
life_exp_table
life_exp_table %>%
ggplot(aes(x = life_1952, y = life_2007)) +
geom_point()
life_exp_table %>%
ggplot(aes(x = life_1952, y = life_2007)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red")
life_exp_table %>%
ggplot(aes(x = life_1952, y = life_2007)) +
geom_point() +
theme_bw()
life_exp_table %>%
ggplot(aes(x = life_1952, y = life_2007)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red") +
theme_bw()
ggplot(life_exp_table, aes(x = life_1952, y = life_2007, color = continent)) + geom_point() + geom_abline(slope = 1, intercept = 0, color = "red")
life_exp_table %>%
ggplot(aes(x = life_1952, y = life_2007, color = continent)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red") +
theme_bw()
life_exp_table %>% ggplot(aes(x = life_1952, y = life_2007, color = continent)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red") +
facet_wrap(~ continent)
life_exp_table %>% ggplot(aes(x = life_1952, y = life_2007, color = continent)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red") +
theme_bw() +
facet_wrap(~ continent)
fig_gap <- my_gap %>%
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() # let's save our "base/template" figure to an object so we can easily adapt it while typing less code
fig_gap
fig_gap <- my_gap %>%
ggplot(aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
theme_bw() # let's save our "base/template" figure to an object so we can easily adapt it while typing less code
fig_gap
fig_gap +
xlim(0, 60000)
fig_gap +
xlim(0, 60000) +
ylim(30,80)
fig_gap +
scale_x_log10()
bangladesh_gw <- read_csv("https://stahlm.github.io/ENS_215/Data/NationalSurveyData_DPHE_BGS_LabData.csv")
As_fig <- bangladesh_gw %>%
ggplot(aes(x = As_ugL, y = WELL_DEPTH_m)) +
geom_point() +
theme_bw()
As_fig
As_fig <- As_fig +
scale_y_reverse() # reverse the y-axis and update As_fig
As_fig
As_fig +
coord_flip()
As_fig <- As_fig +
labs(title = "Groundwater arsenic in Bangladesh",
subtitle = "Arsenic vs. depth",
x = "As (ug/L)",
y = "Depth (m)",
caption = "Data source: BGS")
As_fig
fig_gap +
ylim(60,NA)
View(my_gap)
my_gap %>%
arrange(country, year) %>%
group_by(country) %>%
mutate(gdp_1952 = first(gdpPercap))
#mutate(income_level = case_when("Low income" ~ gdpPercap <= 3000 & year ==)
#       )
my_gap %>%
arrange(country, year) %>%
group_by(country) %>%
mutate(gdp_1952 = first(gdpPercap)) %>%
mutate(income_level = case_when("Low income" ~ gdpPercap <= 2000,
"Med income" ~ gdpPercap > 2000 & gdpPercap <= 5000,
"High income" ~ gdpPercap > 5000
))
my_gap %>%
arrange(country, year) %>%
group_by(country) %>%
mutate(gdp_1952 = first(gdpPercap)) %>%
mutate(income_level = case_when(gdpPercap <= 2000 ~"Low income",
gdpPercap > 2000 & gdpPercap <= 5000 ~"Med income",
gdpPercap > 5000 ~ "High income"
))
my_gap %>%
arrange(country, year) %>%
group_by(country) %>%
mutate(gdp_1952 = first(gdpPercap)) %>%
mutate(income_level = case_when(gdpPercap <= 2000 ~"Low income",
gdpPercap > 2000 & gdpPercap <= 5000 ~"Med income",
gdpPercap > 5000 ~ "High income")
) %>%
ggplot(aes(x = year, y = lifeExp, group = country)) +
geom_point() +
geom_line() +
facet_wrap(~income_level)
my_gap %>%
arrange(country, year) %>%
group_by(country) %>%
mutate(gdp_1952 = first(gdpPercap)) %>%
mutate(income_level = case_when(gdpPercap <= 2000 ~"Low income",
gdpPercap > 2000 & gdpPercap <= 5000 ~"Med income",
gdpPercap > 5000 ~ "Upper income")
) %>%
ggplot(aes(x = year, y = lifeExp, group = country)) +
geom_point() +
geom_line() +
facet_wrap(~income_level)
my_gap %>%
arrange(country, year) %>%
group_by(country) %>%
mutate(gdp_1952 = first(gdpPercap)) %>%
mutate(income_level = case_when(gdpPercap <= 2000 ~"Low income",
gdpPercap > 2000 & gdpPercap <= 5000 ~"Med income",
gdpPercap > 5000 ~ "Upper income")
) %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = continent)) +
geom_point() +
geom_line() +
facet_wrap(~income_level)
library(tidyverse)
fuel_data <- mpg  # assigning mpg to a new object
fuel_data <- mutate(fuel_data, hwy2cty = hwy/cty)
us_makes <- c("chevrolet","dodge","ford","jeep","lincoln","mercury","pontiac") # list of U.S. manufacturers
fuel_data <- mutate(fuel_data, region = if_else(manufacturer %in% us_makes,"US","Foreign") )
ggplot(data = fuel_data, aes(x = region, y = hwy, fill = transmission)) + geom_bar(position = "dodge", stat = "identity")
# Load in packages
library(tidyverse)
library(plotly)
# Load the dataset mpg into variable fuel_data and examine the structure
fuel_data <- mpg
str(fuel_data)
# Display the first few rows of data
head(fuel_data)
# Display the first few rows of data
head(fuel_data)
# Load in packages
library(tidyverse)
library(plotly)
# Load the dataset mpg into variable fuel_data and examine the structure
fuel_data <- mpg
str(fuel_data)
# Display the first few rows of data
head(fuel_data)
# Display the first few rows of data
head(fuel_data)
# Get the dimensions of the dataset and assign them to variables
dim(fuel_data)
n_rows <- nrow(fuel_data)
n_cols <- ncol(fuel_data)
View(fuel_data)
