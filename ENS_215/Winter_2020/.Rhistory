max_gw = max(Water_level__ft),
month_rank = percent_rank(mean_gw, na.rm = T),
n = n()) %>%
ggplot(aes(x = Month, y = Site_ID, fill = month_rank)) +
geom_raster()
View(a)
a %>% percent_rank(mean_gw)
a %>% group_by(Site_ID) %>% summarize(gw_rank = percent_rank(mean_gw))
a %>% group_by(Site_ID, Month) %>% summarize(gw_rank = percent_rank(mean_gw))
a %>% group_by(Site_ID) %>% summarize(gw_rank = percent_rank(mean_gw))
a %>%  summarize(gw_rank = percent_rank(mean_gw))
a %>%  mutate(gw_rank = percent_rank(mean_gw))
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw))
View(a)
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw))
ggplot(aes(x = Month, y = Site_ID, fill = month_rank)) +
geom_raster()
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
ggplot(aes(x = Month, y = Site_ID, fill = month_rank)) +
geom_raster()
a
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
ggplot(aes(x = Month, y = Site_ID, fill = month_rank)) +
scale_fill_gradient(low = "red", high = "blue") +
geom_raster()
a
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
ggplot(aes(x = Month, y = Site_ID, fill = month_rank)) +
scale_fill_gradient2(low = "red", mid = "green", high = "blue", midpoint = 0.5) +
geom_raster()
a
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
ggplot(aes(x = Month, y = Site_ID, fill = month_rank)) +
scale_fill_gradient2(low = "red", mid = "green", high = "blue", midpoint = 0.5) +
geom_raster()
a
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw))
View(a)
1/12
1/11
library(ggridges)
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
filter(month_rank == 0) %>%
ggridges::geom_density_ridges2(aes(x = Month))
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
filter(month_rank == 0) %>%
ggplot() +
ggridges::geom_density_ridges2(aes(x = Month))
#ggplot(aes(x = Month, y = Site_ID, fill = month_rank)) +
#scale_fill_gradient2(low = "red", mid = "green", high = "blue", midpoint = 0.5) +
#geom_raster()
a
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
filter(month_rank == 0) %>%
ggplot() +
ggridges::geom_density_ridges2(aes(x = Month, y = Site_ID))
#ggplot(aes(x = Month, y = Site_ID, fill = month_rank)) +
#scale_fill_gradient2(low = "red", mid = "green", high = "blue", midpoint = 0.5) +
#geom_raster()
a
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
filter(month_rank == 0) %>%
ggplot() +
ggridges::geom_density_ridges2(aes(x = Month, y = Site_ID), stat = "binline")
#ggplot(aes(x = Month, y = Site_ID, fill = month_rank)) +
#scale_fill_gradient2(low = "red", mid = "green", high = "blue", midpoint = 0.5) +
#geom_raster()
a
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw))
View(a)
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
group_by(Site_ID, Month) %>%
summarise(min_count = sum(month_rank == 0))
View(a)
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
group_by(Site_ID, Month) %>%
summarise(min_count = sum(month_rank == 0)) %>%
group_by(Site_ID) %>%
summarize(min_prop = min_count/n())
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
group_by(Site_ID, Month) %>%
summarise(min_count = sum(month_rank == 0)) %>%
ungroup() %>%
group_by(Site_ID) %>%
summarize(min_prop = min_count/n())
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
group_by(Site_ID, Month) %>%
summarise(min_count = sum(month_rank == 0)) %>%
group_by(Site_ID) %>%
summarize(min_prop = n())
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
group_by(Site_ID, Month) %>%
summarise(min_count = sum(month_rank == 0)) %>%
group_by(Site_ID, Month) %>%
summarize(min_prop = n())
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
group_by(Site_ID, Month) %>%
summarise(min_count = sum(month_rank == 0)) %>%
group_by(Site_ID, Month) %>%
summarize(min_prop = n(),
min_count = min_count)
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
group_by(Site_ID, Month) %>%
summarise(min_count = sum(month_rank == 0)) %>%
group_by(Site_ID)
mutate(min_prop = min_count/sum(min_count))
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
group_by(Site_ID, Month) %>%
summarise(min_count = sum(month_rank == 0)) %>%
group_by(Site_ID) %>%
mutate(min_prop = min_count/sum(min_count))
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
group_by(Site_ID, Month) %>%
summarise(min_count = sum(month_rank == 0)) %>%
group_by(Site_ID) %>%
mutate(min_prop = min_count/sum(min_count)) %>%
ggplot(aes(x = Month, y = Site_ID, fill = min_prop)) +
scale_fill_gradient2(low = "red", mid = "green", high = "blue", midpoint = 0.5) +
geom_raster()
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
group_by(Site_ID, Month) %>%
summarise(min_count = sum(month_rank == 0)) %>%
group_by(Site_ID) %>%
mutate(min_prop = min_count/sum(min_count)) %>%
ggplot(aes(x = Month, y = Site_ID, fill = min_prop)) +
scale_fill_gradient2(low = "red", mid = "green", high = "blue", midpoint = 0.5) +
geom_raster()
a
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
group_by(Site_ID, Month) %>%
summarise(min_count = sum(month_rank == 0)) %>%
group_by(Site_ID) %>%
mutate(min_prop = min_count/sum(min_count)) %>%
ggplot(aes(x = Month, y = Site_ID, fill = min_prop)) +
scale_fill_gradient2(low = "blue", mid = "green", high = "red", midpoint = 0.5) +
geom_raster()
a
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
group_by(Site_ID, Month) %>%
summarise(min_count = sum(month_rank == 0)) %>%
group_by(Site_ID) %>%
mutate(min_prop = min_count/sum(min_count)) %>%
ggplot(aes(x = Month, y = Site_ID, fill = min_prop)) +
scale_fill_gradient2(low = "blue", mid = "green", high = "red", midpoint = 0.25) +
geom_raster()
a
a <- gw_levels %>%
group_by(Site_ID, Year) %>%
filter(length(unique(Month)) > 11) %>%
group_by(Site_ID, Year, Month) %>%
summarize(mean_gw = mean(Water_level__ft),
min_gw = min(Water_level__ft),
max_gw = max(Water_level__ft),
n = n()) %>%
mutate(month_rank = percent_rank(mean_gw)) %>%
group_by(Site_ID, Month) %>%
summarise(min_count = sum(month_rank == 0)) %>%
group_by(Site_ID) %>%
mutate(min_prop = min_count/sum(min_count)) %>%
ggplot(aes(x = Month, y = Site_ID, fill = min_prop)) +
scale_fill_gradient() +
geom_raster()
a
sun
Deaths.Dat
library(forecast)
install.packages("forecast")
library(forecast)
gold
ldeaths
b<-ldeaths
flow <- read_csv("https://stahlm.github.io/ENS_215/Data/USGS_flow_01351500.csv") %>%
drop_na() %>%
filter(Year >= 1940 & Year <= 2016) %>%  # select years 1940 through 2016
mutate(Date = make_date(Year, Month, Day)) # create a Date column that has the dates as an R date object
flow_monthly <- flow %>%
group_by(Year, Month) %>%
summarize(flow_cfs = mean(flow_cfs))
924/12
unique(flow_monthly$Year)
2016-1940
ts(flow_monthly$flow_cfs, start = 1940, freq = 12)
flow_ts <- ts(flow_monthly$flow_cfs, start = 1940, freq = 12)
spectrum(flow_ts)
flow_ts <- ts(flow$flow_cfs, start = 1940, freq = 365)
spectrum(flow_ts)
flow_monthly <- flow %>%
group_by(Year, Month) %>%
summarize(flow_cfs = max(flow_cfs))
flow_ts <- ts(flow_monthly$flow_cfs, start = 1940, freq = 12)
spectrum(flow_ts)
library(leaflet)
library(tidyverse)
library(tmap)
library(spData)
library(sf)
library(tigris)
library(tidyverse)
library(tmap)
library(sf)
library(tigris)
State_counties <- counties(state = "NY", cb = TRUE) # cb = TRUE specifies to download a lower resolution file (faster download)
State_counties <- st_as_sf(State_counties) # convert to an sf object
State_counties <- st_as_sf(State_counties) # convert to an sf object
State_landmarks <- tigris::landmarks(state = "NY",type = "area")
State_landmarks <- st_as_sf(State_landmarks) # convert to an sf object
tm_shape(State_counties) +
tm_polygons(col = "lightgrey")
tm_shape(State_counties) +
tm_polygons(col = "lightgrey", border.col = "black")
tm_shape(State_counties) +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_shape(State_landmarks) +
tm_polygons(col = "blue")
View(State_landmarks)
tm_shape(State_counties) +
tm_polygons(col = "lightgrey", border.col = "black")
tigris::call_geolocator(street = "Baker Ave", city = "Schenectady", state = "NY")
tigris::call_geolocator(street = "Baker", city = "Schenectady", state = "NY")
tigris::call_geolocator(street = "Baker ave", city = "Schenectady", state = "NY")
tigris::call_geolocator(street = "Baker ave", city = "Niskayuna", state = "NY")
tigris::call_geolocator(street = "Baker Avenue", city = "Niskayuna", state = "NY")
tigris::call_geolocator(street = "State", city = "Schenectady", state = "NY")
tigris::call_geolocator(street = "1447 Baker", city = "Schenectady", state = "NY")
State_roads <- tigris::primary_roads()
State_roads <- State_roads %>%
st_as_sf()
NY_roads <- st_intersection(State_roads, State_counties)
tm_shape(State_counties) +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_shape(NY_roads) +
tm_lines()
tm_shape(State_counties) +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_shape(NY_roads) +
tm_lines(col = "white")
tm_shape(State_counties) +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_shape(NY_roads) +
tm_lines(col = "white",lwd = 1.5)
tm_shape(State_counties) +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_shape(NY_roads) +
tm_lines(col = "white",lwd = 2.5)
tm_shape(State_counties, projection = projection="+proj=robin") +
tm_shape(State_counties, projection = "+proj=robin") +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_shape(NY_roads) +
tm_lines(col = "white",lwd = 2.5)
tm_shape(State_counties, projection = 4326) +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_shape(NY_roads) +
tm_lines(col = "white",lwd = 2.5)
proj4string(x) <-CRS("+proj=utm +zone=10 +datum=WGS84")
proj4string(x) <- crs("+proj=utm +zone=10 +datum=WGS84")
tm_shape(State_counties, projection = "+proj=utm +zone=10 +datum=WGS84") +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_shape(NY_roads) +
tm_lines(col = "white",lwd = 2.5)
tm_shape(State_counties, projection = "+proj=utm +zone=18 +datum=WGS84") +
tm_polygons(col = "lightgrey", border.col = "black") +
tm_shape(NY_roads) +
tm_lines(col = "white",lwd = 2.5)
tm_shape(State_counties, projection = "+proj=utm +zone=18 +datum=WGS84") +
tm_polygons(col = "lightgreen", border.col = "black") +
tm_shape(NY_roads) +
tm_lines(col = "white",lwd = 2.5)
rnaturalearth::check_data_exist(scale = 50, type = "countries", category = raster)
rnaturalearth::check_data_exist(scale = 50, type = "countries", category = "raster")
lakes110 <- rnaturalearth::ne_download(scale = 50, type = 'MSR_50M', category = 'raster')
tm_shape(lakes110) +
tm_raster() +
tm_shape(State_counties, projection = "+proj=utm +zone=18 +datum=WGS84") +
tm_polygons(col = "lightgreen", border.col = "black") +
tm_shape(NY_roads) +
tm_lines(col = "white",lwd = 2.5)
elev_raster <- raster::crop(lakes110,State_counties)
tm_shape(elev_raster) +
tm_raster() +
tm_shape(State_counties, projection = "+proj=utm +zone=18 +datum=WGS84") +
tm_polygons(col = "lightgreen", border.col = "black") +
tm_shape(NY_roads) +
tm_lines(col = "white",lwd = 2.5)
tm_shape(elev_raster) +
tm_raster() +
tm_shape(State_counties, projection = "+proj=utm +zone=18 +datum=WGS84") +
tm_borders() +
tm_shape(NY_roads) +
tm_lines(col = "white",lwd = 2.5)
tm_shape(elev_raster) +
tm_raster(palette = "terrain") +
tm_shape(State_counties, projection = "+proj=utm +zone=18 +datum=WGS84") +
tm_borders() +
tm_shape(NY_roads) +
tm_lines(col = "white",lwd = 2.5)
elev_raster <- raster::mask(elev_raster, State_counties)
tm_shape(elev_raster) +
tm_raster(palette = terrain.colors()) +
tm_shape(State_counties, projection = "+proj=utm +zone=18 +datum=WGS84") +
tm_borders() +
tm_shape(NY_roads) +
tm_lines(col = "white",lwd = 2.5)
tm_shape(elev_raster) +
tm_raster(palette = terrain.colors(5)) +
tm_shape(State_counties, projection = "+proj=utm +zone=18 +datum=WGS84") +
tm_borders() +
tm_shape(NY_roads) +
tm_lines(col = "white",lwd = 2.5)
tm_shape(elev_raster, projection = "+proj=utm +zone=18 +datum=WGS84") +
tm_raster(palette = terrain.colors(5)) +
tm_shape(State_counties) +
tm_borders() +
tm_shape(NY_roads) +
tm_lines(col = "white",lwd = 2.5)
st_area(State_counties)
st_area(State_counties[State_counties$NAME == "Schenectady",])
542420142/10^6
world
a <- world
View(a)
