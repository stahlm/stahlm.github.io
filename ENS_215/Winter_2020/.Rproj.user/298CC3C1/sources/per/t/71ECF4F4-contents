---
title: "Using Maps and Spatial Data in Water Resources and Hydrology"
author: "[Mason Stahl](https://sites.google.com/union.edu/masonstahl/home)"
date: "1-July-2020"
output:
  html_document:
    df_print: paged
    theme: spacelab
    toc: no
    toc_float: no
    code_folding: hide
---

<br/> 


The links below direct you to data and mapping/spatial analysis resources for hydrology and water resources.  Many of these resources are also broadly applicable to anyone doing spatial analysis in the sciences/engineering, social sciences, and humanities.  

I strongly recommend those of you who are interested in map making (and spatial analysis more broadly) to consult the excellent and freely available textbook [Geocomputation with R](https://geocompr.robinlovelace.net/). 

If you are interested in learning the R programming language (which is a great for spatial analysis) I recommend the excellent and freely available textbook [_ModernDive_](https://moderndive.com/).  You might also be interested in consulting the course notes for my class [_Exploring Environmental Data (ENS-215)_](https://stahlm.github.io/ENS_215/Winter_2020/Home.html) which provides an introduction to programming in R through the context of environmental data.  

<br/>

### Data resources 
+ [USGS National Water Information Service](https://nwis.waterdata.usgs.gov/nwis): Web interface that provides access to USGS water data (e.g. flows, water levels, chemical and biological conditions) for nearly 2 million sites across the US and US territories.  You can also directly query and download data right in R using [USGS R packages](https://owi.usgs.gov/R/training-curriculum/usgs-packages/).  
+ [NOAA Climate Data](https://www.ncdc.noaa.gov/climate-information): Climate datasets for the US and the world.
+ [Natural Earth Data](https://www.naturalearthdata.com/): Site with freely available geospatial dataset (e.g. country borders, river shapefiles, land surface elevation data).
+ [UN FAO Aquastat Data](http://www.fao.org/nr/water/aquastat/main/index.stm): UN data on water resources.
+ [NASA Earth Observations](https://neo.sci.gsfc.nasa.gov/): NASA website with information and links to the data from NASA earth observation satellites and other global earth science datasets.  
+ [Compendium of hydrology resources in R](https://github.com/ropensci/hydrology)  
+ [tigris](https://github.com/walkerke/tigris): A package in R to acquire geographic data (e.g. rivers, lakes, roads, county borders,...) directly from the US Census Bureau.  
+ [tidycensus](https://walkerke.github.io/tidycensus/index.html):  A package in R to acquire census data (e.g. demographics, income,...) directly fron the US Census Bureau.  
+ [dataRetrevial](https://github.com/USGS-R/dataRetrieval): A package in R to acquire data directly from the USGS Nation Water Information System (e.g. water quality, streamflow, groundwater levels)
+ [stationaRy](https://github.com/rich-iannone/stationaRy): A package in R to acquire hourly meteorological data from one of thousands of global stations (data is from NOAA). 
+ [gapminder](https://cran.r-project.org/web/packages/gapminder/README.html): A package in R to get data from the gapminder dataset on global development.  
+ [rnaturalearth](https://cran.r-project.org/web/packages/rnaturalearth/README.html): A package in R to acquire geospatial data (e.g. country borders, topographic data,...) from Natural Earth repository.


### Spatial analysis packages in R
+ [tmap](https://github.com/mtennekes/tmap): Functions to create high quality maps (both static and dynamic)
+ [leaflet](https://rstudio.github.io/leaflet/): Functions to create interactive maps.
+ [raster](https://rspatial.org/raster/pkg/index.html): Functions for reading, writing, and analyzing raster data.
+ [sf](https://r-spatial.github.io/sf/index.html): Provides functionality for handling simple features data in R.



<br/>
<br/>


## A few quick examples of maps/spatial analysis in R
```{r warning=FALSE, message=FALSE}
# Load in packages 
library(tidyverse)
library(maps)

library(tigris)
library(sf)
library(tmap)

library(leaflet)
```


### Basic map of the US
Below is the code to generate a basic map of the US.  There is a great deal of flexibility with what you can do and with a few tweaks/additional lines of code you can configure/modify the map (e.g., colors, borders, projections, add data to the map,...).  We are using the `ggplot` package to create these maps.  The `ggplot` package is a versatile package for data visualization and is widely used for creating all types of graphics (e.g., line plots, bar plots, scatter plots,...) in addition to maps.

```{r}
map_data_usa <- map_data("state") # load in US states map data from the maps package
```

```{r}
map_data_usa %>% 
  ggplot() + 
  geom_polygon(aes(long, lat, group = group), color = "black", fill = "gray") +
  coord_map(projection = "bonne", lat0 = 50) +
  theme_bw() +
  labs(title = "Map of the US")
  
```

<br/>


### Basic world map showing recent earthquakes

```{r message= FALSE}
map_world_data <- map_data("world") # get world borders

earthquakes <- read_csv("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Data/4.5_month_earthquakes_USGS_2020.csv") # get dataset of recent earthquakes
```

```{r}
earthquake_map <- map_world_data %>% 
  ggplot() +
  geom_polygon(aes(long, lat, group = group), fill = "lightgray", color = "black") +
  geom_point(data = earthquakes, aes(longitude, latitude, size = mag, color = mag),
             shape = 21, fill = "NA", stroke = 1.5) + 
  scale_color_gradient(low = "blue", high = "red") +
  labs(title = "Earthquakes > 4.5 magnitude in the past 30 days",
       subtitle = "Date window: 28-Jan to 27-Feb-2020",
       caption = "Earthquake data source: USGS") +
  theme_void() +
  coord_quickmap()

earthquake_map
```


<br/>


### Obtaining spatial data directly in R
The example below shows how you can directly obtain spatial data from the US Census Bureau and use it to create maps in R.  We'll directly query the Census online database and get data on surface water features that we will use to create a map of surface water features in Schenectady.  

```{r message=FALSE, results='hide'}
# Get county borders for NY
NY_counties <- counties(state = "NY", cb = TRUE) # cb = TRUE specifies to download a lower resolution file (faster download)

NY_counties <- st_as_sf(NY_counties) # convert to an sf object
```


```{r message=FALSE, results='hide'}
# Get surface water features for Schenectady county
Water_Schenectady <- area_water(state = "NY", county = "Schenectady")  # download the data

Water_Schenectady <- st_as_sf(Water_Schenectady) # convert to an sf object

Linear_water_Schenectady <- linear_water(state = "NY", county = "Schenectady")  # download the data

Linear_water_Schenectady <- st_as_sf(Linear_water_Schenectady) # convert to an sf object
```


```{r message=FALSE, warning=FALSE}
Schenectady_map <- NY_counties %>% 
  filter(NAME == "Schenectady") %>% 
  tm_shape() +
  tm_polygons(col = "lightgrey", border.col = "black") +
  
  tm_shape(Water_Schenectady) +
  tm_polygons(col = "blue", border.alpha = 0) +
  
  tm_shape(Linear_water_Schenectady) +
  tm_lines(col = "blue") +
  
  tm_compass(position = c("right", "top")) +  # add a compass
  tm_layout(title = "Schenectady hydrography",
            frame = F) +
  
  tm_scale_bar(breaks = c(0, 5, 10), size = 1, position = c("RIGHT", "BOTTOM"))     # add a scale bar

Schenectady_map
```


<br/>

### Interactive maps in R
We will use the `leaflet` package to demonstrate how to create a quick interactive map in R.  
```{r message=FALSE}
state_cap_locs <- read_csv("https://stahlm.github.io/ENS_215/Data/us_capitals_locs.csv", skip = 2)

state_cap_locs <- state_cap_locs %>% 
  filter(state_cd %in% state.abb)  # remove locations that aren't US state list (e.g. Puerto Rico, Guam, ...)
  
```


```{r message = FALSE}
map_cap <- leaflet(data = state_cap_locs) %>% 
  addProviderTiles(providers$Esri.NatGeoWorldMap) %>% 
  addMarkers(lng = ~long_deg, lat = ~lat_deg, label = ~state_cd)

map_cap
```

<br/>

