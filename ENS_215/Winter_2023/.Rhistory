library(tidyverse)
library(stationaRy)
library(sf)
library(tmap)
library(spData)
library(AOI)
library(climateR)
library(raster)
library(rasterVis)
library(patchwork)
# Get the data
#loc2use <- 'Death Valley National Park'
loc2use <- 'Union College'
AOI = AOI::geocode(loc2use,
pt = TRUE)
ts  = getGridMET(AOI, param = c("tmax","tmin", "prcp"),
startDate = "2021-01-01",
endDate = "2021-12-30")
# Get the data
#loc2use <- 'Death Valley National Park'
loc2use <- 'Union College'
AOI = AOI::geocode(loc2use,
pt = TRUE)
ts  = getGridMET(AOI, param = c("tmax","tmin", "prcp"),
startDate = "2022-01-01",
endDate = "2022-12-30")
# Get the data
#loc2use <- 'Death Valley National Park'
loc2use <- 'Union College'
AOI = AOI::geocode(loc2use,
pt = TRUE)
ts  = getGridMET(AOI, param = c("tmax","tmin", "prcp"),
startDate = "2022-01-01",
endDate = "2022-12-01")
# convert units
ts <- ts %>%
mutate(tmax = ((tmax - 273.15)*(9/5) +32),
tmin = ((tmin - 273.15)*(9/5) +32),
prcp = prcp/25.4
)
# Summary table
ts %>%
summarize(pcrp_max = max(prcp),
temp_max = max(tmax),
temp_min = min(tmin),
temp_mean = mean((tmin+tmax)/2),
temp_max_change = max(tmax - tmin)
)
# Make the figures
fig_01 <- ts %>%
ggplot() +
geom_line(aes(x = date, y = tmax), color = "red") +
geom_line(aes(x = date, y = tmin), color = "blue") +
labs(x = "",
y = "Temperature (F)"
) +
geom_hline(yintercept = 32, linetype = "dashed") +
theme_bw()
fig_02 <- ts %>%
ggplot() +
geom_col(aes(x = date, y = prcp), color = "black") +
labs(y = "Precipitation (inches)") +
theme_bw()
# Make the figures
(fig_01 / fig_02) +
plot_annotation(title = paste(loc2use,": Temperature and precipitation", sep = ""),
caption = "Data source: GridMET",
tag_levels = "a"
)
henri = getGridMET(aoi_get(state = c("NY", "NJ","CT","MA")),
param = "prcp",
startDate = "2021-08-16", endDate = "2021-08-24")
henri = getGridMET(aoi_get(state = c("NY", "NJ","CT","MA")),
param = "prcp",
startDate = "2021-08-16", endDate = "2021-08-24")
henri = getGridMET(aoi_get(state = c("NY", "NJ","CT","MA")),
param = "prcp",
startDate = "2021-08-16", endDate = "2021-08-24")
aoi_get(state = c("NY", "NJ","CT","MA")
henri = getGridMET(aoi_get(state = c("NY","NJ","CT","MA")),
henri = getGridMET(aoi_get(state = c("NY","NJ","CT","MA")),
param = "prcp",
startDate = "2021-08-16", endDate = "2021-08-24")
henri = getGridMET(aoi_get(state = c("NY")),
param = "prcp",
startDate = "2021-08-16", endDate = "2021-08-24")
r = raster::stack(henri)
r_inches <- r/25.4
tmap_mode("plot")
fig_map <- r_inches %>%
tm_shape() +
tm_raster(style = "cont") +
tm_shape(spData::us_states) +
tm_borders()
fig_map
param_meta$gridmet
param_meta$prism
henri = getGridMET(aoi_get(state = c("NY", "NJ")),
param = "prcp",
startDate = "2021-08-16", endDate = "2021-08-24")
tmap_mode("view")
fig_map
fig_map
temperature_US = getGridMET(aoi_get(state = "conus"),
param = "tmax",
startDate = "2022-12-23", endDate = "2021-12-23")
temperature_US = getGridMET(aoi_get(state = "conus"),
param = "tmax",
startDate = "2022-12-23", endDate = "2022-12-23")
temperature_US = getGridMET(aoi_get(state = "NY"),
param = "tmax",
startDate = "2022-12-23", endDate = "2022-12-23")
#> Spherical geometry (s2) switched off
#> Spherical geometry (s2) switched on
temperature_US = getGridMET(aoi_get(state = "conus"),
param = "tmax",
startDate = "2022-12-23", endDate = "2022-12-23")
sf::sf_use_s2(FALSE)
temperature_US = getGridMET(aoi_get(state = "conus"),
param = "tmax",
startDate = "2022-12-23", endDate = "2022-12-23")
#> Spherical geometry (s2) switched off
#> Spherical geometry (s2) switched on
temperature_US <- raster::stack(temperature_US)
temperature_US <- temperature_US - 273.15
temperature_US <- (temperature_US*9/5) + 32
temperature_US %>%
tm_shape() +
tm_raster(style = "cont", palette = "-RdBu", midpoint = 32) +
tm_shape(spData::us_states) +
tm_borders()
tmap_mode("plot")
temperature_US %>%
tm_shape() +
tm_raster(style = "cont", palette = "-RdBu", midpoint = 32) +
tm_shape(spData::us_states) +
tm_borders()
sf::sf_use_s2(FALSE)
temperature_US = getGridMET(aoi_get(state = "conus"),
param = "tmin",
startDate = "2022-12-24", endDate = "2022-12-24")
#> Spherical geometry (s2) switched off
#> Spherical geometry (s2) switched on
temperature_US <- raster::stack(temperature_US)
temperature_US <- temperature_US - 273.15
temperature_US <- (temperature_US*9/5) + 32
tmap_mode("plot")
temperature_US %>%
tm_shape() +
tm_raster(style = "cont", palette = "-RdBu", midpoint = 32) +
tm_shape(spData::us_states) +
tm_borders()
library(tidyverse)
library(osmdata)
library(tigris)
library(sf)
library(tmap)
library(osmplotr)
library(tmaptools)
library(OpenStreetMap)
library(ggpomological)
library(metR)
library(ceramic)
Sys.setenv(MAPBOX_API_KEY = "pk.eyJ1Ijoic3RhaGxtIiwiYSI6ImNrZnJiMDMxbDA0aGsyenFlajhvMzZ4bXUifQ.I7l7fJBAHCQWRwyYozq4ZQ")
loc2use <- "New York"
springs_data <- opq(bb_values) %>%
add_osm_feature(key = 'natural', value = 'spring') %>%
osmdata_sf()
loc2use <- "New York"
bb_values <- getbb(loc2use)
bb_values
loc2use <- "Massachusetts"
bb_values <- getbb(loc2use)
bb_values
loc2use <- "New York State"
bb_values <- getbb(loc2use)
bb_values
springs_data <- opq(bb_values) %>%
add_osm_feature(key = 'natural', value = 'spring') %>%
osmdata_sf()
springs_data$osm_points
springs_data$osm_lines
springs_data$osm_polygons
tm_shape(springs_data$osm_points) +
tm_dots()
NY_border <- spData::us_states
View(NY_border)
NY_border <- spData::us_states %>%
filter(NAME = "New York")
NY_border <- spData::us_states %>%
filter(NAME == "New York")
tm_shape(springs_data$osm_points) +
tm_dots() +
tm_shape(NY_border) +
tm_borders()
loc2use <- "New Mexico"
bb_values <- getbb(loc2use)
bb_values
springs_data <- opq(bb_values) %>%
add_osm_feature(key = 'natural', value = 'spring') %>%
osmdata_sf()
NY_border <- spData::us_states %>%
filter(NAME == "New Mexico")
tm_shape(springs_data$osm_points) +
tm_dots() +
tm_shape(NY_border) +
tm_borders()
tm_shape(springs_data$osm_points) +
tm_dots(color = "blue") +
tm_shape(NY_border) +
tm_borders()
tm_shape(springs_data$osm_points) +
tm_dots(col = "blue") +
tm_shape(NY_border) +
tm_borders()
tm_shape(springs_data$osm_points) +
tm_dots(col = "blue") +
tm_shape(NY_border) +
tm_borders(fill = "light grey")
tm_shape(springs_data$osm_points) +
tm_dots(col = "blue") +
tm_shape(NY_border) +
tm_borders(fill = "lightgrey")
tm_shape(springs_data$osm_points) +
tm_dots(col = "blue") +
tm_shape(NY_border) +
tm_polygons(col = "lightgrey")
tm_shape(NY_border) +
tm_polygons(col = "lightgrey") +
tm_shape(springs_data$osm_points) +
tm_dots(col = "blue")
tmap_mode("view")
map_springs <- tm_shape(NY_border) +
tm_polygons(col = "lightgrey") +
tm_shape(springs_data$osm_points) +
tm_dots(col = "blue")
map_springs
tmap_mode("view")
map_springs <- tm_shape(NY_border) +
tm_polygons(col = "lightgrey") +
tm_borders(col = "black") +
tm_shape(springs_data$osm_points) +
tm_dots(col = "blue")
map_springs
tmap_mode("view")
map_springs <- tm_shape(NY_border) +
tm_polygons(col = "lightgrey") +
tm_shape(NY_border) +
tm_borders(col = "black") +
tm_shape(springs_data$osm_points) +
tm_dots(col = "blue")
map_springs
tmap_mode("view")
map_springs <- tm_shape(NY_border) +
tm_polygons(col = "lightgrey") +
tm_shape(NY_border) +
tm_borders(col = "black") +
tm_shape(springs_data$osm_points) +
tm_dots(col = "blue")
map_springs
tmap_mode("view")
map_springs <-
tm_shape(NY_border) +
tm_borders(col = "black") +
tm_shape(springs_data$osm_points) +
tm_dots(col = "blue")
map_springs
df_stream_data <- readNWISdv(siteNumbers = 09380000,
parameterCd = c("00060","00065"),
statCd = "00003")
library(dataRetrieval)
df_stream_data <- readNWISdv(siteNumbers = "09380000",
parameterCd = c("00060","00065"),
statCd = "00003")
View(df_stream_data)
df_stream_data %>%
ggplot(aes(x = Date, y = X_00060_00003)) +
geom_line()
df_stream_data %>%
ggplot(aes(x = Date, y = X_00060_00003)) +
geom_line() +
theme_classic()
df_stream_data <- readNWISdv(siteNumbers = "09380000",
parameterCd = c("00060"),
statCd = "00003") %>%
renameNWISColumns()
df_stream_data %>%
ggplot(aes(x = Date, y = Flow)) +
geom_line() +
theme_classic()
df_stream_data %>%
group_by(year(Date)) %>%
summarize(mean_flow = mean(Flow, na.rm= T))
library(dataRetrieval)
library(lubridate)
df_stream_data %>%
group_by(year(Date)) %>%
summarize(mean_flow = mean(Flow, na.rm= T))
df_stream_data %>%
group_by(year(Date)) %>%
summarize(mean_flow = mean(Flow, na.rm= T), n_meas = n())
df_stream_data %>%
group_by(year(Date)) %>%
summarize(mean_flow = mean(Flow, na.rm= T), n_meas = n()) %>%
filter(n_meas > 350)
table_flows <- df_stream_data %>%
group_by(year(Date)) %>%
summarize(mean_flow = mean(Flow, na.rm= T), n_meas = n()) %>%
filter(n_meas > 350)
table_flow
table_flows <- df_stream_data %>%
group_by(year(Date)) %>%
summarize(mean_flow = mean(Flow, na.rm= T), n_meas = n()) %>%
filter(n_meas > 350)
table_flows
table_flows <- df_stream_data %>%
mutate(Year = year(Date)) %>%
group_by(yYear) %>%
summarize(mean_flow = mean(Flow, na.rm= T), n_meas = n()) %>%
filter(n_meas > 350)
table_flows <- df_stream_data %>%
mutate(Year = year(Date)) %>%
group_by(Year) %>%
summarize(mean_flow = mean(Flow, na.rm= T), n_meas = n()) %>%
filter(n_meas > 350)
table_flows
table_flows %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_line()
table_flows %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_bar()
table_flows %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_col()
table_flows %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_line()
table_flows %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_line() +
ttheme_classic()
table_flows %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_line() +
theme_classic()
table_flows %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_line(size = 2) +
theme_classic()
table_flows %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_line(size = 1.5) +
theme_classic()
table_flows %>%
ggplot(aes(x = Year, y = mean_flow)) +
geom_line(size = 1) +
theme_classic()
table_flows <- df_stream_data %>%
mutate(Year = year(Date)) %>%
group_by(Year) %>%
summarize(mean_flow = mean(Flow, na.rm= T), min_flow = min(Flow, na.rm = T), n_meas = n()) %>%
filter(n_meas > 350)
table_flows
table_flows %>%
ggplot(aes(x = Year, y = min_flow)) +
geom_line(size = 1) +
theme_classic()
table_flows <- df_stream_data %>%
mutate(Year = year(Date)) %>%
group_by(Year) %>%
summarize(mean_flow = mean(Flow, na.rm= T),
min_flow = min(Flow, na.rm = T),
max_flow = max(Flow, na.rm = T),
n_meas = n()) %>%
filter(n_meas > 350)
table_flows
table_flows %>%
ggplot(aes(x = Year, y = max_flow)) +
geom_line(size = 1) +
theme_classic()
table_flows %>%
ggplot(aes(x = Year)) +
geom_line(aes(y = max_flow), size = 1) +
theme_classic()
table_flows %>%
ggplot(aes(x = Year)) +
geom_line(aes(y = max_flow), size = 1, color = "blue") +
theme_classic()
table_flows %>%
ggplot(aes(x = Year)) +
geom_line(aes(y = max_flow), size = 1, color = "blue") +
geom_line(aes(y = min_flow), size = 1, color = "red") +
theme_classic()
table_flows %>%
ggplot(aes(x = Year)) +
geom_line(aes(y = max_flow), size = 1, color = "blue") +
geom_line(aes(y = min_flow), size = 1, color = "red") +
geom_line(aes(y = mean_flow), size = 1, color = "black") +
theme_classic()
table_flows %>%
ggplot(aes(x = Year)) +
geom_line(aes(y = max_flow), size = 1, color = "blue") +
geom_line(aes(y = min_flow), size = 1, color = "red") +
geom_line(aes(y = mean_flow), size = 1, color = "black") +
theme_classic() +
scale_y_log10()
table_flows %>%
ggplot(aes(x = Year)) +
geom_line(aes(y = max_flow), size = 1, color = "blue") +
#geom_line(aes(y = min_flow), size = 1, color = "red") +
#geom_line(aes(y = mean_flow), size = 1, color = "black") +
theme_classic()
fig_max <- table_flows %>%
ggplot(aes(x = Year)) +
geom_line(aes(y = max_flow), size = 1, color = "blue") +
#geom_line(aes(y = min_flow), size = 1, color = "red") +
#geom_line(aes(y = mean_flow), size = 1, color = "black") +
theme_classic()
fig_min <- table_flows %>%
ggplot(aes(x = Year)) +
geom_line(aes(y = min_flow), size = 1, color = "red") +
#geom_line(aes(y = mean_flow), size = 1, color = "black") +
theme_classic()
fig_mean <- table_flows %>%
ggplot(aes(x = Year)) +
geom_line(aes(y = mean_flow), size = 1, color = "black") +
theme_classic()
fig_max <- table_flows %>%
ggplot(aes(x = Year)) +
geom_line(aes(y = max_flow), size = 1, color = "blue") +
#geom_line(aes(y = min_flow), size = 1, color = "red") +
#geom_line(aes(y = mean_flow), size = 1, color = "black") +
theme_classic()
fig_min <- table_flows %>%
ggplot(aes(x = Year)) +
geom_line(aes(y = min_flow), size = 1, color = "red") +
#geom_line(aes(y = mean_flow), size = 1, color = "black") +
theme_classic()
fig_mean <- table_flows %>%
ggplot(aes(x = Year)) +
geom_line(aes(y = mean_flow), size = 1, color = "black") +
theme_classic()
fig_max/fig_min
fig_max/fig_min/fig_mean
fig_max/fig_min/fig_mean
fig_max/fig_min/fig_mean
fig_max/fig_min/fig_mean
fig_mean/fig_max/fig_min
install.packages("tidycensus")
