p$prism_tmax %>%
tm_shape() +
tm_raster()
p$prism_tmax %>%
tm_shape() +
tm_raster() +
tm_shape(county_schenectady) +
tm_borders()
borders_state <- states()
View(borders_state)
borders_state$NAME
borders_NY <- borders_state %>%
filter(NAME == "New York")
p = getPRISM(borders_NY,
param = c('tmax','tmin'), startDate = "2023-02-04")
p$prism_tmax %>%
tm_shape() +
tm_raster() +
tm_shape(borders_NY) +
tm_borders()
border_NY <- USAboundaries::us_states(states = "NY")
p = getPRISM(borders_NY,
param = c('tmax','tmin'), startDate = "2023-02-04")
p$prism_tmax %>%
tm_shape() +
tm_raster() +
tm_shape(borders_NY) +
tm_borders()
border_NY <- USAboundaries::us_states(states = "NY")
border_NY <- USAboundaries::us_states(states = "NY", resolution = "high")
p$prism_tmax %>%
tm_shape() +
tm_raster() +
tm_shape(borders_NY) +
tm_borders()
install.packages("USAboundaries")
border_NY <- USAboundaries::us_states(states = "NY", resolution = "high")
tm_shape(borders_NY) +
tm_borders()
library(tidyverse)
library(tmap)
library(sf)
tm_shape(borders_NY) +
tm_borders()
tm_shape(border_NY) +
tm_borders()
p = getPRISM(border_NY,
param = c('tmax','tmin'), startDate = "2023-02-04")
library(climateR)
sf::sf_use_s2(FALSE)
p = getPRISM(border_NY,
param = c('tmax','tmin'), startDate = "2023-02-04")
p$prism_tmax %>%
tm_shape() +
tm_raster() +
tm_shape(border_NY) +
tm_borders()
borders_hires <- rnaturalearth::ne_countries(country = "Lesotho",
scale = "large",
returnclass = "sf")
climate_raster <- getTerraClimNormals(AOI = borders_hires,
param = "prcp",
period = "19812010", month = 1:12)
climate_raster %>%
tm_shape() +
tm_border() +
tm_shape(borders_hires) +
tm_borders()
climate_raster %>%
tm_shape() +
tm_raster() +
tm_shape(borders_hires) +
tm_borders()
climate_raster$terraclim_19812010_prcp %>%
tm_shape() +
tm_raster() +
tm_shape(borders_hires) +
tm_borders()
climate_raster$terraclim_19812010_prcp %>%
tm_shape() +
tm_raster() +
tm_shape(borders_hires) +
tm_borders()
a <- sum(climate_raster$terraclim_19812010_prcp)
a$layer %>%
tm_shape() +
tm_raster() +
tm_shape(borders_hires) +
tm_borders()
loc_path <- basemap_geotif(borders_hires, map_service = "esri", map_type = "world_imagery", map_res = 0.7)
library(basemaps)
loc_path <- basemap_geotif(borders_hires, map_service = "esri", map_type = "world_imagery", map_res = 0.7)
loc_path
loc_basemap <- raster::stack(loc_path)
loc_basemap
#raster::plotRGB(loc_basemap)
map_full <- tm_shape(loc_basemap) +
tm_rgb() +
tm_shape(borders_hires) +
tm_borders(col = "red")
map_full
loc_path <- basemap_geotif(borders_hires,
map_service = "esri",
map_type = "world_imagery",
map_res = 1.0)
loc_path
loc_basemap <- raster::stack(loc_path)
loc_basemap
#raster::plotRGB(loc_basemap)
map_full <- tm_shape(loc_basemap) +
tm_rgb() +
tm_shape(borders_hires) +
tm_borders(col = "red")
map_full
NY_counties <- counties(state = "NY",
cb = TRUE)
library(elevatr)
library(tigris)
NY_counties <- counties(state = "NY",
cb = TRUE)
county_schenectady <- NY_counties %>%
filter(NAME == "Schenectady")
loc_path <- basemap_geotif(county_schenectady,
map_service = "osm",
map_type = "streets",
map_res = 1.0)
loc_path
loc_basemap <- raster::stack(loc_path)
loc_basemap
map_full <- tm_shape(loc_basemap) +
tm_rgb() +
tm_shape(county_schenectady) +
tm_borders(col = "red")
map_full
library(tidyverse)
library(patchwork)
library(lubridate)
map_data_usa <- map_data("state") # load in US states map data from the maps package and convert it to a compatible format for plotting in with ggplot()
head(map_data_usa) # take a look at the first few rows of map_data_usa
states_sf <- USAboundaries::us_states()
View(states_sf)
View(map_data_usa)
View(map_data_usa)
View(states_sf)
rnaturalearth::check_data_exist()
rnaturalearth::check_data_exist(scale = 110, type, category = c("cultural", "physical",
"raster"))
rnaturalearth::check_data_exist(scale = 110, type, category = c("cultural", "physical",
"raster"))
check_data_exist( scale = 110, category = 'physical', type = 'airports' )
rnaturalearth::check_data_exist( scale = 110, category = 'physical', type = 'airports' )
rnaturalearth::check_data_exist( scale = 110, category = 'cultural', type = 'airports' )
a <- spData::trMat
a <- maps::map.cities()
a <- data(world.cities)
library(maps)
a <- data(world.cities)
force(world.cities)
View(world.cities)
a <- world.cities
View(a)
library(tidyverse)
library(tmap)
library(sf)
library(raster)
library(AOI)
library(elevatr)
loc2use <- aoi_get(x = list("Schenectady, NY",5,5) )
#elevation <- get_elev_raster(loc2use, z = 14, clip = "bbox")
#writeRaster(elevation, "./elevation_schdy.tiff")
elevation <- raster::raster("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Winter_2022/Lectures/Data/elevation_schdy.tif")
elevation %>%
tm_shape() +
tm_raster(style = "cont", palette = terrain.colors(10)) +
tm_layout(legend.outside = T,
main.title = "Schenectady elevation map")
raster_world_elev <- raster("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Winter_2022/Lectures/Data/World_elev.TIFF")
# Data was obtained from: https://neo.sci.gsfc.nasa.gov/view.php?datasetId=SRTM_RAMP2_TOPO
raster_world_elev
raster::plot(raster_world_elev)
cellStats(raster_world_elev,
stat = max)
raster_world_elev[raster_world_elev == 99999] <- NA
raster::plot(raster_world_elev)
raster_world_elev__ft <- raster_world_elev * 3.28084
coeff_p0 <- 1 # Sea level standard atmospheric pressure (Atmospheres)
coeff_T0 <- 288.16 # Sea level standard temperature(K)
coeff_g <- 9.80665 # 	Earth-surface gravitational acceleration (m/s^2)
coeff_M <- 0.02896968 # Molar mass of dry air (kg/mol)
coeff_R0 <- 8.314462618 #	Universal gas constant (J/(mol*K))
raster_atmos_pressure <- coeff_p0 * exp( -(coeff_g * raster_world_elev * coeff_M)/(coeff_T0 * coeff_R0) )
raster::plot(raster_atmos_pressure)
raster_day_temps <- raster("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Winter_2022/Lectures/Data/Day_temp_2001_march.tif")
raster_day_temps[raster_day_temps == 99999] <- NA
raster_night_temps <- raster("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Winter_2022/Lectures/Data/Night_temp_2001_march.TIFF")
raster_night_temps[raster_night_temps == 99999] <- NA
# Data from: https://neo.sci.gsfc.nasa.gov/view.php?datasetId=MOD_LSTD_CLIM_M
# Data from: https://neo.sci.gsfc.nasa.gov/view.php?datasetId=MOD_LSTN_CLIM_M
raster_temps_diff <- raster_day_temps - raster_night_temps
raster::plot(raster_temps_diff)
raster::hist(raster_temps_diff)
reclass_df <- c(-Inf, 3, 1,
3, 6, 2,
6, 15, 3,
15, Inf, 4
)
reclass_m <- matrix(reclass_df,
ncol = 3,
byrow = TRUE)
reclass_m
raster_temps_diff_reclass <- raster::reclassify(raster_temps_diff,
reclass_df)
raster::plot(raster_temps_diff_reclass,
col = terrain.colors(4))
borders_data <-  spData::world # borders of all countries
# Get just South Africa's borders
borders_data_southaf <- borders_data %>%
filter(name_long == "South Africa")
borders_data_southaf %>%
tm_shape() +
tm_borders()
raster_elev_southaf <- raster::mask(raster_world_elev,
borders_data_southaf)
raster::plot(raster_elev_southaf)
raster_elev_southaf <- raster::crop(raster_elev_southaf,
borders_data_southaf)
raster::plot(raster_elev_southaf)
library(tidyverse)
library(tmap)
library(sf)
library(maps)
library(raster)
cities_world <- world.cities
cities_world <- cities_world %>%
filter(capital == 1)
raster_world_elev
cities_world_sf <- cities_world %>%
st_as_sf(coords = c("long", "lat"))
View(cities_world_sf)
raster::extract(raster_world_elev, cities_world_sf)
cities_world_sf$elev__m <- raster::extract(raster_world_elev, cities_world_sf)
raster_world_elev
cities_world <- world.cities
cities_world_sf %>%
ggplot(aes(x = elev__m)) +
geom_histogram()
#elevation <- get_elev_raster(loc2use, z = 14, clip = "bbox")
#writeRaster(elevation, "./elevation_schdy.tiff")
elevation <- raster::raster("https://github.com/stahlm/stahlm.github.io/raw/master/ENS_215/Winter_2022/Lectures/Data/elevation_schdy.tif")
raster_elev <- get_elev_raster(county_schenectady,
z = 12,
clip = "locations")
library(tidyverse)
library(tmap)
library(sf)
library(elevatr)
library(tigris)
NY_counties <- counties(state = "NY",
cb = TRUE)
county_schenectady <- NY_counties %>%
filter(NAME == "Schenectady")
raster_elev <- get_elev_raster(county_schenectady,
z = 12,
clip = "locations")
raster::plot(raster_elev)
library(rnaturalearth)
borders_hires <- ne_countries(country = "Lesotho",
scale = "large",
returnclass = "sf")
raster_elev <- get_elev_raster(borders_hires,
z = 9,
clip = "locations")
raster_elev %>%
tm_shape() +
tm_raster(style = "cont", palette = terrain.colors(n = 10)) +
tm_shape(borders_hires) +
tm_borders()
library(climateR)
a <-tigris::states()
a$NAME
a <- a %>% filter(NAME == "New York")
a %>% tm_shape() + tm_borders()
a <-tigris::states(resolution = "5m")
a %>% tm_shape() + tm_borders()
a <- a %>% filter(NAME == "New York")
a %>% tm_shape() + tm_borders()
a <-tigris::states(resolution = "20m")
a <- a %>% filter(NAME == "New York")
a %>% tm_shape() + tm_borders()
library(basemaps)
loc_path <- basemap_geotif(borders_hires,
map_service = "esri",
map_type = "world_imagery",
map_res = 1.0)
loc_path
loc_basemap <- raster::stack(loc_path)
loc_basemap
#raster::plotRGB(loc_basemap)
map_full <- tm_shape(loc_basemap) +
tm_rgb() +
tm_shape(borders_hires) +
tm_borders(col = "red")
map_full
tmap_mode("view")
map_full
loc_path <- basemap_geotif(county_schenectady,
map_service = "esri",
map_type = "world_imagery",
map_res = 1.0)
loc_path
loc_basemap <- raster::stack(loc_path)
loc_basemap
#raster::plotRGB(loc_basemap)
map_full <- tm_shape(loc_basemap) +
tm_rgb() +
tm_shape(borders_hires) +
tm_borders(col = "red")
map_full
map_full
tmap_mode("plot")
climate_raster <- getTerraClimNormals(AOI = borders_hires,
param = "prcp",
period = "19812010", month = 1:12)
borders_hires <- rnaturalearth::ne_countries(country = "Lesotho",
scale = "large",
returnclass = "sf")
climate_raster <- getTerraClimNormals(AOI = borders_hires,
param = "prcp",
period = "19812010", month = 1:12)
sf::sf_use_s2(FALSE)
climate_raster <- getTerraClimNormals(AOI = borders_hires,
param = "prcp",
period = "19812010", month = 1:12)
climate_raster <- raster::crop(x = climate_raster,
y = borders_hires)
climate_raster <- raster::crop(x = climate_raster$terraclim_19812010_prcp,
y = borders_hires)
climate_raster <- raster::mask(x = climate_raster,
y = borders_hires)
climate_raster <- getTerraClimNormals(AOI = borders_hires,
param = "prcp",
period = "19812010", month = 1:12)
climate_raster$terraclim_19812010_prcp %>%
tm_shape() +
tm_raster() +
tm_shape(borders_hires) +
tm_borders()
a <- climate_raster$terraclim_19812010_prcp
b <- raster::crop(a, borders_hires)
b <- raster::mask(a, borders_hires)
b %>%
tm_shape() +
tm_raster() +
tm_shape(borders_hires) +
tm_borders()
climate_raster <- raster::crop(climate_raster, borders_hires)
climate_raster <- climate_raster$terraclim_19812010_prcp
climate_raster <- raster::crop(climate_raster, borders_hires)
climate_raster <- raster::mask(climate_raster, borders_hires)
climate_raster %>%
tm_shape() +
tm_raster() +
tm_shape(borders_hires) +
tm_borders()
lesotho_tot_prcp <- sum(climate_raster)
lesotho_tot_prcp$layer %>%
tm_shape() +
tm_raster() +
tm_shape(borders_hires) +
tm_borders()
lesotho_tot_prcp$layer %>%
tm_shape() +
tm_raster(palette = "RdBu") +
tm_shape(borders_hires) +
tm_borders()
lesotho_tot_prcp$layer %>%
tm_shape() +
tm_raster(palette = "RdBu", n = 10) +
tm_shape(borders_hires) +
tm_borders()
climate_raster %>%
tm_shape() +
tm_raster(palette = "RdBu") +
tm_shape(borders_hires) +
tm_borders()
climate_raster %>%
tm_shape() +
tm_raster(palette = "RdBu", n = 10) +
tm_shape(borders_hires) +
tm_borders()
border_NY <- USAboundaries::us_states(states = "NY",
resolution = "high")
p = getPRISM(border_NY,
param = c('tmax','tmin'),
startDate = "2023-02-04")
p = getPRISM(border_NY,
param = c('tmin'),
startDate = "2023-02-04")
p <- p$prism_tmin
p <- raster::crop(p, border_NY)
p <- raster::mask(p, border_NY)
p %>%
tm_shape() +
tm_raster() +
tm_shape(border_NY) +
tm_borders()
p %>%
tm_shape() +
tm_raster(palette = "-RdBu") +
tm_shape(border_NY) +
tm_borders()
p %>%
tm_shape() +
tm_raster(palette = "-RdBu", n = 10) +
tm_shape(border_NY) +
tm_borders()
library(USAboundaries)
border_NY <- us_states(states = "NY",
resolution = "high")
border_NY <- us_states(states = "NY",
resolution = "high")
model_meta("PRISM")
climateR::model_meta("PRISM")
param_meta$prism
param_meta$gridmet
param_meta$prism
library(tidyverse)
library(tmap)
library(sf)
library(elevatr)
library(tigris)
NY_counties <- counties(state = "NY",
cb = TRUE)
county_schenectady <- NY_counties %>%
filter(NAME == "Schenectady")
raster_elev <- get_elev_raster(county_schenectady,
z = 12,
clip = "locations")
raster::plot(raster_elev)
library(rnaturalearth)
borders_hires <- ne_countries(country = "Lesotho",
scale = "large",
returnclass = "sf")
raster_elev <- get_elev_raster(borders_hires,
z = 9,
clip = "locations")
raster_elev %>%
tm_shape() +
tm_raster(style = "cont", palette = terrain.colors(n = 10)) +
tm_shape(borders_hires) +
tm_borders()
library(climateR)
sf::sf_use_s2(FALSE)
library(USAboundaries)
param_meta$prism
border_NY <- us_states(states = "NY",
resolution = "high")
p <- getPRISM(AOI = border_NY,
param = c('tmin'),
startDate = "2023-02-04")
p <- p$prism_tmin
p <- raster::crop(p, border_NY)
p <- raster::mask(p, border_NY)
p %>%
tm_shape() +
tm_raster(palette = "-RdBu", n = 10) +
tm_shape(border_NY) +
tm_borders()
p %>%
tm_shape() +
tm_raster(palette = "Blues", n = 10) +
tm_shape(border_NY) +
tm_borders()
param_meta
param_meta$terraclim
param_meta$terraclim
borders_hires <- rnaturalearth::ne_countries(country = "Lesotho",
scale = "large",
returnclass = "sf")
climate_raster <- getTerraClimNormals(AOI = borders_hires,
param = "prcp",
period = "19812010",
month = 1:12)
climate_raster <- raster::crop(climate_raster, borders_hires)
climate_raster <- climate_raster$terraclim_19812010_prcp
climate_raster <- raster::crop(climate_raster, borders_hires)
climate_raster <- raster::mask(climate_raster, borders_hires)
climate_raster %>%
tm_shape() +
tm_raster(palette = "RdBu", n = 10) +
tm_shape(borders_hires) +
tm_borders()
lesotho_tot_prcp <- sum(climate_raster)
lesotho_tot_prcp <- lesotho_tot_prcp$layer
lesotho_tot_prcp$layer %>%
tm_shape() +
tm_raster(palette = "RdBu", n = 10) +
tm_shape(borders_hires) +
tm_borders()
climate_raster_monthly <- getTerraClim(AOI = borders_hires,
param = "prcp",
startDate = "2021-01-01"
)
climate_raster_monthly <- getTerraClim(AOI = borders_hires,
param = "prcp",
startDate = "2018-01-01"
)
2+2
remotes::install_github("mikejohnson51/climateR")
remotes::install_github("mikejohnson51/climateR")
remotes::install_github("mikejohnson51/climateR")
remotes::install_github("mikejohnson51/climateR")
