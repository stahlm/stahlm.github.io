---
title: "Lab1: EPA Fuel Analysis"
author: "Patrick Mulready"
date: "January 9th 2023"
output: html_document
---
# Part 1: Guided analysis 

#### Loading the `tidyverse` package. 
```{r}
library(tidyverse)
```

#### Assigning the data that we will be using, called `"mpg"`, to a new object, called `"fuel_data"`. 
```{r}
fuel_data <- mpg
```
#### Examining the structure of `fuel_data` 
```{r}
str(fuel_data)
```
##### We can see that there are 234 observations (rows) and 11 variables (columns) in the fuel_data dataset. The column that contains `"chr"`, `"int"`, and `"num"` indicates the type of data the column contains, such as characters, integers, and numerical data respectively. It also shows us the first few entries for every column, beginning alphabetically with Audi.  
  
#### The next function will allow us to see the first six rows of the dataset. 

```{r}
head(fuel_data)
```
##### Using the `?mpg` function, I can find out that `"disp"` indicates the engine displacement in liters, `"cyl"` indicates the number of cylinders, and `"cty"` indicates city miles per gallon. The data was obtained from https://fueleconomy.gov/, a website with fuel economy data from the EPA.  
  
#### Now we will find out the number of rows and columns with the `dim()` function. 
```{r}
dim(fuel_data)
```
#### We can see that this data frame contains 234 rows and 11 columns. I will now assign the number of rows to the variable `n_rows` and the number of clumns to `n_cols`. 
```{r}
n_rows <- nrow(fuel_data)
n_cols <- ncol(fuel_data)
```
#### Now we will get a summary of the dataset using the `summary()` function. 
```{r}
summary(fuel_data)
```
##### This provides some basic information about the data frame and the different variables. Looking at min and max values for the `hwy` column, we can see that the most fuel efficient vehicle gets 44 miles to the gallon on the highway, and the least fuel efficient vehicle gets only 12 miles to the gallon. In the `city` column, we can see that the average (mean) mpg for city driving is 16.86.  
  
  
#### We will now create a new variable to represent the ratio of highway to city fuel efficiency using the `mutate()` function. 

```{r}
fuel_data <- mutate(fuel_data, hwy2cty = hwy/cty)
```

#### Now I will examine this new variable by summarizing `fuel_data` again. 

```{r}
summary(fuel_data)
```
#### This information can provide us with some conclusions. Because the minimum value is greater than 1, we know that there are **not** any vehicles that get better mileage in the city than in the highway. Because the maximum value is less than 2, we know that there are **no** vehicles that have a highway mileage twice as good as it's city mileage. The largest ratio is 1.667. 

#### Now we will examine how the size of a vehicle's engine, measured in displacement (`displ`), affects it's fuel efficiency.

```{r}
ggplot(data = fuel_data) + geom_point(aes(x = displ, y = hwy))
```
##### With this graph, we can see that as engine size increases, fuel efficiency generally decreases. Some outliers appear. The vehicle with the largest engine, 7 liters, has comparatively better gas mileage than other large engined vehicles. This could be due to the fact that some vehicles with large engines, such as sports cars, are lighter in total than vehicles such as trucks. 

#### Next, we will create the same graph, but we will color the points by their vehicle class to try to better understand how vehicle type affects fuel efficiency. 

```{r}
ggplot(data = fuel_data) + geom_point(aes(x = displ, y = hwy, color = class))
```
##### This graph provides us with important new information. First, our previous hypothesis was correct. Two seaters, which tend to be light sports cars with large engines, are the vehicles that have the greatest displacement but comparatively better mileage. The vehicle types that have the worst efficiency are pickups and suv's, while the vehicles that have the best efficiency are subcompacts and compacts. This suggests that perhaps vehicles with a lower total weight are generally more efficient. 

#### The next step will add a new variable, `region`, to `fuel_data` using the `mutate()` function. 

```{r}
us_makes <- c("chevrolet", "dodge", "ford", "jeep", "lincoln", "mercury", "pontiac") 

fuel_data <- mutate(fuel_data, region = if_else(manufacturer %in% us_makes,"US","Foreign"))
```

##### That code took a list of U.S. manufacturers and used that list to distinguish between `US` and `Foreign` made cars. Now, the variable `region` is telling us whether a car is foreign or domestic. 

# Part 2: Independent analysis 

##### One question that occurred to me was whether newer vehicles are more fuel efficient than older vehicles. We often hear that modern technology is making new vehicles more efficient than older, more polluting vehicles. Unfortunately this dataset does not contain vehicles from a range of time, but only from two years, 1999 and 2008. I tried to go ahead with the analysis anyways.   

##### First, I created a new object called `model_year` and assigned it the number 1999. Next, I took the code from before and mutated the data to add a column based on the model year. If the year was 1999, it was assigned `Old`, and if the year was 2008, it was assigned `New`. I am unsure if this step was necessary, but it worked for me. Finally, I plotted the data using a box and whisker plot. 
```{r}
model_year <- 1999

fuel_data <- mutate(fuel_data, age = if_else(year %in% model_year,"Old","New"))
```

```{r}
ggplot(data = fuel_data) + geom_boxplot(aes(x = age, y = hwy))
```
##### This is, admittedly, a pretty ridiculous graph. But there are still things that can be learned from it. First, on average, the 1999 vehicles are actually slightly more fuel efficient than the 2008 vehicles, so perhaps the concept of newer cars being more fuel efficient is a myth, at least in the very narrow scope of this data table. All in all, this isn't an incredibly informative graph, so let me try something else. 

```{r}
ggplot(data = fuel_data) + geom_boxplot(aes(x = region, y = hwy))
```
##### This graph is using exactly the same code as the previous graph, but instead of comparing the age of the vehicles, I am comparing whether they are foreign or domestic. This is a much more informative graph. We can see that foreign vehicles are much more fuel efficient than domestic vehicles. In fact, even the bottom 75th percentile of foreign vehicles are more fuel efficient than the top 25 percentile of domestic vehicles. The outliers for foreign cars are much higher and much lower, giving it a greater total range. I am going to continue in trying to figure out *why* domestic cars are less fuel efficient. 

```{r}
ggplot(data = fuel_data) + geom_boxplot(aes(x = region, y = displ))
```
##### This graph, comparing engine size between foreign and domestic cars, is illuminating. If we remember back to our earlier graph, vehicles with larger engines tend to be less fuel efficient. This graph is saying that the United States manufactures cars with much larger engines on average, leading to a generally decreased fuel efficiency in domestic vehicles. I am going to look at this from one final angle. 

```{r}
ggplot(data = fuel_data) + geom_line(aes(x = cyl, y = hwy))
```
##### This graph compares the number of cylinders with highway fuel efficiency. I was unable to graph this as a boxplot, but a line graph basically does the trick. We can see that the more cylinders a car has, the less fuel efficient it is. Now to graph the number of cylinders in foreign vs. domestic vehicles.  

```{r}
ggplot(data = fuel_data) + geom_boxplot(aes(x = region, y = cyl))
```
##### Just as I expected, the data overwhelmingly indicate that domestic vehicles tend to have more cylinders than foreign vehicles, contributing to their lack of fuel efficiency. Even though these graphs are relatively simple to construct, we are already beginning to reveal the difference in fuel efficiency between domestic vehicles and foreign vehicles, as well as some of the possible reasons why that is. This is, of course, a limited data set likely meant only for demonstration purposes and anyone doing real analysis should refer to the full data set provided by the EPA. 

