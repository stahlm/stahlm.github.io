---
title: "Elevation data: Schenectady"
output: html_document
---

## Load in packages
```{r}
library(elevatr)
library(AOI)

library(tmap)

library(tidyverse)
library(ggridges)
library(sf)
```

## Get bounding box coordinates for Union
```{r}
loc2use <- aoi_get(state =  "NY")
```


```{r}
elevation <- get_elev_raster(loc2use, z = 7, clip = "bbox")
```


```{r}
tmap_mode("plot")
fig_map <- elevation %>% 
  tm_shape() +
  
  tm_raster(style = "cont")


fig_map
```


```{r}
border_NY <- USAboundaries::us_states(states = "NY")
```


```{r}
fig_map + tm_shape(border_NY) +
  tm_borders()
```


```{r}
elevation_cropped <- raster::mask(elevation, border_NY) # mask the raster


```


```{r}
elevation_cropped <- raster::crop(elevation_cropped, border_NY)
```



```{r}
fig_map_cropped <- elevation_cropped %>% 
  tm_shape() +
  
  tm_raster(style = "cont", palette = "Greys")


fig_map_cropped
```

```{r}
## Sample 10000 values
df_ny <- data.frame(raster::sampleRegular(elevation_cropped,
                                          40000, xy=TRUE))

```

```{r}
df_ny <- df_ny %>% 
  rename(elevation_m = names(df_ny)[3])
```

### Ridgeline version 1
```{r}
ggplot() +
  geom_density_ridges(data = df_ny,
                      aes(x, y, 
                          group=y,
                          height = elevation_m),
                      stat = "identity",
                      color = "black",
                      fill = "white",
                      scale= 20) +
  theme_void()
```
<br/>  


### Ridgeline version 2 (retro)
```{r}
ggplot() +
  geom_density_ridges(data = df_ny,
                      aes(x, y, 
                          group=y,
                          height = elevation_m),
                      stat = "identity",
                      color = "green",
                      fill = "black",
                      scale= 20) +
  theme_void() +
  
  theme(panel.background = element_rect(fill = "black"),    
        plot.background = element_rect(fill = "black")
    )
```


## Contour map

```{r}
# elev_contours <- raster::rasterToContour(elevation)
```

```{r}
# tm_shape(elev_contours) +
#   tm_iso()
```
```{r}
library(rayshader)
```



```{r}
elmat = rayshader::raster_to_matrix(elevation)

#We use another one of rayshader's built-in textures:
elmat %>%
  sphere_shade(texture = "bw", zscale = 0.2, sunangle = 45) %>%
  plot_map()
```


